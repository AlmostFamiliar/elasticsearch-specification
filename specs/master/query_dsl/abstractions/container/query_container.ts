
/**namespace:QueryDsl.Abstractions.Container */
/**custom_serialization*/
interface query_container {
	IsConditionless: boolean;
	IsStrict: boolean;
	IsVerbatim: boolean;
	RawQuery: raw_query;
	bool: bool_query;
	match_all: match_all_query;
	term: term_query;
	wildcard: wildcard_query;
	prefix: prefix_query;
	boosting: boosting_query;
	ids: ids_query;
	limit: limit_query;
	constant_score: constant_score_query;
	dis_max: dis_max_query;
	multi_match: multi_match_query;
	match: match_query;
	fuzzy: fuzzy_query;
	geo_shape: geo_shape_query;
	common: common_terms_query;
	terms: terms_query;
	range: range_query;
	regexp: regexp_query;
	has_child: has_child_query;
	has_parent: has_parent_query;
	span_term: span_term_query;
	simple_query_string: simple_query_string_query;
	query_string: query_string_query;
	mlt: more_like_this_query;
	span_first: span_first_query;
	span_or: span_or_query;
	span_near: span_near_query;
	span_not: span_not_query;
	span_containing: span_containing_query;
	span_within: span_within_query;
	span_multi: span_multi_term_query;
	nested: nested_query;
	indices: indices_query;
	function_score: function_score_query;
	template: template_query;
	geo_bounding_box: geo_bounding_box_query;
	geo_distance: geo_distance_query;
	geo_polygon: geo_polygon_query;
	geo_distance_range: geo_distance_range_query;
	geohash_cell: geo_hash_cell_query;
	script: script_query;
	exists: exists_query;
	missing: missing_query;
	type: type_query;
	filtered: filtered_query;
	and: and_query;
	or: or_query;
	not: not_query;
}