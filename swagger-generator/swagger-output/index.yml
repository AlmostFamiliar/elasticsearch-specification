swagger: '2.0'
info:
  version: 0.0.0
  title: Elasticsearch swagger documentation
paths:
  /_cat/aliases:
    parameters:
      - in: query
        name: format
        description: 'a short version of the Accept header, e.g. json, yaml'
        type: string
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: h
        description: Comma-separated list of column names to display
        type: string
      - in: query
        name: help
        description: Return help information
        type: boolean
      - in: query
        name: s
        description: Comma-separated list of column names or column aliases to sort by
        type: string
      - in: query
        name: v
        description: Verbose mode. Display column headers
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CatAliasesResponse/properties/records'
      tags:
        - cat.aliases
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-alias.html'
  '/_cat/aliases/{name}':
    parameters:
      - in: query
        name: format
        description: 'a short version of the Accept header, e.g. json, yaml'
        type: string
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: h
        description: Comma-separated list of column names to display
        type: string
      - in: query
        name: help
        description: Return help information
        type: boolean
      - in: query
        name: s
        description: Comma-separated list of column names or column aliases to sort by
        type: string
      - in: query
        name: v
        description: Verbose mode. Display column headers
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CatAliasesResponse/properties/records'
      tags:
        - cat.aliases
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: name
          required: true
          description: A comma-separated list of alias names to return
          type: string
          format: Names
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-alias.html'
  /_cat/allocation:
    parameters:
      - in: query
        name: format
        description: 'a short version of the Accept header, e.g. json, yaml'
        type: string
      - in: query
        name: bytes
        description: The unit in which to display byte values
        type: string
        format: bytes
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: h
        description: Comma-separated list of column names to display
        type: string
      - in: query
        name: help
        description: Return help information
        type: boolean
      - in: query
        name: s
        description: Comma-separated list of column names or column aliases to sort by
        type: string
      - in: query
        name: v
        description: Verbose mode. Display column headers
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CatAllocationResponse/properties/records'
      tags:
        - cat.allocation
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-allocation.html'
  '/_cat/allocation/{node_id}':
    parameters:
      - in: query
        name: format
        description: 'a short version of the Accept header, e.g. json, yaml'
        type: string
      - in: query
        name: bytes
        description: The unit in which to display byte values
        type: string
        format: bytes
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: h
        description: Comma-separated list of column names to display
        type: string
      - in: query
        name: help
        description: Return help information
        type: boolean
      - in: query
        name: s
        description: Comma-separated list of column names or column aliases to sort by
        type: string
      - in: query
        name: v
        description: Verbose mode. Display column headers
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CatAllocationResponse/properties/records'
      tags:
        - cat.allocation
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: node_id
          required: true
          description: A comma-separated list of node IDs or names to limit the returned information
          type: string
          format: NodeIds
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-allocation.html'
  /_cat/count:
    parameters:
      - in: query
        name: format
        description: 'a short version of the Accept header, e.g. json, yaml'
        type: string
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: h
        description: Comma-separated list of column names to display
        type: string
      - in: query
        name: help
        description: Return help information
        type: boolean
      - in: query
        name: s
        description: Comma-separated list of column names or column aliases to sort by
        type: string
      - in: query
        name: v
        description: Verbose mode. Display column headers
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CatCountResponse/properties/records'
      tags:
        - cat.count
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-count.html'
  '/_cat/count/{index}':
    parameters:
      - in: query
        name: format
        description: 'a short version of the Accept header, e.g. json, yaml'
        type: string
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: h
        description: Comma-separated list of column names to display
        type: string
      - in: query
        name: help
        description: Return help information
        type: boolean
      - in: query
        name: s
        description: Comma-separated list of column names or column aliases to sort by
        type: string
      - in: query
        name: v
        description: Verbose mode. Display column headers
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CatCountResponse/properties/records'
      tags:
        - cat.count
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names to limit the returned information
          type: string
          format: Indices
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-count.html'
  /_cat/fielddata:
    parameters:
      - in: query
        name: format
        description: 'a short version of the Accept header, e.g. json, yaml'
        type: string
      - in: query
        name: bytes
        description: The unit in which to display byte values
        type: string
        format: bytes
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: h
        description: Comma-separated list of column names to display
        type: string
      - in: query
        name: help
        description: Return help information
        type: boolean
      - in: query
        name: s
        description: Comma-separated list of column names or column aliases to sort by
        type: string
      - in: query
        name: v
        description: Verbose mode. Display column headers
        type: boolean
      - in: query
        name: fields
        description: A comma-separated list of fields to return in the output
        type: string
        format: Fields
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CatFielddataResponse/properties/records'
      tags:
        - cat.fielddata
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-fielddata.html'
  '/_cat/fielddata/{fields}':
    parameters:
      - in: query
        name: format
        description: 'a short version of the Accept header, e.g. json, yaml'
        type: string
      - in: query
        name: bytes
        description: The unit in which to display byte values
        type: string
        format: bytes
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: h
        description: Comma-separated list of column names to display
        type: string
      - in: query
        name: help
        description: Return help information
        type: boolean
      - in: query
        name: s
        description: Comma-separated list of column names or column aliases to sort by
        type: string
      - in: query
        name: v
        description: Verbose mode. Display column headers
        type: boolean
      - in: query
        name: fields
        description: A comma-separated list of fields to return in the output
        type: string
        format: Fields
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CatFielddataResponse/properties/records'
      tags:
        - cat.fielddata
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: fields
          required: true
          description: A comma-separated list of fields to return the fielddata size
          type: string
          format: Fields
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-fielddata.html'
  /_cat/health:
    parameters:
      - in: query
        name: format
        description: 'a short version of the Accept header, e.g. json, yaml'
        type: string
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: h
        description: Comma-separated list of column names to display
        type: string
      - in: query
        name: help
        description: Return help information
        type: boolean
      - in: query
        name: s
        description: Comma-separated list of column names or column aliases to sort by
        type: string
      - in: query
        name: ts
        description: Set to false to disable timestamping
        type: boolean
      - in: query
        name: v
        description: Verbose mode. Display column headers
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CatHealthResponse/properties/records'
      tags:
        - cat.health
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-health.html'
  /_cat:
    parameters:
      - in: query
        name: help
        description: Return help information
        type: boolean
      - in: query
        name: s
        description: Comma-separated list of column names or column aliases to sort by
        type: string
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CatHelpResponse/properties/records'
      tags:
        - cat.help
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/cat.html'
  /_cat/indices:
    parameters:
      - in: query
        name: format
        description: 'a short version of the Accept header, e.g. json, yaml'
        type: string
      - in: query
        name: bytes
        description: The unit in which to display byte values
        type: string
        format: bytes
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: h
        description: Comma-separated list of column names to display
        type: string
      - in: query
        name: health
        description: 'A health status ("green", "yellow", or "red" to filter only indices matching the specified health status'
        type: string
        format: health
      - in: query
        name: help
        description: Return help information
        type: boolean
      - in: query
        name: pri
        description: Set to true to return stats only for primary shards
        type: boolean
      - in: query
        name: s
        description: Comma-separated list of column names or column aliases to sort by
        type: string
      - in: query
        name: v
        description: Verbose mode. Display column headers
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CatIndicesResponse/properties/records'
      tags:
        - cat.indices
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-indices.html'
  '/_cat/indices/{index}':
    parameters:
      - in: query
        name: format
        description: 'a short version of the Accept header, e.g. json, yaml'
        type: string
      - in: query
        name: bytes
        description: The unit in which to display byte values
        type: string
        format: bytes
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: h
        description: Comma-separated list of column names to display
        type: string
      - in: query
        name: health
        description: 'A health status ("green", "yellow", or "red" to filter only indices matching the specified health status'
        type: string
        format: health
      - in: query
        name: help
        description: Return help information
        type: boolean
      - in: query
        name: pri
        description: Set to true to return stats only for primary shards
        type: boolean
      - in: query
        name: s
        description: Comma-separated list of column names or column aliases to sort by
        type: string
      - in: query
        name: v
        description: Verbose mode. Display column headers
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CatIndicesResponse/properties/records'
      tags:
        - cat.indices
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names to limit the returned information
          type: string
          format: Indices
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-indices.html'
  /_cat/master:
    parameters:
      - in: query
        name: format
        description: 'a short version of the Accept header, e.g. json, yaml'
        type: string
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: h
        description: Comma-separated list of column names to display
        type: string
      - in: query
        name: help
        description: Return help information
        type: boolean
      - in: query
        name: s
        description: Comma-separated list of column names or column aliases to sort by
        type: string
      - in: query
        name: v
        description: Verbose mode. Display column headers
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CatMasterResponse/properties/records'
      tags:
        - cat.master
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-master.html'
  /_cat/nodeattrs:
    parameters:
      - in: query
        name: format
        description: 'a short version of the Accept header, e.g. json, yaml'
        type: string
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: h
        description: Comma-separated list of column names to display
        type: string
      - in: query
        name: help
        description: Return help information
        type: boolean
      - in: query
        name: s
        description: Comma-separated list of column names or column aliases to sort by
        type: string
      - in: query
        name: v
        description: Verbose mode. Display column headers
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CatNodeAttributesResponse/properties/records'
      tags:
        - cat.nodeattrs
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-nodeattrs.html'
  /_cat/nodes:
    parameters:
      - in: query
        name: format
        description: 'a short version of the Accept header, e.g. json, yaml'
        type: string
      - in: query
        name: full_id
        description: 'Return the full node ID instead of the shortened version (default: false)'
        type: boolean
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: h
        description: Comma-separated list of column names to display
        type: string
      - in: query
        name: help
        description: Return help information
        type: boolean
      - in: query
        name: s
        description: Comma-separated list of column names or column aliases to sort by
        type: string
      - in: query
        name: v
        description: Verbose mode. Display column headers
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CatNodesResponse/properties/records'
      tags:
        - cat.nodes
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-nodes.html'
  /_cat/pending_tasks:
    parameters:
      - in: query
        name: format
        description: 'a short version of the Accept header, e.g. json, yaml'
        type: string
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: h
        description: Comma-separated list of column names to display
        type: string
      - in: query
        name: help
        description: Return help information
        type: boolean
      - in: query
        name: s
        description: Comma-separated list of column names or column aliases to sort by
        type: string
      - in: query
        name: v
        description: Verbose mode. Display column headers
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CatPendingTasksResponse/properties/records'
      tags:
        - cat.pending_tasks
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-pending-tasks.html'
  /_cat/plugins:
    parameters:
      - in: query
        name: format
        description: 'a short version of the Accept header, e.g. json, yaml'
        type: string
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: h
        description: Comma-separated list of column names to display
        type: string
      - in: query
        name: help
        description: Return help information
        type: boolean
      - in: query
        name: s
        description: Comma-separated list of column names or column aliases to sort by
        type: string
      - in: query
        name: v
        description: Verbose mode. Display column headers
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CatPluginsResponse/properties/records'
      tags:
        - cat.plugins
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-plugins.html'
  /_cat/recovery:
    parameters:
      - in: query
        name: format
        description: 'a short version of the Accept header, e.g. json, yaml'
        type: string
      - in: query
        name: bytes
        description: The unit in which to display byte values
        type: string
        format: bytes
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: h
        description: Comma-separated list of column names to display
        type: string
      - in: query
        name: help
        description: Return help information
        type: boolean
      - in: query
        name: s
        description: Comma-separated list of column names or column aliases to sort by
        type: string
      - in: query
        name: v
        description: Verbose mode. Display column headers
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CatRecoveryResponse/properties/records'
      tags:
        - cat.recovery
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-recovery.html'
  '/_cat/recovery/{index}':
    parameters:
      - in: query
        name: format
        description: 'a short version of the Accept header, e.g. json, yaml'
        type: string
      - in: query
        name: bytes
        description: The unit in which to display byte values
        type: string
        format: bytes
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: h
        description: Comma-separated list of column names to display
        type: string
      - in: query
        name: help
        description: Return help information
        type: boolean
      - in: query
        name: s
        description: Comma-separated list of column names or column aliases to sort by
        type: string
      - in: query
        name: v
        description: Verbose mode. Display column headers
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CatRecoveryResponse/properties/records'
      tags:
        - cat.recovery
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names to limit the returned information
          type: string
          format: Indices
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-recovery.html'
  /_cat/repositories:
    parameters:
      - in: query
        name: format
        description: 'a short version of the Accept header, e.g. json, yaml'
        type: string
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node'
        type: boolean
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: h
        description: Comma-separated list of column names to display
        type: string
      - in: query
        name: help
        description: Return help information
        type: boolean
      - in: query
        name: s
        description: Comma-separated list of column names or column aliases to sort by
        type: string
      - in: query
        name: v
        description: Verbose mode. Display column headers
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CatRepositoriesResponse/properties/records'
      tags:
        - cat.repositories
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-repositories.html'
  /_cat/segments:
    parameters:
      - in: query
        name: format
        description: 'a short version of the Accept header, e.g. json, yaml'
        type: string
      - in: query
        name: bytes
        description: The unit in which to display byte values
        type: string
        format: bytes
      - in: query
        name: h
        description: Comma-separated list of column names to display
        type: string
      - in: query
        name: help
        description: Return help information
        type: boolean
      - in: query
        name: s
        description: Comma-separated list of column names or column aliases to sort by
        type: string
      - in: query
        name: v
        description: Verbose mode. Display column headers
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CatSegmentsResponse/properties/records'
      tags:
        - cat.segments
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-segments.html'
  '/_cat/segments/{index}':
    parameters:
      - in: query
        name: format
        description: 'a short version of the Accept header, e.g. json, yaml'
        type: string
      - in: query
        name: bytes
        description: The unit in which to display byte values
        type: string
        format: bytes
      - in: query
        name: h
        description: Comma-separated list of column names to display
        type: string
      - in: query
        name: help
        description: Return help information
        type: boolean
      - in: query
        name: s
        description: Comma-separated list of column names or column aliases to sort by
        type: string
      - in: query
        name: v
        description: Verbose mode. Display column headers
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CatSegmentsResponse/properties/records'
      tags:
        - cat.segments
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names to limit the returned information
          type: string
          format: Indices
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-segments.html'
  /_cat/shards:
    parameters:
      - in: query
        name: format
        description: 'a short version of the Accept header, e.g. json, yaml'
        type: string
      - in: query
        name: bytes
        description: The unit in which to display byte values
        type: string
        format: bytes
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: h
        description: Comma-separated list of column names to display
        type: string
      - in: query
        name: help
        description: Return help information
        type: boolean
      - in: query
        name: s
        description: Comma-separated list of column names or column aliases to sort by
        type: string
      - in: query
        name: v
        description: Verbose mode. Display column headers
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CatShardsResponse/properties/records'
      tags:
        - cat.shards
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-shards.html'
  '/_cat/shards/{index}':
    parameters:
      - in: query
        name: format
        description: 'a short version of the Accept header, e.g. json, yaml'
        type: string
      - in: query
        name: bytes
        description: The unit in which to display byte values
        type: string
        format: bytes
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: h
        description: Comma-separated list of column names to display
        type: string
      - in: query
        name: help
        description: Return help information
        type: boolean
      - in: query
        name: s
        description: Comma-separated list of column names or column aliases to sort by
        type: string
      - in: query
        name: v
        description: Verbose mode. Display column headers
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CatShardsResponse/properties/records'
      tags:
        - cat.shards
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names to limit the returned information
          type: string
          format: Indices
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-shards.html'
  /_cat/snapshots:
    parameters:
      - in: query
        name: format
        description: 'a short version of the Accept header, e.g. json, yaml'
        type: string
      - in: query
        name: ignore_unavailable
        description: Set to true to ignore unavailable snapshots
        type: boolean
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: h
        description: Comma-separated list of column names to display
        type: string
      - in: query
        name: help
        description: Return help information
        type: boolean
      - in: query
        name: s
        description: Comma-separated list of column names or column aliases to sort by
        type: string
      - in: query
        name: v
        description: Verbose mode. Display column headers
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CatSnapshotsResponse/properties/records'
      tags:
        - cat.snapshots
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-snapshots.html'
  '/_cat/snapshots/{repository}':
    parameters:
      - in: query
        name: format
        description: 'a short version of the Accept header, e.g. json, yaml'
        type: string
      - in: query
        name: ignore_unavailable
        description: Set to true to ignore unavailable snapshots
        type: boolean
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: h
        description: Comma-separated list of column names to display
        type: string
      - in: query
        name: help
        description: Return help information
        type: boolean
      - in: query
        name: s
        description: Comma-separated list of column names or column aliases to sort by
        type: string
      - in: query
        name: v
        description: Verbose mode. Display column headers
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CatSnapshotsResponse/properties/records'
      tags:
        - cat.snapshots
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: repository
          required: true
          description: Name of repository from which to fetch the snapshot information
          type: string
          format: Names
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-snapshots.html'
  /_cat/tasks:
    parameters:
      - in: query
        name: format
        description: 'a short version of the Accept header, e.g. json, yaml'
        type: string
      - in: query
        name: node_id
        description: 'A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you''re connecting to, leave empty to get information from all nodes'
        type: string
      - in: query
        name: actions
        description: A comma-separated list of actions that should be returned. Leave empty to return all.
        type: string
      - in: query
        name: detailed
        description: 'Return detailed task information (default: false)'
        type: boolean
      - in: query
        name: parent_node
        description: Return tasks with specified parent node.
        type: string
      - in: query
        name: parent_task
        description: Return tasks with specified parent task id. Set to -1 to return all.
        type: integer
        format: long
      - in: query
        name: h
        description: Comma-separated list of column names to display
        type: string
      - in: query
        name: help
        description: Return help information
        type: boolean
      - in: query
        name: s
        description: Comma-separated list of column names or column aliases to sort by
        type: string
      - in: query
        name: v
        description: Verbose mode. Display column headers
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CatTasksResponse/properties/records'
      tags:
        - cat.tasks
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/tasks.html'
  /_cat/templates:
    parameters:
      - in: query
        name: format
        description: 'a short version of the Accept header, e.g. json, yaml'
        type: string
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: h
        description: Comma-separated list of column names to display
        type: string
      - in: query
        name: help
        description: Return help information
        type: boolean
      - in: query
        name: s
        description: Comma-separated list of column names or column aliases to sort by
        type: string
      - in: query
        name: v
        description: Verbose mode. Display column headers
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CatTemplatesResponse/properties/records'
      tags:
        - cat.templates
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-templates.html'
  '/_cat/templates/{name}':
    parameters:
      - in: query
        name: format
        description: 'a short version of the Accept header, e.g. json, yaml'
        type: string
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: h
        description: Comma-separated list of column names to display
        type: string
      - in: query
        name: help
        description: Return help information
        type: boolean
      - in: query
        name: s
        description: Comma-separated list of column names or column aliases to sort by
        type: string
      - in: query
        name: v
        description: Verbose mode. Display column headers
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CatTemplatesResponse/properties/records'
      tags:
        - cat.templates
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: name
          required: true
          description: A pattern that returned template names must match
          type: string
          format: Name
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-templates.html'
  /_cat/thread_pool:
    parameters:
      - in: query
        name: format
        description: 'a short version of the Accept header, e.g. json, yaml'
        type: string
      - in: query
        name: size
        description: The multiplier in which to display values
        type: string
        format: size
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: h
        description: Comma-separated list of column names to display
        type: string
      - in: query
        name: help
        description: Return help information
        type: boolean
      - in: query
        name: s
        description: Comma-separated list of column names or column aliases to sort by
        type: string
      - in: query
        name: v
        description: Verbose mode. Display column headers
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CatThreadPoolResponse/properties/records'
      tags:
        - cat.thread_pool
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-thread-pool.html'
  '/_cat/thread_pool/{thread_pool_patterns}':
    parameters:
      - in: query
        name: format
        description: 'a short version of the Accept header, e.g. json, yaml'
        type: string
      - in: query
        name: size
        description: The multiplier in which to display values
        type: string
        format: size
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: h
        description: Comma-separated list of column names to display
        type: string
      - in: query
        name: help
        description: Return help information
        type: boolean
      - in: query
        name: s
        description: Comma-separated list of column names or column aliases to sort by
        type: string
      - in: query
        name: v
        description: Verbose mode. Display column headers
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CatThreadPoolResponse/properties/records'
      tags:
        - cat.thread_pool
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: thread_pool_patterns
          required: true
          description: A comma-separated list of regular-expressions to filter the thread pools in the output
          type: string
          format: Names
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-thread-pool.html'
  /_cluster/allocation/explain:
    parameters:
      - in: query
        name: include_yes_decisions
        description: 'Return ''YES'' decisions in explanation (default: false)'
        type: boolean
      - in: query
        name: include_disk_info
        description: 'Return information about disk usage and shard sizes (default: false)'
        type: boolean
      - in: body
        name: request
        description: 'The index, shard, and primary flag to explain. Empty means ''explain the first unassigned shard'''
        required: false
        schema:
          $ref: '#/definitions/ClusterAllocationExplainRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ClusterAllocationExplainResponse'
      tags:
        - cluster.allocation_explain
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-allocation-explain.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ClusterAllocationExplainResponse'
      tags:
        - cluster.allocation_explain
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-allocation-explain.html'
  /_cluster/health:
    parameters:
      - in: query
        name: level
        description: Specify the level of detail for returned information
        type: string
        format: level
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: wait_for_active_shards
        description: Wait until the specified number of shards is active
        type: string
      - in: query
        name: wait_for_nodes
        description: Wait until the specified number of nodes is available
        type: string
      - in: query
        name: wait_for_events
        description: Wait until all currently queued events with the given priority are processed
        type: string
        format: wait_for_events
      - in: query
        name: wait_for_no_relocating_shards
        description: Whether to wait until there are no relocating shards in the cluster
        type: boolean
      - in: query
        name: wait_for_no_initializing_shards
        description: Whether to wait until there are no initializing shards in the cluster
        type: boolean
      - in: query
        name: wait_for_status
        description: Wait until cluster is in a specific state
        type: string
        format: wait_for_status
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ClusterHealthResponse'
      tags:
        - cluster.health
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-health.html'
  '/_cluster/health/{index}':
    parameters:
      - in: query
        name: level
        description: Specify the level of detail for returned information
        type: string
        format: level
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: wait_for_active_shards
        description: Wait until the specified number of shards is active
        type: string
      - in: query
        name: wait_for_nodes
        description: Wait until the specified number of nodes is available
        type: string
      - in: query
        name: wait_for_events
        description: Wait until all currently queued events with the given priority are processed
        type: string
        format: wait_for_events
      - in: query
        name: wait_for_no_relocating_shards
        description: Whether to wait until there are no relocating shards in the cluster
        type: boolean
      - in: query
        name: wait_for_no_initializing_shards
        description: Whether to wait until there are no initializing shards in the cluster
        type: boolean
      - in: query
        name: wait_for_status
        description: Wait until cluster is in a specific state
        type: string
        format: wait_for_status
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ClusterHealthResponse'
      tags:
        - cluster.health
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: Limit the information returned to a specific index
          type: string
          format: Indices
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-health.html'
  /_cluster/pending_tasks:
    parameters:
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
      - in: query
        name: master_timeout
        description: Specify timeout for connection to master
        type: string
        format: time
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ClusterPendingTasksResponse'
      tags:
        - cluster.pending_tasks
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-pending.html'
  /_cluster/reroute:
    parameters:
      - in: query
        name: dry_run
        description: Simulate the operation only and return the resulting state
        type: boolean
      - in: query
        name: explain
        description: Return an explanation of why the commands can or cannot be executed
        type: boolean
      - in: query
        name: retry_failed
        description: Retries allocation of shards that are blocked due to too many subsequent allocation failures
        type: boolean
      - in: query
        name: metric
        description: Limit the information returned to the specified metrics. Defaults to all but metadata
        type: string
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: body
        name: request
        description: 'The definition of `commands` to perform (`move`, `cancel`, `allocate`)'
        required: false
        schema:
          $ref: '#/definitions/ClusterRerouteRequest'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ClusterRerouteResponse'
      tags:
        - cluster.reroute
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-reroute.html'
  /_cluster/settings:
    parameters:
      - in: query
        name: flat_settings
        description: 'Return settings in flat format (default: false)'
        type: boolean
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: body
        name: request
        description: The settings to be updated. Can be either `transient` or `persistent` (survives cluster restart).
        required: true
        schema:
          $ref: '#/definitions/ClusterPutSettingsRequest'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ClusterPutSettingsResponse'
      tags:
        - cluster.put_settings
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-update-settings.html'
  /_cluster/state:
    parameters:
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
      - in: query
        name: master_timeout
        description: Specify timeout for connection to master
        type: string
        format: time
      - in: query
        name: flat_settings
        description: 'Return settings in flat format (default: false)'
        type: boolean
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ClusterStateResponse'
      tags:
        - cluster.state
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-state.html'
  '/_cluster/state/{metric}':
    parameters:
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
      - in: query
        name: master_timeout
        description: Specify timeout for connection to master
        type: string
        format: time
      - in: query
        name: flat_settings
        description: 'Return settings in flat format (default: false)'
        type: boolean
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ClusterStateResponse'
      tags:
        - cluster.state
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: metric
          required: true
          description: Limit the information returned to the specified metrics
          type: string
          format: Metrics
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-state.html'
  '/_cluster/state/{metric}/{index}':
    parameters:
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
      - in: query
        name: master_timeout
        description: Specify timeout for connection to master
        type: string
        format: time
      - in: query
        name: flat_settings
        description: 'Return settings in flat format (default: false)'
        type: boolean
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ClusterStateResponse'
      tags:
        - cluster.state
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices
          type: string
          format: Indices
        - in: path
          name: metric
          required: true
          description: Limit the information returned to the specified metrics
          type: string
          format: Metrics
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-state.html'
  /_cluster/stats:
    parameters:
      - in: query
        name: flat_settings
        description: 'Return settings in flat format (default: false)'
        type: boolean
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ClusterStatsResponse'
      tags:
        - cluster.stats
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-stats.html'
  '/_cluster/stats/nodes/{node_id}':
    parameters:
      - in: query
        name: flat_settings
        description: 'Return settings in flat format (default: false)'
        type: boolean
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ClusterStatsResponse'
      tags:
        - cluster.stats
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: node_id
          required: true
          description: 'A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you''re connecting to, leave empty to get information from all nodes'
          type: string
          format: NodeIds
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-stats.html'
  /_cluster/nodes/hotthreads:
    parameters:
      - in: query
        name: interval
        description: The interval for the second sampling of threads
        type: string
        format: time
      - in: query
        name: snapshots
        description: 'Number of samples of thread stacktrace (default: 10)'
        type: integer
        format: long
      - in: query
        name: threads
        description: 'Specify the number of threads to provide information for (default: 3)'
        type: integer
        format: long
      - in: query
        name: ignore_idle_threads
        description: 'Don''t show threads that are in known-idle places, such as waiting on a socket select or pulling from an empty task queue (default: true)'
        type: boolean
      - in: query
        name: type
        description: 'The type to sample (default: cpu)'
        type: string
        format: type
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/NodesHotThreadsResponse'
      tags:
        - nodes.hot_threads
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-hot-threads.html'
  /_cluster/nodes/hot_threads:
    parameters:
      - in: query
        name: interval
        description: The interval for the second sampling of threads
        type: string
        format: time
      - in: query
        name: snapshots
        description: 'Number of samples of thread stacktrace (default: 10)'
        type: integer
        format: long
      - in: query
        name: threads
        description: 'Specify the number of threads to provide information for (default: 3)'
        type: integer
        format: long
      - in: query
        name: ignore_idle_threads
        description: 'Don''t show threads that are in known-idle places, such as waiting on a socket select or pulling from an empty task queue (default: true)'
        type: boolean
      - in: query
        name: type
        description: 'The type to sample (default: cpu)'
        type: string
        format: type
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/NodesHotThreadsResponse'
      tags:
        - nodes.hot_threads
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-hot-threads.html'
  '/_cluster/nodes/{node_id}/hotthreads':
    parameters:
      - in: query
        name: interval
        description: The interval for the second sampling of threads
        type: string
        format: time
      - in: query
        name: snapshots
        description: 'Number of samples of thread stacktrace (default: 10)'
        type: integer
        format: long
      - in: query
        name: threads
        description: 'Specify the number of threads to provide information for (default: 3)'
        type: integer
        format: long
      - in: query
        name: ignore_idle_threads
        description: 'Don''t show threads that are in known-idle places, such as waiting on a socket select or pulling from an empty task queue (default: true)'
        type: boolean
      - in: query
        name: type
        description: 'The type to sample (default: cpu)'
        type: string
        format: type
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/NodesHotThreadsResponse'
      tags:
        - nodes.hot_threads
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: node_id
          required: true
          description: 'A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you''re connecting to, leave empty to get information from all nodes'
          type: string
          format: NodeIds
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-hot-threads.html'
  '/_cluster/nodes/{node_id}/hot_threads':
    parameters:
      - in: query
        name: interval
        description: The interval for the second sampling of threads
        type: string
        format: time
      - in: query
        name: snapshots
        description: 'Number of samples of thread stacktrace (default: 10)'
        type: integer
        format: long
      - in: query
        name: threads
        description: 'Specify the number of threads to provide information for (default: 3)'
        type: integer
        format: long
      - in: query
        name: ignore_idle_threads
        description: 'Don''t show threads that are in known-idle places, such as waiting on a socket select or pulling from an empty task queue (default: true)'
        type: boolean
      - in: query
        name: type
        description: 'The type to sample (default: cpu)'
        type: string
        format: type
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/NodesHotThreadsResponse'
      tags:
        - nodes.hot_threads
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: node_id
          required: true
          description: 'A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you''re connecting to, leave empty to get information from all nodes'
          type: string
          format: NodeIds
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-hot-threads.html'
  /_nodes/hotthreads:
    parameters:
      - in: query
        name: interval
        description: The interval for the second sampling of threads
        type: string
        format: time
      - in: query
        name: snapshots
        description: 'Number of samples of thread stacktrace (default: 10)'
        type: integer
        format: long
      - in: query
        name: threads
        description: 'Specify the number of threads to provide information for (default: 3)'
        type: integer
        format: long
      - in: query
        name: ignore_idle_threads
        description: 'Don''t show threads that are in known-idle places, such as waiting on a socket select or pulling from an empty task queue (default: true)'
        type: boolean
      - in: query
        name: type
        description: 'The type to sample (default: cpu)'
        type: string
        format: type
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/NodesHotThreadsResponse'
      tags:
        - nodes.hot_threads
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-hot-threads.html'
  /_nodes/hot_threads:
    parameters:
      - in: query
        name: interval
        description: The interval for the second sampling of threads
        type: string
        format: time
      - in: query
        name: snapshots
        description: 'Number of samples of thread stacktrace (default: 10)'
        type: integer
        format: long
      - in: query
        name: threads
        description: 'Specify the number of threads to provide information for (default: 3)'
        type: integer
        format: long
      - in: query
        name: ignore_idle_threads
        description: 'Don''t show threads that are in known-idle places, such as waiting on a socket select or pulling from an empty task queue (default: true)'
        type: boolean
      - in: query
        name: type
        description: 'The type to sample (default: cpu)'
        type: string
        format: type
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/NodesHotThreadsResponse'
      tags:
        - nodes.hot_threads
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-hot-threads.html'
  '/_nodes/{node_id}/hotthreads':
    parameters:
      - in: query
        name: interval
        description: The interval for the second sampling of threads
        type: string
        format: time
      - in: query
        name: snapshots
        description: 'Number of samples of thread stacktrace (default: 10)'
        type: integer
        format: long
      - in: query
        name: threads
        description: 'Specify the number of threads to provide information for (default: 3)'
        type: integer
        format: long
      - in: query
        name: ignore_idle_threads
        description: 'Don''t show threads that are in known-idle places, such as waiting on a socket select or pulling from an empty task queue (default: true)'
        type: boolean
      - in: query
        name: type
        description: 'The type to sample (default: cpu)'
        type: string
        format: type
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/NodesHotThreadsResponse'
      tags:
        - nodes.hot_threads
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: node_id
          required: true
          description: 'A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you''re connecting to, leave empty to get information from all nodes'
          type: string
          format: NodeIds
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-hot-threads.html'
  '/_nodes/{node_id}/hot_threads':
    parameters:
      - in: query
        name: interval
        description: The interval for the second sampling of threads
        type: string
        format: time
      - in: query
        name: snapshots
        description: 'Number of samples of thread stacktrace (default: 10)'
        type: integer
        format: long
      - in: query
        name: threads
        description: 'Specify the number of threads to provide information for (default: 3)'
        type: integer
        format: long
      - in: query
        name: ignore_idle_threads
        description: 'Don''t show threads that are in known-idle places, such as waiting on a socket select or pulling from an empty task queue (default: true)'
        type: boolean
      - in: query
        name: type
        description: 'The type to sample (default: cpu)'
        type: string
        format: type
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/NodesHotThreadsResponse'
      tags:
        - nodes.hot_threads
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: node_id
          required: true
          description: 'A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you''re connecting to, leave empty to get information from all nodes'
          type: string
          format: NodeIds
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-hot-threads.html'
  /_nodes:
    parameters:
      - in: query
        name: flat_settings
        description: 'Return settings in flat format (default: false)'
        type: boolean
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/NodesInfoResponse'
      tags:
        - nodes.info
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-info.html'
  '/_nodes/{node_id}':
    parameters:
      - in: query
        name: flat_settings
        description: 'Return settings in flat format (default: false)'
        type: boolean
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/NodesInfoResponse'
      tags:
        - nodes.info
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: node_id
          required: true
          description: 'A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you''re connecting to, leave empty to get information from all nodes'
          type: string
          format: NodeIds
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-info.html'
  '/_nodes/{metric}':
    parameters:
      - in: query
        name: flat_settings
        description: 'Return settings in flat format (default: false)'
        type: boolean
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/NodesInfoResponse'
      tags:
        - nodes.info
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: metric
          required: true
          description: A comma-separated list of metrics you wish returned. Leave empty to return all.
          type: string
          format: Metrics
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-info.html'
  '/_nodes/{node_id}/{metric}':
    parameters:
      - in: query
        name: flat_settings
        description: 'Return settings in flat format (default: false)'
        type: boolean
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/NodesInfoResponse'
      tags:
        - nodes.info
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: node_id
          required: true
          description: 'A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you''re connecting to, leave empty to get information from all nodes'
          type: string
          format: NodeIds
        - in: path
          name: metric
          required: true
          description: A comma-separated list of metrics you wish returned. Leave empty to return all.
          type: string
          format: Metrics
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-info.html'
  /_nodes/stats:
    parameters:
      - in: query
        name: completion_fields
        description: A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)
        type: string
        format: Fields
      - in: query
        name: fielddata_fields
        description: A comma-separated list of fields for `fielddata` index metric (supports wildcards)
        type: string
        format: Fields
      - in: query
        name: fields
        description: A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)
        type: string
        format: Fields
      - in: query
        name: groups
        description: A comma-separated list of search groups for `search` index metric
        type: boolean
      - in: query
        name: level
        description: 'Return indices stats aggregated at index, node or shard level'
        type: string
        format: level
      - in: query
        name: types
        description: A comma-separated list of document types for the `indexing` index metric
        type: string
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: include_segment_file_sizes
        description: Whether to report the aggregated disk usage of each one of the Lucene index files (only applies if segment stats are requested)
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/NodesStatsResponse'
      tags:
        - nodes.stats
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-stats.html'
  '/_nodes/{node_id}/stats':
    parameters:
      - in: query
        name: completion_fields
        description: A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)
        type: string
        format: Fields
      - in: query
        name: fielddata_fields
        description: A comma-separated list of fields for `fielddata` index metric (supports wildcards)
        type: string
        format: Fields
      - in: query
        name: fields
        description: A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)
        type: string
        format: Fields
      - in: query
        name: groups
        description: A comma-separated list of search groups for `search` index metric
        type: boolean
      - in: query
        name: level
        description: 'Return indices stats aggregated at index, node or shard level'
        type: string
        format: level
      - in: query
        name: types
        description: A comma-separated list of document types for the `indexing` index metric
        type: string
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: include_segment_file_sizes
        description: Whether to report the aggregated disk usage of each one of the Lucene index files (only applies if segment stats are requested)
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/NodesStatsResponse'
      tags:
        - nodes.stats
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: node_id
          required: true
          description: 'A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you''re connecting to, leave empty to get information from all nodes'
          type: string
          format: NodeIds
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-stats.html'
  '/_nodes/stats/{metric}':
    parameters:
      - in: query
        name: completion_fields
        description: A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)
        type: string
        format: Fields
      - in: query
        name: fielddata_fields
        description: A comma-separated list of fields for `fielddata` index metric (supports wildcards)
        type: string
        format: Fields
      - in: query
        name: fields
        description: A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)
        type: string
        format: Fields
      - in: query
        name: groups
        description: A comma-separated list of search groups for `search` index metric
        type: boolean
      - in: query
        name: level
        description: 'Return indices stats aggregated at index, node or shard level'
        type: string
        format: level
      - in: query
        name: types
        description: A comma-separated list of document types for the `indexing` index metric
        type: string
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: include_segment_file_sizes
        description: Whether to report the aggregated disk usage of each one of the Lucene index files (only applies if segment stats are requested)
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/NodesStatsResponse'
      tags:
        - nodes.stats
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: metric
          required: true
          description: Limit the information returned to the specified metrics
          type: string
          format: Metrics
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-stats.html'
  '/_nodes/{node_id}/stats/{metric}':
    parameters:
      - in: query
        name: completion_fields
        description: A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)
        type: string
        format: Fields
      - in: query
        name: fielddata_fields
        description: A comma-separated list of fields for `fielddata` index metric (supports wildcards)
        type: string
        format: Fields
      - in: query
        name: fields
        description: A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)
        type: string
        format: Fields
      - in: query
        name: groups
        description: A comma-separated list of search groups for `search` index metric
        type: boolean
      - in: query
        name: level
        description: 'Return indices stats aggregated at index, node or shard level'
        type: string
        format: level
      - in: query
        name: types
        description: A comma-separated list of document types for the `indexing` index metric
        type: string
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: include_segment_file_sizes
        description: Whether to report the aggregated disk usage of each one of the Lucene index files (only applies if segment stats are requested)
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/NodesStatsResponse'
      tags:
        - nodes.stats
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: metric
          required: true
          description: Limit the information returned to the specified metrics
          type: string
          format: Metrics
        - in: path
          name: node_id
          required: true
          description: 'A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you''re connecting to, leave empty to get information from all nodes'
          type: string
          format: NodeIds
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-stats.html'
  '/_nodes/stats/{metric}/{index_metric}':
    parameters:
      - in: query
        name: completion_fields
        description: A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)
        type: string
        format: Fields
      - in: query
        name: fielddata_fields
        description: A comma-separated list of fields for `fielddata` index metric (supports wildcards)
        type: string
        format: Fields
      - in: query
        name: fields
        description: A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)
        type: string
        format: Fields
      - in: query
        name: groups
        description: A comma-separated list of search groups for `search` index metric
        type: boolean
      - in: query
        name: level
        description: 'Return indices stats aggregated at index, node or shard level'
        type: string
        format: level
      - in: query
        name: types
        description: A comma-separated list of document types for the `indexing` index metric
        type: string
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: include_segment_file_sizes
        description: Whether to report the aggregated disk usage of each one of the Lucene index files (only applies if segment stats are requested)
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/NodesStatsResponse'
      tags:
        - nodes.stats
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: metric
          required: true
          description: Limit the information returned to the specified metrics
          type: string
          format: Metrics
        - in: path
          name: index_metric
          required: true
          description: Limit the information returned for `indices` metric to the specific index metrics. Isn't used if `indices` (or `all`) metric isn't specified.
          type: string
          format: IndexMetrics
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-stats.html'
  '/_nodes/{node_id}/stats/{metric}/{index_metric}':
    parameters:
      - in: query
        name: completion_fields
        description: A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)
        type: string
        format: Fields
      - in: query
        name: fielddata_fields
        description: A comma-separated list of fields for `fielddata` index metric (supports wildcards)
        type: string
        format: Fields
      - in: query
        name: fields
        description: A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)
        type: string
        format: Fields
      - in: query
        name: groups
        description: A comma-separated list of search groups for `search` index metric
        type: boolean
      - in: query
        name: level
        description: 'Return indices stats aggregated at index, node or shard level'
        type: string
        format: level
      - in: query
        name: types
        description: A comma-separated list of document types for the `indexing` index metric
        type: string
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: include_segment_file_sizes
        description: Whether to report the aggregated disk usage of each one of the Lucene index files (only applies if segment stats are requested)
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/NodesStatsResponse'
      tags:
        - nodes.stats
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: metric
          required: true
          description: Limit the information returned to the specified metrics
          type: string
          format: Metrics
        - in: path
          name: index_metric
          required: true
          description: Limit the information returned for `indices` metric to the specific index metrics. Isn't used if `indices` (or `all`) metric isn't specified.
          type: string
          format: IndexMetrics
        - in: path
          name: node_id
          required: true
          description: 'A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you''re connecting to, leave empty to get information from all nodes'
          type: string
          format: NodeIds
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-stats.html'
  /_nodes/usage:
    parameters:
      - in: query
        name: human
        description: Whether to return time and byte values in human-readable format.
        type: boolean
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/NodesUsageResponse'
      tags:
        - nodes.usage
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-usage.html'
  '/_nodes/{node_id}/usage':
    parameters:
      - in: query
        name: human
        description: Whether to return time and byte values in human-readable format.
        type: boolean
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/NodesUsageResponse'
      tags:
        - nodes.usage
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: node_id
          required: true
          description: 'A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you''re connecting to, leave empty to get information from all nodes'
          type: string
          format: NodeIds
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-usage.html'
  '/_nodes/usage/{metric}':
    parameters:
      - in: query
        name: human
        description: Whether to return time and byte values in human-readable format.
        type: boolean
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/NodesUsageResponse'
      tags:
        - nodes.usage
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: metric
          required: true
          description: Limit the information returned to the specified metrics
          type: string
          format: Metrics
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-usage.html'
  '/_nodes/{node_id}/usage/{metric}':
    parameters:
      - in: query
        name: human
        description: Whether to return time and byte values in human-readable format.
        type: boolean
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/NodesUsageResponse'
      tags:
        - nodes.usage
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: metric
          required: true
          description: Limit the information returned to the specified metrics
          type: string
          format: Metrics
        - in: path
          name: node_id
          required: true
          description: 'A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you''re connecting to, leave empty to get information from all nodes'
          type: string
          format: NodeIds
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-usage.html'
  /:
    parameters: []
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/RootNodeInfoResponse'
      tags:
        - info
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/'
  /_remote/info:
    parameters: []
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/RemoteInfoResponse'
      tags:
        - cluster.remote_info
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-remote-info.html'
  /_tasks/_cancel:
    parameters:
      - in: query
        name: nodes
        description: 'A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you''re connecting to, leave empty to get information from all nodes'
        type: string
      - in: query
        name: actions
        description: A comma-separated list of actions that should be cancelled. Leave empty to cancel all.
        type: string
      - in: query
        name: parent_node
        description: Cancel tasks with specified parent node.
        type: string
      - in: query
        name: parent_task_id
        description: 'Cancel tasks with specified parent task id (node_id:task_number). Set to -1 to cancel all.'
        type: string
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CancelTasksResponse'
      tags:
        - tasks.cancel
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/tasks.html'
  '/_tasks/{task_id}/_cancel':
    parameters:
      - in: query
        name: nodes
        description: 'A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you''re connecting to, leave empty to get information from all nodes'
        type: string
      - in: query
        name: actions
        description: A comma-separated list of actions that should be cancelled. Leave empty to cancel all.
        type: string
      - in: query
        name: parent_node
        description: Cancel tasks with specified parent node.
        type: string
      - in: query
        name: parent_task_id
        description: 'Cancel tasks with specified parent task id (node_id:task_number). Set to -1 to cancel all.'
        type: string
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CancelTasksResponse'
      tags:
        - tasks.cancel
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: task_id
          required: true
          description: 'Cancel the task with specified task id (node_id:task_number)'
          type: string
          format: TaskId
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/tasks.html'
  '/_tasks/{task_id}':
    parameters:
      - in: query
        name: wait_for_completion
        description: 'Wait for the matching tasks to complete (default: false)'
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetTaskResponse'
      tags:
        - tasks.get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: task_id
          required: true
          description: 'Return the task with specified id (node_id:task_number)'
          type: string
          format: TaskId
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/tasks.html'
  /_tasks:
    parameters:
      - in: query
        name: nodes
        description: 'A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you''re connecting to, leave empty to get information from all nodes'
        type: string
      - in: query
        name: actions
        description: A comma-separated list of actions that should be returned. Leave empty to return all.
        type: string
      - in: query
        name: detailed
        description: 'Return detailed task information (default: false)'
        type: boolean
      - in: query
        name: parent_node
        description: Return tasks with specified parent node.
        type: string
      - in: query
        name: parent_task_id
        description: 'Return tasks with specified parent task id (node_id:task_number). Set to -1 to return all.'
        type: string
      - in: query
        name: wait_for_completion
        description: 'Wait for the matching tasks to complete (default: false)'
        type: boolean
      - in: query
        name: group_by
        description: Group tasks by nodes or parent/child relationships
        type: string
        format: group_by
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ListTasksResponse'
      tags:
        - tasks.list
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/tasks.html'
  /_bulk:
    parameters:
      - in: query
        name: wait_for_active_shards
        description: 'Sets the number of shard copies that must be active before proceeding with the bulk operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)'
        type: string
      - in: query
        name: refresh
        description: 'If `true` then refresh the effected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` (the default) then do nothing with refreshes.'
        type: string
        format: refresh
      - in: query
        name: routing
        description: Specific routing value
        type: string
        format: Routing
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: type
        description: Default document type for items which don't provide one
        type: string
      - in: query
        name: fields
        description: 'Default comma-separated list of fields to return in the response for updates, can be overridden on each sub-request'
        type: string
        format: Fields
      - in: query
        name: _source
        description: 'True or false to return the _source field or not, or default list of fields to return, can be overridden on each sub-request'
        type: string
      - in: query
        name: _source_exclude
        description: 'Default list of fields to exclude from the returned _source field, can be overridden on each sub-request'
        type: string
        format: Fields
      - in: query
        name: _source_include
        description: 'Default list of fields to extract and return from the _source field, can be overridden on each sub-request'
        type: string
        format: Fields
      - in: query
        name: pipeline
        description: The pipeline id to preprocess incoming documents with
        type: string
      - in: body
        name: request
        description: 'The operation definition and data (action-data pairs), separated by newlines'
        required: true
        schema:
          $ref: '#/definitions/BulkRequest'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/BulkResponse'
      tags:
        - bulk
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-bulk.html'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/BulkResponse'
      tags:
        - bulk
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-bulk.html'
  '/{index}/_bulk':
    parameters:
      - in: query
        name: wait_for_active_shards
        description: 'Sets the number of shard copies that must be active before proceeding with the bulk operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)'
        type: string
      - in: query
        name: refresh
        description: 'If `true` then refresh the effected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` (the default) then do nothing with refreshes.'
        type: string
        format: refresh
      - in: query
        name: routing
        description: Specific routing value
        type: string
        format: Routing
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: type
        description: Default document type for items which don't provide one
        type: string
      - in: query
        name: fields
        description: 'Default comma-separated list of fields to return in the response for updates, can be overridden on each sub-request'
        type: string
        format: Fields
      - in: query
        name: _source
        description: 'True or false to return the _source field or not, or default list of fields to return, can be overridden on each sub-request'
        type: string
      - in: query
        name: _source_exclude
        description: 'Default list of fields to exclude from the returned _source field, can be overridden on each sub-request'
        type: string
        format: Fields
      - in: query
        name: _source_include
        description: 'Default list of fields to extract and return from the _source field, can be overridden on each sub-request'
        type: string
        format: Fields
      - in: query
        name: pipeline
        description: The pipeline id to preprocess incoming documents with
        type: string
      - in: body
        name: request
        description: 'The operation definition and data (action-data pairs), separated by newlines'
        required: true
        schema:
          $ref: '#/definitions/BulkRequest'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/BulkResponse'
      tags:
        - bulk
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: Default index for items which don't provide one
          type: string
          format: IndexName
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-bulk.html'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/BulkResponse'
      tags:
        - bulk
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: Default index for items which don't provide one
          type: string
          format: IndexName
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-bulk.html'
  '/{index}/{type}/_bulk':
    parameters:
      - in: query
        name: wait_for_active_shards
        description: 'Sets the number of shard copies that must be active before proceeding with the bulk operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)'
        type: string
      - in: query
        name: refresh
        description: 'If `true` then refresh the effected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` (the default) then do nothing with refreshes.'
        type: string
        format: refresh
      - in: query
        name: routing
        description: Specific routing value
        type: string
        format: Routing
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: type
        description: Default document type for items which don't provide one
        type: string
      - in: query
        name: fields
        description: 'Default comma-separated list of fields to return in the response for updates, can be overridden on each sub-request'
        type: string
        format: Fields
      - in: query
        name: _source
        description: 'True or false to return the _source field or not, or default list of fields to return, can be overridden on each sub-request'
        type: string
      - in: query
        name: _source_exclude
        description: 'Default list of fields to exclude from the returned _source field, can be overridden on each sub-request'
        type: string
        format: Fields
      - in: query
        name: _source_include
        description: 'Default list of fields to extract and return from the _source field, can be overridden on each sub-request'
        type: string
        format: Fields
      - in: query
        name: pipeline
        description: The pipeline id to preprocess incoming documents with
        type: string
      - in: body
        name: request
        description: 'The operation definition and data (action-data pairs), separated by newlines'
        required: true
        schema:
          $ref: '#/definitions/BulkRequest'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/BulkResponse'
      tags:
        - bulk
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: Default index for items which don't provide one
          type: string
          format: IndexName
        - in: path
          name: type
          required: true
          description: Default document type for items which don't provide one
          type: string
          format: TypeName
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-bulk.html'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/BulkResponse'
      tags:
        - bulk
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: Default index for items which don't provide one
          type: string
          format: IndexName
        - in: path
          name: type
          required: true
          description: Default document type for items which don't provide one
          type: string
          format: TypeName
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-bulk.html'
  '/{index}/_delete_by_query':
    parameters:
      - in: query
        name: analyzer
        description: The analyzer to use for the query string
        type: string
      - in: query
        name: analyze_wildcard
        description: 'Specify whether wildcard and prefix queries should be analyzed (default: false)'
        type: boolean
      - in: query
        name: default_operator
        description: The default operator for query string query (AND or OR)
        type: string
        format: default_operator
      - in: query
        name: df
        description: The field to use as default where no field prefix is given in the query string
        type: string
      - in: query
        name: from
        description: 'Starting offset (default: 0)'
        type: integer
        format: long
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: conflicts
        description: What to do when the delete-by-query hits version conflicts?
        type: string
        format: conflicts
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: lenient
        description: Specify whether format-based query failures (such as providing text to a numeric field) should be ignored
        type: boolean
      - in: query
        name: preference
        description: 'Specify the node or shard the operation should be performed on (default: random)'
        type: string
      - in: query
        name: q
        description: Query in the Lucene query string syntax
        type: string
      - in: query
        name: routing
        description: A comma-separated list of specific routing values
        type: string
        format: Routing
      - in: query
        name: scroll
        description: Specify how long a consistent view of the index should be maintained for scrolled search
        type: string
        format: time
      - in: query
        name: search_type
        description: Search operation type
        type: string
        format: search_type
      - in: query
        name: search_timeout
        description: Explicit timeout for each search request. Defaults to no timeout.
        type: string
        format: time
      - in: query
        name: size
        description: 'Number of hits to return (default: 10)'
        type: integer
        format: long
      - in: query
        name: sort
        description: 'A comma-separated list of <field>:<direction> pairs'
        type: string
      - in: query
        name: _source
        description: 'True or false to return the _source field or not, or a list of fields to return'
        type: string
      - in: query
        name: _source_exclude
        description: A list of fields to exclude from the returned _source field
        type: string
        format: Fields
      - in: query
        name: _source_include
        description: A list of fields to extract and return from the _source field
        type: string
        format: Fields
      - in: query
        name: terminate_after
        description: 'The maximum number of documents to collect for each shard, upon reaching which the query execution will terminate early.'
        type: integer
        format: long
      - in: query
        name: stats
        description: Specific 'tag' of the request for logging and statistical purposes
        type: string
      - in: query
        name: version
        description: Specify whether to return document version as part of a hit
        type: boolean
      - in: query
        name: request_cache
        description: 'Specify if request cache should be used for this request or not, defaults to index level setting'
        type: boolean
      - in: query
        name: refresh
        description: Should the effected indexes be refreshed?
        type: boolean
      - in: query
        name: timeout
        description: Time each individual bulk request should wait for shards that are unavailable.
        type: string
        format: time
      - in: query
        name: wait_for_active_shards
        description: 'Sets the number of shard copies that must be active before proceeding with the delete by query operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)'
        type: string
      - in: query
        name: scroll_size
        description: Size on the scroll request powering the update_by_query
        type: integer
        format: long
      - in: query
        name: wait_for_completion
        description: Should the request should block until the delete-by-query is complete.
        type: boolean
      - in: query
        name: requests_per_second
        description: The throttle for this request in sub-requests per second. -1 means no throttle.
        type: integer
        format: long
      - in: query
        name: slices
        description: The number of slices this task should be divided into. Defaults to 1 meaning the task isn't sliced into subtasks.
        type: integer
        format: long
      - in: body
        name: request
        description: The search definition using the Query DSL
        required: true
        schema:
          $ref: '#/definitions/DeleteByQueryRequest'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/DeleteByQueryResponse'
      tags:
        - delete_by_query
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices
          type: string
          format: Indices
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-delete-by-query.html'
  '/{index}/{type}/_delete_by_query':
    parameters:
      - in: query
        name: analyzer
        description: The analyzer to use for the query string
        type: string
      - in: query
        name: analyze_wildcard
        description: 'Specify whether wildcard and prefix queries should be analyzed (default: false)'
        type: boolean
      - in: query
        name: default_operator
        description: The default operator for query string query (AND or OR)
        type: string
        format: default_operator
      - in: query
        name: df
        description: The field to use as default where no field prefix is given in the query string
        type: string
      - in: query
        name: from
        description: 'Starting offset (default: 0)'
        type: integer
        format: long
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: conflicts
        description: What to do when the delete-by-query hits version conflicts?
        type: string
        format: conflicts
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: lenient
        description: Specify whether format-based query failures (such as providing text to a numeric field) should be ignored
        type: boolean
      - in: query
        name: preference
        description: 'Specify the node or shard the operation should be performed on (default: random)'
        type: string
      - in: query
        name: q
        description: Query in the Lucene query string syntax
        type: string
      - in: query
        name: routing
        description: A comma-separated list of specific routing values
        type: string
        format: Routing
      - in: query
        name: scroll
        description: Specify how long a consistent view of the index should be maintained for scrolled search
        type: string
        format: time
      - in: query
        name: search_type
        description: Search operation type
        type: string
        format: search_type
      - in: query
        name: search_timeout
        description: Explicit timeout for each search request. Defaults to no timeout.
        type: string
        format: time
      - in: query
        name: size
        description: 'Number of hits to return (default: 10)'
        type: integer
        format: long
      - in: query
        name: sort
        description: 'A comma-separated list of <field>:<direction> pairs'
        type: string
      - in: query
        name: _source
        description: 'True or false to return the _source field or not, or a list of fields to return'
        type: string
      - in: query
        name: _source_exclude
        description: A list of fields to exclude from the returned _source field
        type: string
        format: Fields
      - in: query
        name: _source_include
        description: A list of fields to extract and return from the _source field
        type: string
        format: Fields
      - in: query
        name: terminate_after
        description: 'The maximum number of documents to collect for each shard, upon reaching which the query execution will terminate early.'
        type: integer
        format: long
      - in: query
        name: stats
        description: Specific 'tag' of the request for logging and statistical purposes
        type: string
      - in: query
        name: version
        description: Specify whether to return document version as part of a hit
        type: boolean
      - in: query
        name: request_cache
        description: 'Specify if request cache should be used for this request or not, defaults to index level setting'
        type: boolean
      - in: query
        name: refresh
        description: Should the effected indexes be refreshed?
        type: boolean
      - in: query
        name: timeout
        description: Time each individual bulk request should wait for shards that are unavailable.
        type: string
        format: time
      - in: query
        name: wait_for_active_shards
        description: 'Sets the number of shard copies that must be active before proceeding with the delete by query operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)'
        type: string
      - in: query
        name: scroll_size
        description: Size on the scroll request powering the update_by_query
        type: integer
        format: long
      - in: query
        name: wait_for_completion
        description: Should the request should block until the delete-by-query is complete.
        type: boolean
      - in: query
        name: requests_per_second
        description: The throttle for this request in sub-requests per second. -1 means no throttle.
        type: integer
        format: long
      - in: query
        name: slices
        description: The number of slices this task should be divided into. Defaults to 1 meaning the task isn't sliced into subtasks.
        type: integer
        format: long
      - in: body
        name: request
        description: The search definition using the Query DSL
        required: true
        schema:
          $ref: '#/definitions/DeleteByQueryRequest'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/DeleteByQueryResponse'
      tags:
        - delete_by_query
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices
          type: string
          format: Indices
        - in: path
          name: type
          required: true
          description: A comma-separated list of document types to search; leave empty to perform the operation on all types
          type: string
          format: Types
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-delete-by-query.html'
  /_mget:
    parameters:
      - in: query
        name: stored_fields
        description: A comma-separated list of stored fields to return in the response
        type: string
        format: Fields
      - in: query
        name: preference
        description: 'Specify the node or shard the operation should be performed on (default: random)'
        type: string
      - in: query
        name: realtime
        description: Specify whether to perform the operation in realtime or search mode
        type: boolean
      - in: query
        name: refresh
        description: Refresh the shard containing the document before performing the operation
        type: boolean
      - in: query
        name: routing
        description: Specific routing value
        type: string
        format: Routing
      - in: query
        name: _source
        description: 'True or false to return the _source field or not, or a list of fields to return'
        type: string
      - in: query
        name: _source_exclude
        description: A list of fields to exclude from the returned _source field
        type: string
        format: Fields
      - in: query
        name: _source_include
        description: A list of fields to extract and return from the _source field
        type: string
        format: Fields
      - in: body
        name: request
        description: Document identifiers; can be either `docs` (containing full document information) or `ids` (when index and type is provided in the URL.
        required: true
        schema:
          $ref: '#/definitions/MultiGetRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/MultiGetResponse'
      tags:
        - mget
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-get.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/MultiGetResponse'
      tags:
        - mget
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-get.html'
  '/{index}/_mget':
    parameters:
      - in: query
        name: stored_fields
        description: A comma-separated list of stored fields to return in the response
        type: string
        format: Fields
      - in: query
        name: preference
        description: 'Specify the node or shard the operation should be performed on (default: random)'
        type: string
      - in: query
        name: realtime
        description: Specify whether to perform the operation in realtime or search mode
        type: boolean
      - in: query
        name: refresh
        description: Refresh the shard containing the document before performing the operation
        type: boolean
      - in: query
        name: routing
        description: Specific routing value
        type: string
        format: Routing
      - in: query
        name: _source
        description: 'True or false to return the _source field or not, or a list of fields to return'
        type: string
      - in: query
        name: _source_exclude
        description: A list of fields to exclude from the returned _source field
        type: string
        format: Fields
      - in: query
        name: _source_include
        description: A list of fields to extract and return from the _source field
        type: string
        format: Fields
      - in: body
        name: request
        description: Document identifiers; can be either `docs` (containing full document information) or `ids` (when index and type is provided in the URL.
        required: true
        schema:
          $ref: '#/definitions/MultiGetRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/MultiGetResponse'
      tags:
        - mget
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: The name of the index
          type: string
          format: IndexName
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-get.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/MultiGetResponse'
      tags:
        - mget
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: The name of the index
          type: string
          format: IndexName
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-get.html'
  '/{index}/{type}/_mget':
    parameters:
      - in: query
        name: stored_fields
        description: A comma-separated list of stored fields to return in the response
        type: string
        format: Fields
      - in: query
        name: preference
        description: 'Specify the node or shard the operation should be performed on (default: random)'
        type: string
      - in: query
        name: realtime
        description: Specify whether to perform the operation in realtime or search mode
        type: boolean
      - in: query
        name: refresh
        description: Refresh the shard containing the document before performing the operation
        type: boolean
      - in: query
        name: routing
        description: Specific routing value
        type: string
        format: Routing
      - in: query
        name: _source
        description: 'True or false to return the _source field or not, or a list of fields to return'
        type: string
      - in: query
        name: _source_exclude
        description: A list of fields to exclude from the returned _source field
        type: string
        format: Fields
      - in: query
        name: _source_include
        description: A list of fields to extract and return from the _source field
        type: string
        format: Fields
      - in: body
        name: request
        description: Document identifiers; can be either `docs` (containing full document information) or `ids` (when index and type is provided in the URL.
        required: true
        schema:
          $ref: '#/definitions/MultiGetRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/MultiGetResponse'
      tags:
        - mget
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: The name of the index
          type: string
          format: IndexName
        - in: path
          name: type
          required: true
          description: The type of the document
          type: string
          format: TypeName
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-get.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/MultiGetResponse'
      tags:
        - mget
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: The name of the index
          type: string
          format: IndexName
        - in: path
          name: type
          required: true
          description: The type of the document
          type: string
          format: TypeName
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-get.html'
  /_mtermvectors:
    parameters:
      - in: query
        name: ids
        description: A comma-separated list of documents ids. You must define ids as parameter or set "ids" or "docs" in the request body
        type: string
      - in: query
        name: term_statistics
        description: Specifies if total term frequency and document frequency should be returned. Applies to all returned documents unless otherwise specified in body "params" or "docs".
        type: boolean
      - in: query
        name: field_statistics
        description: 'Specifies if document count, sum of document frequencies and sum of total term frequencies should be returned. Applies to all returned documents unless otherwise specified in body "params" or "docs".'
        type: boolean
      - in: query
        name: fields
        description: A comma-separated list of fields to return. Applies to all returned documents unless otherwise specified in body "params" or "docs".
        type: string
        format: Fields
      - in: query
        name: offsets
        description: Specifies if term offsets should be returned. Applies to all returned documents unless otherwise specified in body "params" or "docs".
        type: boolean
      - in: query
        name: positions
        description: Specifies if term positions should be returned. Applies to all returned documents unless otherwise specified in body "params" or "docs".
        type: boolean
      - in: query
        name: payloads
        description: Specifies if term payloads should be returned. Applies to all returned documents unless otherwise specified in body "params" or "docs".
        type: boolean
      - in: query
        name: preference
        description: 'Specify the node or shard the operation should be performed on (default: random) .Applies to all returned documents unless otherwise specified in body "params" or "docs".'
        type: string
      - in: query
        name: routing
        description: Specific routing value. Applies to all returned documents unless otherwise specified in body "params" or "docs".
        type: string
        format: Routing
      - in: query
        name: parent
        description: Parent id of documents. Applies to all returned documents unless otherwise specified in body "params" or "docs".
        type: string
      - in: query
        name: realtime
        description: 'Specifies if requests are real-time as opposed to near-real-time (default: true).'
        type: boolean
      - in: query
        name: version
        description: Explicit version number for concurrency control
        type: integer
        format: long
      - in: query
        name: version_type
        description: Specific version type
        type: string
        format: version_type
      - in: body
        name: request
        description: 'Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.'
        required: false
        schema:
          $ref: '#/definitions/MultiTermVectorsRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/MultiTermVectorsResponse'
      tags:
        - mtermvectors
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/MultiTermVectorsResponse'
      tags:
        - mtermvectors
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html'
  '/{index}/_mtermvectors':
    parameters:
      - in: query
        name: ids
        description: A comma-separated list of documents ids. You must define ids as parameter or set "ids" or "docs" in the request body
        type: string
      - in: query
        name: term_statistics
        description: Specifies if total term frequency and document frequency should be returned. Applies to all returned documents unless otherwise specified in body "params" or "docs".
        type: boolean
      - in: query
        name: field_statistics
        description: 'Specifies if document count, sum of document frequencies and sum of total term frequencies should be returned. Applies to all returned documents unless otherwise specified in body "params" or "docs".'
        type: boolean
      - in: query
        name: fields
        description: A comma-separated list of fields to return. Applies to all returned documents unless otherwise specified in body "params" or "docs".
        type: string
        format: Fields
      - in: query
        name: offsets
        description: Specifies if term offsets should be returned. Applies to all returned documents unless otherwise specified in body "params" or "docs".
        type: boolean
      - in: query
        name: positions
        description: Specifies if term positions should be returned. Applies to all returned documents unless otherwise specified in body "params" or "docs".
        type: boolean
      - in: query
        name: payloads
        description: Specifies if term payloads should be returned. Applies to all returned documents unless otherwise specified in body "params" or "docs".
        type: boolean
      - in: query
        name: preference
        description: 'Specify the node or shard the operation should be performed on (default: random) .Applies to all returned documents unless otherwise specified in body "params" or "docs".'
        type: string
      - in: query
        name: routing
        description: Specific routing value. Applies to all returned documents unless otherwise specified in body "params" or "docs".
        type: string
        format: Routing
      - in: query
        name: parent
        description: Parent id of documents. Applies to all returned documents unless otherwise specified in body "params" or "docs".
        type: string
      - in: query
        name: realtime
        description: 'Specifies if requests are real-time as opposed to near-real-time (default: true).'
        type: boolean
      - in: query
        name: version
        description: Explicit version number for concurrency control
        type: integer
        format: long
      - in: query
        name: version_type
        description: Specific version type
        type: string
        format: version_type
      - in: body
        name: request
        description: 'Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.'
        required: false
        schema:
          $ref: '#/definitions/MultiTermVectorsRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/MultiTermVectorsResponse'
      tags:
        - mtermvectors
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: The index in which the document resides.
          type: string
          format: IndexName
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/MultiTermVectorsResponse'
      tags:
        - mtermvectors
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: The index in which the document resides.
          type: string
          format: IndexName
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html'
  '/{index}/{type}/_mtermvectors':
    parameters:
      - in: query
        name: ids
        description: A comma-separated list of documents ids. You must define ids as parameter or set "ids" or "docs" in the request body
        type: string
      - in: query
        name: term_statistics
        description: Specifies if total term frequency and document frequency should be returned. Applies to all returned documents unless otherwise specified in body "params" or "docs".
        type: boolean
      - in: query
        name: field_statistics
        description: 'Specifies if document count, sum of document frequencies and sum of total term frequencies should be returned. Applies to all returned documents unless otherwise specified in body "params" or "docs".'
        type: boolean
      - in: query
        name: fields
        description: A comma-separated list of fields to return. Applies to all returned documents unless otherwise specified in body "params" or "docs".
        type: string
        format: Fields
      - in: query
        name: offsets
        description: Specifies if term offsets should be returned. Applies to all returned documents unless otherwise specified in body "params" or "docs".
        type: boolean
      - in: query
        name: positions
        description: Specifies if term positions should be returned. Applies to all returned documents unless otherwise specified in body "params" or "docs".
        type: boolean
      - in: query
        name: payloads
        description: Specifies if term payloads should be returned. Applies to all returned documents unless otherwise specified in body "params" or "docs".
        type: boolean
      - in: query
        name: preference
        description: 'Specify the node or shard the operation should be performed on (default: random) .Applies to all returned documents unless otherwise specified in body "params" or "docs".'
        type: string
      - in: query
        name: routing
        description: Specific routing value. Applies to all returned documents unless otherwise specified in body "params" or "docs".
        type: string
        format: Routing
      - in: query
        name: parent
        description: Parent id of documents. Applies to all returned documents unless otherwise specified in body "params" or "docs".
        type: string
      - in: query
        name: realtime
        description: 'Specifies if requests are real-time as opposed to near-real-time (default: true).'
        type: boolean
      - in: query
        name: version
        description: Explicit version number for concurrency control
        type: integer
        format: long
      - in: query
        name: version_type
        description: Specific version type
        type: string
        format: version_type
      - in: body
        name: request
        description: 'Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.'
        required: false
        schema:
          $ref: '#/definitions/MultiTermVectorsRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/MultiTermVectorsResponse'
      tags:
        - mtermvectors
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: The index in which the document resides.
          type: string
          format: IndexName
        - in: path
          name: type
          required: true
          description: The type of the document.
          type: string
          format: TypeName
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/MultiTermVectorsResponse'
      tags:
        - mtermvectors
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: The index in which the document resides.
          type: string
          format: IndexName
        - in: path
          name: type
          required: true
          description: The type of the document.
          type: string
          format: TypeName
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html'
  /_reindex:
    parameters:
      - in: query
        name: refresh
        description: Should the effected indexes be refreshed?
        type: boolean
      - in: query
        name: timeout
        description: Time each individual bulk request should wait for shards that are unavailable.
        type: string
        format: time
      - in: query
        name: wait_for_active_shards
        description: 'Sets the number of shard copies that must be active before proceeding with the reindex operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)'
        type: string
      - in: query
        name: wait_for_completion
        description: Should the request should block until the reindex is complete.
        type: boolean
      - in: query
        name: requests_per_second
        description: The throttle to set on this request in sub-requests per second. -1 means no throttle.
        type: integer
        format: long
      - in: query
        name: slices
        description: The number of slices this task should be divided into. Defaults to 1 meaning the task isn't sliced into subtasks.
        type: integer
        format: long
      - in: body
        name: request
        description: The search definition using the Query DSL and the prototype for the index request.
        required: true
        schema:
          $ref: '#/definitions/ReindexOnServerRequest'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ReindexOnServerResponse'
      tags:
        - reindex
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-reindex.html'
  '/_reindex/{task_id}/_rethrottle':
    parameters:
      - in: query
        name: requests_per_second
        description: The throttle to set on this request in floating sub-requests per second. -1 means set no throttle.
        type: integer
        format: long
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ReindexRethrottleResponse'
      tags:
        - reindex_rethrottle
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: task_id
          required: true
          description: The task id to rethrottle
          type: string
          format: TaskId
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-reindex.html'
  '/_update_by_query/{task_id}/_rethrottle':
    parameters:
      - in: query
        name: requests_per_second
        description: The throttle to set on this request in floating sub-requests per second. -1 means set no throttle.
        type: integer
        format: long
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ReindexRethrottleResponse'
      tags:
        - reindex_rethrottle
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: task_id
          required: true
          description: The task id to rethrottle
          type: string
          format: TaskId
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-reindex.html'
  '/_delete_by_query/{task_id}/_rethrottle':
    parameters:
      - in: query
        name: requests_per_second
        description: The throttle to set on this request in floating sub-requests per second. -1 means set no throttle.
        type: integer
        format: long
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ReindexRethrottleResponse'
      tags:
        - reindex_rethrottle
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: task_id
          required: true
          description: The task id to rethrottle
          type: string
          format: TaskId
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-reindex.html'
  '/{index}/_update_by_query':
    parameters:
      - in: query
        name: analyzer
        description: The analyzer to use for the query string
        type: string
      - in: query
        name: analyze_wildcard
        description: 'Specify whether wildcard and prefix queries should be analyzed (default: false)'
        type: boolean
      - in: query
        name: default_operator
        description: The default operator for query string query (AND or OR)
        type: string
        format: default_operator
      - in: query
        name: df
        description: The field to use as default where no field prefix is given in the query string
        type: string
      - in: query
        name: from
        description: 'Starting offset (default: 0)'
        type: integer
        format: long
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: conflicts
        description: What to do when the update by query hits version conflicts?
        type: string
        format: conflicts
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: lenient
        description: Specify whether format-based query failures (such as providing text to a numeric field) should be ignored
        type: boolean
      - in: query
        name: pipeline
        description: 'Ingest pipeline to set on index requests made by this action. (default: none)'
        type: string
      - in: query
        name: preference
        description: 'Specify the node or shard the operation should be performed on (default: random)'
        type: string
      - in: query
        name: q
        description: Query in the Lucene query string syntax
        type: string
      - in: query
        name: routing
        description: A comma-separated list of specific routing values
        type: string
        format: Routing
      - in: query
        name: scroll
        description: Specify how long a consistent view of the index should be maintained for scrolled search
        type: string
        format: time
      - in: query
        name: search_type
        description: Search operation type
        type: string
        format: search_type
      - in: query
        name: search_timeout
        description: Explicit timeout for each search request. Defaults to no timeout.
        type: string
        format: time
      - in: query
        name: size
        description: 'Number of hits to return (default: 10)'
        type: integer
        format: long
      - in: query
        name: sort
        description: 'A comma-separated list of <field>:<direction> pairs'
        type: string
      - in: query
        name: _source
        description: 'True or false to return the _source field or not, or a list of fields to return'
        type: string
      - in: query
        name: _source_exclude
        description: A list of fields to exclude from the returned _source field
        type: string
        format: Fields
      - in: query
        name: _source_include
        description: A list of fields to extract and return from the _source field
        type: string
        format: Fields
      - in: query
        name: terminate_after
        description: 'The maximum number of documents to collect for each shard, upon reaching which the query execution will terminate early.'
        type: integer
        format: long
      - in: query
        name: stats
        description: Specific 'tag' of the request for logging and statistical purposes
        type: string
      - in: query
        name: version
        description: Specify whether to return document version as part of a hit
        type: boolean
      - in: query
        name: version_type
        description: Should the document increment the version number (internal) on hit or not (reindex)
        type: boolean
      - in: query
        name: request_cache
        description: 'Specify if request cache should be used for this request or not, defaults to index level setting'
        type: boolean
      - in: query
        name: refresh
        description: Should the effected indexes be refreshed?
        type: boolean
      - in: query
        name: timeout
        description: Time each individual bulk request should wait for shards that are unavailable.
        type: string
        format: time
      - in: query
        name: wait_for_active_shards
        description: 'Sets the number of shard copies that must be active before proceeding with the update by query operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)'
        type: string
      - in: query
        name: scroll_size
        description: Size on the scroll request powering the update_by_query
        type: integer
        format: long
      - in: query
        name: wait_for_completion
        description: Should the request should block until the update by query operation is complete.
        type: boolean
      - in: query
        name: requests_per_second
        description: The throttle to set on this request in sub-requests per second. -1 means no throttle.
        type: integer
        format: long
      - in: query
        name: slices
        description: The number of slices this task should be divided into. Defaults to 1 meaning the task isn't sliced into subtasks.
        type: integer
        format: long
      - in: body
        name: request
        description: The search definition using the Query DSL
        required: false
        schema:
          $ref: '#/definitions/UpdateByQueryRequest'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/UpdateByQueryResponse'
      tags:
        - update_by_query
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices
          type: string
          format: Indices
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-update-by-query.html'
  '/{index}/{type}/_update_by_query':
    parameters:
      - in: query
        name: analyzer
        description: The analyzer to use for the query string
        type: string
      - in: query
        name: analyze_wildcard
        description: 'Specify whether wildcard and prefix queries should be analyzed (default: false)'
        type: boolean
      - in: query
        name: default_operator
        description: The default operator for query string query (AND or OR)
        type: string
        format: default_operator
      - in: query
        name: df
        description: The field to use as default where no field prefix is given in the query string
        type: string
      - in: query
        name: from
        description: 'Starting offset (default: 0)'
        type: integer
        format: long
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: conflicts
        description: What to do when the update by query hits version conflicts?
        type: string
        format: conflicts
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: lenient
        description: Specify whether format-based query failures (such as providing text to a numeric field) should be ignored
        type: boolean
      - in: query
        name: pipeline
        description: 'Ingest pipeline to set on index requests made by this action. (default: none)'
        type: string
      - in: query
        name: preference
        description: 'Specify the node or shard the operation should be performed on (default: random)'
        type: string
      - in: query
        name: q
        description: Query in the Lucene query string syntax
        type: string
      - in: query
        name: routing
        description: A comma-separated list of specific routing values
        type: string
        format: Routing
      - in: query
        name: scroll
        description: Specify how long a consistent view of the index should be maintained for scrolled search
        type: string
        format: time
      - in: query
        name: search_type
        description: Search operation type
        type: string
        format: search_type
      - in: query
        name: search_timeout
        description: Explicit timeout for each search request. Defaults to no timeout.
        type: string
        format: time
      - in: query
        name: size
        description: 'Number of hits to return (default: 10)'
        type: integer
        format: long
      - in: query
        name: sort
        description: 'A comma-separated list of <field>:<direction> pairs'
        type: string
      - in: query
        name: _source
        description: 'True or false to return the _source field or not, or a list of fields to return'
        type: string
      - in: query
        name: _source_exclude
        description: A list of fields to exclude from the returned _source field
        type: string
        format: Fields
      - in: query
        name: _source_include
        description: A list of fields to extract and return from the _source field
        type: string
        format: Fields
      - in: query
        name: terminate_after
        description: 'The maximum number of documents to collect for each shard, upon reaching which the query execution will terminate early.'
        type: integer
        format: long
      - in: query
        name: stats
        description: Specific 'tag' of the request for logging and statistical purposes
        type: string
      - in: query
        name: version
        description: Specify whether to return document version as part of a hit
        type: boolean
      - in: query
        name: version_type
        description: Should the document increment the version number (internal) on hit or not (reindex)
        type: boolean
      - in: query
        name: request_cache
        description: 'Specify if request cache should be used for this request or not, defaults to index level setting'
        type: boolean
      - in: query
        name: refresh
        description: Should the effected indexes be refreshed?
        type: boolean
      - in: query
        name: timeout
        description: Time each individual bulk request should wait for shards that are unavailable.
        type: string
        format: time
      - in: query
        name: wait_for_active_shards
        description: 'Sets the number of shard copies that must be active before proceeding with the update by query operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)'
        type: string
      - in: query
        name: scroll_size
        description: Size on the scroll request powering the update_by_query
        type: integer
        format: long
      - in: query
        name: wait_for_completion
        description: Should the request should block until the update by query operation is complete.
        type: boolean
      - in: query
        name: requests_per_second
        description: The throttle to set on this request in sub-requests per second. -1 means no throttle.
        type: integer
        format: long
      - in: query
        name: slices
        description: The number of slices this task should be divided into. Defaults to 1 meaning the task isn't sliced into subtasks.
        type: integer
        format: long
      - in: body
        name: request
        description: The search definition using the Query DSL
        required: false
        schema:
          $ref: '#/definitions/UpdateByQueryRequest'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/UpdateByQueryResponse'
      tags:
        - update_by_query
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices
          type: string
          format: Indices
        - in: path
          name: type
          required: true
          description: A comma-separated list of document types to search; leave empty to perform the operation on all types
          type: string
          format: Types
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-update-by-query.html'
  '/{index}/{type}/{id}/_create':
    parameters:
      - in: query
        name: wait_for_active_shards
        description: 'Sets the number of shard copies that must be active before proceeding with the index operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)'
        type: string
      - in: query
        name: parent
        description: ID of the parent document
        type: string
      - in: query
        name: refresh
        description: 'If `true` then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` (the default) then do nothing with refreshes.'
        type: string
        format: refresh
      - in: query
        name: routing
        description: Specific routing value
        type: string
        format: Routing
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: version
        description: Explicit version number for concurrency control
        type: integer
        format: long
      - in: query
        name: version_type
        description: Specific version type
        type: string
        format: version_type
      - in: query
        name: pipeline
        description: The pipeline id to preprocess incoming documents with
        type: string
      - in: body
        name: request
        description: The document
        required: true
        schema:
          $ref: '#/definitions/CreateRequest'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CreateResponse'
      tags:
        - create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          description: Document ID
          type: string
          format: Id
        - in: path
          name: index
          required: true
          description: The name of the index
          type: string
          format: IndexName
        - in: path
          name: type
          required: true
          description: The type of the document
          type: string
          format: TypeName
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-index_.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CreateResponse'
      tags:
        - create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          description: Document ID
          type: string
          format: Id
        - in: path
          name: index
          required: true
          description: The name of the index
          type: string
          format: IndexName
        - in: path
          name: type
          required: true
          description: The type of the document
          type: string
          format: TypeName
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-index_.html'
  '/{index}/{type}/{id}':
    parameters:
      - in: query
        name: wait_for_active_shards
        description: 'Sets the number of shard copies that must be active before proceeding with the index operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)'
        type: string
      - in: query
        name: op_type
        description: Explicit operation type
        type: string
        format: op_type
      - in: query
        name: parent
        description: ID of the parent document
        type: string
      - in: query
        name: refresh
        description: 'If `true` then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` (the default) then do nothing with refreshes.'
        type: string
        format: refresh
      - in: query
        name: routing
        description: Specific routing value
        type: string
        format: Routing
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: version
        description: Explicit version number for concurrency control
        type: integer
        format: long
      - in: query
        name: version_type
        description: Specific version type
        type: string
        format: version_type
      - in: query
        name: pipeline
        description: The pipeline id to preprocess incoming documents with
        type: string
      - in: body
        name: request
        description: The document
        required: true
        schema:
          $ref: '#/definitions/IndexRequest'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/IndexResponse'
      tags:
        - index
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          description: Document ID
          type: string
          format: Id
        - in: path
          name: index
          required: true
          description: The name of the index
          type: string
          format: IndexName
        - in: path
          name: type
          required: true
          description: The type of the document
          type: string
          format: TypeName
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-index_.html'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/IndexResponse'
      tags:
        - index
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          description: Document ID
          type: string
          format: Id
        - in: path
          name: index
          required: true
          description: The name of the index
          type: string
          format: IndexName
        - in: path
          name: type
          required: true
          description: The type of the document
          type: string
          format: TypeName
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-index_.html'
  '/{index}/{type}':
    parameters:
      - in: query
        name: wait_for_active_shards
        description: 'Sets the number of shard copies that must be active before proceeding with the index operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)'
        type: string
      - in: query
        name: op_type
        description: Explicit operation type
        type: string
        format: op_type
      - in: query
        name: parent
        description: ID of the parent document
        type: string
      - in: query
        name: refresh
        description: 'If `true` then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` (the default) then do nothing with refreshes.'
        type: string
        format: refresh
      - in: query
        name: routing
        description: Specific routing value
        type: string
        format: Routing
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: version
        description: Explicit version number for concurrency control
        type: integer
        format: long
      - in: query
        name: version_type
        description: Specific version type
        type: string
        format: version_type
      - in: query
        name: pipeline
        description: The pipeline id to preprocess incoming documents with
        type: string
      - in: body
        name: request
        description: The document
        required: true
        schema:
          $ref: '#/definitions/IndexRequest'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/IndexResponse'
      tags:
        - index
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: The name of the index
          type: string
          format: IndexName
        - in: path
          name: type
          required: true
          description: The type of the document
          type: string
          format: TypeName
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-index_.html'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/IndexResponse'
      tags:
        - index
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: The name of the index
          type: string
          format: IndexName
        - in: path
          name: type
          required: true
          description: The type of the document
          type: string
          format: TypeName
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-index_.html'
  '/{index}/{type}/{id}/_source':
    parameters:
      - in: query
        name: parent
        description: The ID of the parent document
        type: string
      - in: query
        name: preference
        description: 'Specify the node or shard the operation should be performed on (default: random)'
        type: string
      - in: query
        name: realtime
        description: Specify whether to perform the operation in realtime or search mode
        type: boolean
      - in: query
        name: refresh
        description: Refresh the shard containing the document before performing the operation
        type: boolean
      - in: query
        name: routing
        description: Specific routing value
        type: string
        format: Routing
      - in: query
        name: _source
        description: 'True or false to return the _source field or not, or a list of fields to return'
        type: string
      - in: query
        name: _source_exclude
        description: A list of fields to exclude from the returned _source field
        type: string
        format: Fields
      - in: query
        name: _source_include
        description: A list of fields to extract and return from the _source field
        type: string
        format: Fields
      - in: query
        name: version
        description: Explicit version number for concurrency control
        type: integer
        format: long
      - in: query
        name: version_type
        description: Specific version type
        type: string
        format: version_type
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/SourceResponse'
      tags:
        - get_source
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          description: The document ID
          type: string
          format: Id
        - in: path
          name: index
          required: true
          description: The name of the index
          type: string
          format: IndexName
        - in: path
          name: type
          required: true
          description: The type of the document; use `_all` to fetch the first document matching the ID across all types
          type: string
          format: TypeName
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html'
  '/{index}/{type}/_termvectors':
    parameters:
      - in: query
        name: term_statistics
        description: Specifies if total term frequency and document frequency should be returned.
        type: boolean
      - in: query
        name: field_statistics
        description: 'Specifies if document count, sum of document frequencies and sum of total term frequencies should be returned.'
        type: boolean
      - in: query
        name: fields
        description: A comma-separated list of fields to return.
        type: string
        format: Fields
      - in: query
        name: offsets
        description: Specifies if term offsets should be returned.
        type: boolean
      - in: query
        name: positions
        description: Specifies if term positions should be returned.
        type: boolean
      - in: query
        name: payloads
        description: Specifies if term payloads should be returned.
        type: boolean
      - in: query
        name: preference
        description: 'Specify the node or shard the operation should be performed on (default: random).'
        type: string
      - in: query
        name: routing
        description: Specific routing value.
        type: string
        format: Routing
      - in: query
        name: parent
        description: Parent id of documents.
        type: string
      - in: query
        name: realtime
        description: 'Specifies if request is real-time as opposed to near-real-time (default: true).'
        type: boolean
      - in: query
        name: version
        description: Explicit version number for concurrency control
        type: integer
        format: long
      - in: query
        name: version_type
        description: Specific version type
        type: string
        format: version_type
      - in: body
        name: request
        description: Define parameters and or supply a document to get termvectors for. See documentation.
        required: false
        schema:
          $ref: '#/definitions/TermVectorsRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/TermVectorsResponse'
      tags:
        - termvectors
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: The index in which the document resides.
          type: string
          format: IndexName
        - in: path
          name: type
          required: true
          description: The type of the document.
          type: string
          format: TypeName
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-termvectors.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/TermVectorsResponse'
      tags:
        - termvectors
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: The index in which the document resides.
          type: string
          format: IndexName
        - in: path
          name: type
          required: true
          description: The type of the document.
          type: string
          format: TypeName
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-termvectors.html'
  '/{index}/{type}/{id}/_termvectors':
    parameters:
      - in: query
        name: term_statistics
        description: Specifies if total term frequency and document frequency should be returned.
        type: boolean
      - in: query
        name: field_statistics
        description: 'Specifies if document count, sum of document frequencies and sum of total term frequencies should be returned.'
        type: boolean
      - in: query
        name: fields
        description: A comma-separated list of fields to return.
        type: string
        format: Fields
      - in: query
        name: offsets
        description: Specifies if term offsets should be returned.
        type: boolean
      - in: query
        name: positions
        description: Specifies if term positions should be returned.
        type: boolean
      - in: query
        name: payloads
        description: Specifies if term payloads should be returned.
        type: boolean
      - in: query
        name: preference
        description: 'Specify the node or shard the operation should be performed on (default: random).'
        type: string
      - in: query
        name: routing
        description: Specific routing value.
        type: string
        format: Routing
      - in: query
        name: parent
        description: Parent id of documents.
        type: string
      - in: query
        name: realtime
        description: 'Specifies if request is real-time as opposed to near-real-time (default: true).'
        type: boolean
      - in: query
        name: version
        description: Explicit version number for concurrency control
        type: integer
        format: long
      - in: query
        name: version_type
        description: Specific version type
        type: string
        format: version_type
      - in: body
        name: request
        description: Define parameters and or supply a document to get termvectors for. See documentation.
        required: false
        schema:
          $ref: '#/definitions/TermVectorsRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/TermVectorsResponse'
      tags:
        - termvectors
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: The index in which the document resides.
          type: string
          format: IndexName
        - in: path
          name: type
          required: true
          description: The type of the document.
          type: string
          format: TypeName
        - in: path
          name: id
          required: true
          description: 'The id of the document, when not specified a doc param should be supplied.'
          type: string
          format: Id
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-termvectors.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/TermVectorsResponse'
      tags:
        - termvectors
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: The index in which the document resides.
          type: string
          format: IndexName
        - in: path
          name: type
          required: true
          description: The type of the document.
          type: string
          format: TypeName
        - in: path
          name: id
          required: true
          description: 'The id of the document, when not specified a doc param should be supplied.'
          type: string
          format: Id
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-termvectors.html'
  '/{index}/{type}/{id}/_update':
    parameters:
      - in: query
        name: wait_for_active_shards
        description: 'Sets the number of shard copies that must be active before proceeding with the update operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)'
        type: string
      - in: query
        name: fields
        description: A comma-separated list of fields to return in the response
        type: string
        format: Fields
      - in: query
        name: _source
        description: 'True or false to return the _source field or not, or a list of fields to return'
        type: string
      - in: query
        name: _source_exclude
        description: A list of fields to exclude from the returned _source field
        type: string
        format: Fields
      - in: query
        name: _source_include
        description: A list of fields to extract and return from the _source field
        type: string
        format: Fields
      - in: query
        name: lang
        description: 'The script language (default: painless)'
        type: string
      - in: query
        name: parent
        description: ID of the parent document. Is is only used for routing and when for the upsert request
        type: string
      - in: query
        name: refresh
        description: 'If `true` then refresh the effected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` (the default) then do nothing with refreshes.'
        type: string
        format: refresh
      - in: query
        name: retry_on_conflict
        description: 'Specify how many times should the operation be retried when a conflict occurs (default: 0)'
        type: integer
        format: long
      - in: query
        name: routing
        description: Specific routing value
        type: string
        format: Routing
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: version
        description: Explicit version number for concurrency control
        type: integer
        format: long
      - in: query
        name: version_type
        description: Specific version type
        type: string
        format: version_type
      - in: body
        name: request
        description: The request definition requires either `script` or partial `doc`
        required: true
        schema:
          $ref: '#/definitions/UpdateRequest'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/UpdateResponse'
      tags:
        - update
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          description: Document ID
          type: string
          format: Id
        - in: path
          name: index
          required: true
          description: The name of the index
          type: string
          format: IndexName
        - in: path
          name: type
          required: true
          description: The type of the document
          type: string
          format: TypeName
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-update.html'
  '/_alias/{name}':
    parameters:
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetAliasResponse'
      tags:
        - indices.get_alias
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: name
          required: true
          description: A comma-separated list of alias names to return
          type: string
          format: Names
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html'
  '/{index}/_alias/{name}':
    parameters:
      - in: query
        name: timeout
        description: Explicit timestamp for the document
        type: string
        format: time
      - in: query
        name: master_timeout
        description: Specify timeout for connection to master
        type: string
        format: time
      - in: body
        name: request
        description: 'The settings for the alias, such as `routing` or `filter`'
        required: false
        schema:
          $ref: '#/definitions/PutAliasRequest'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutAliasResponse'
      tags:
        - indices.put_alias
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names the alias should point to (supports wildcards); use `_all` to perform the operation on all indices.
          type: string
          format: Indices
        - in: path
          name: name
          required: true
          description: The name of the alias to be created or updated
          type: string
          format: Name
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutAliasResponse'
      tags:
        - indices.put_alias
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names the alias should point to (supports wildcards); use `_all` to perform the operation on all indices.
          type: string
          format: Indices
        - in: path
          name: name
          required: true
          description: The name of the alias to be created or updated
          type: string
          format: Name
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html'
  /_aliases:
    parameters:
      - in: query
        name: timeout
        description: Request timeout
        type: string
        format: time
      - in: query
        name: master_timeout
        description: Specify timeout for connection to master
        type: string
        format: time
      - in: body
        name: request
        description: The definition of `actions` to perform
        required: true
        schema:
          $ref: '#/definitions/BulkAliasRequest'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/BulkAliasResponse'
      tags:
        - indices.update_aliases
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html'
  '/{index}/_aliases/{name}':
    parameters:
      - in: query
        name: timeout
        description: Explicit timestamp for the document
        type: string
        format: time
      - in: query
        name: master_timeout
        description: Specify timeout for connection to master
        type: string
        format: time
      - in: body
        name: request
        description: 'The settings for the alias, such as `routing` or `filter`'
        required: false
        schema:
          $ref: '#/definitions/PutAliasRequest'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutAliasResponse'
      tags:
        - indices.put_alias
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names the alias should point to (supports wildcards); use `_all` to perform the operation on all indices.
          type: string
          format: Indices
        - in: path
          name: name
          required: true
          description: The name of the alias to be created or updated
          type: string
          format: Name
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutAliasResponse'
      tags:
        - indices.put_alias
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names the alias should point to (supports wildcards); use `_all` to perform the operation on all indices.
          type: string
          format: Indices
        - in: path
          name: name
          required: true
          description: The name of the alias to be created or updated
          type: string
          format: Name
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html'
  /_alias:
    parameters:
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetAliasResponse'
      tags:
        - indices.get_alias
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html'
  '/{index}/_alias':
    parameters:
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetAliasResponse'
      tags:
        - indices.get_alias
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names to filter aliases
          type: string
          format: Indices
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html'
  /_analyze:
    parameters:
      - in: query
        name: index
        description: The name of the index to scope the operation
        type: string
      - in: query
        name: prefer_local
        description: 'With `true`, specify that a local shard should be used if available, with `false`, use a random shard (default: true)'
        type: boolean
      - in: query
        name: format
        description: Format of the output
        type: string
        format: format
      - in: body
        name: request
        description: Define analyzer/tokenizer parameters and the text on which the analysis should be performed
        required: false
        schema:
          $ref: '#/definitions/AnalyzeRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/AnalyzeResponse'
      tags:
        - indices.analyze
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-analyze.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/AnalyzeResponse'
      tags:
        - indices.analyze
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-analyze.html'
  '/{index}/_analyze':
    parameters:
      - in: query
        name: index
        description: The name of the index to scope the operation
        type: string
      - in: query
        name: prefer_local
        description: 'With `true`, specify that a local shard should be used if available, with `false`, use a random shard (default: true)'
        type: boolean
      - in: query
        name: format
        description: Format of the output
        type: string
        format: format
      - in: body
        name: request
        description: Define analyzer/tokenizer parameters and the text on which the analysis should be performed
        required: false
        schema:
          $ref: '#/definitions/AnalyzeRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/AnalyzeResponse'
      tags:
        - indices.analyze
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: The name of the index to scope the operation
          type: string
          format: IndexName
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-analyze.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/AnalyzeResponse'
      tags:
        - indices.analyze
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: The name of the index to scope the operation
          type: string
          format: IndexName
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-analyze.html'
  '/{index}':
    parameters:
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
      - in: query
        name: ignore_unavailable
        description: 'Ignore unavailable indexes (default: false)'
        type: boolean
      - in: query
        name: allow_no_indices
        description: 'Ignore if a wildcard expression resolves to no concrete indices (default: false)'
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether wildcard expressions should get expanded to open or closed indices (default: open)'
        type: string
        format: expand_wildcards
      - in: query
        name: flat_settings
        description: 'Return settings in flat format (default: false)'
        type: boolean
      - in: query
        name: include_defaults
        description: Whether to return all default setting for each of the indices.
        type: boolean
    head:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ExistsResponse'
      tags:
        - indices.exists
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names
          type: string
          format: Indices
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-exists.html'
  '/{index}/_close':
    parameters:
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: master_timeout
        description: Specify timeout for connection to master
        type: string
        format: time
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CloseIndexResponse'
      tags:
        - indices.close
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma separated list of indices to close
          type: string
          format: Indices
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-open-close.html'
  '/{index}/_open':
    parameters:
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: master_timeout
        description: Specify timeout for connection to master
        type: string
        format: time
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: wait_for_active_shards
        description: Sets the number of active shards to wait for before the operation returns.
        type: string
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/OpenIndexResponse'
      tags:
        - indices.open
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma separated list of indices to open
          type: string
          format: Indices
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-open-close.html'
  '/{alias}/_rollover':
    parameters:
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: dry_run
        description: If set to true the rollover action will only be validated but not actually performed even if a condition matches. The default is false
        type: boolean
      - in: query
        name: master_timeout
        description: Specify timeout for connection to master
        type: string
        format: time
      - in: query
        name: wait_for_active_shards
        description: Set the number of active shards to wait for on the newly created rollover index before the operation returns.
        type: string
      - in: body
        name: request
        description: The conditions that needs to be met for executing rollover
        required: false
        schema:
          $ref: '#/definitions/RolloverIndexRequest'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/RolloverIndexResponse'
      tags:
        - indices.rollover
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: alias
          required: true
          description: The name of the alias to rollover
          type: string
          format: Name
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-rollover-index.html'
  '/{alias}/_rollover/{new_index}':
    parameters:
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: dry_run
        description: If set to true the rollover action will only be validated but not actually performed even if a condition matches. The default is false
        type: boolean
      - in: query
        name: master_timeout
        description: Specify timeout for connection to master
        type: string
        format: time
      - in: query
        name: wait_for_active_shards
        description: Set the number of active shards to wait for on the newly created rollover index before the operation returns.
        type: string
      - in: body
        name: request
        description: The conditions that needs to be met for executing rollover
        required: false
        schema:
          $ref: '#/definitions/RolloverIndexRequest'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/RolloverIndexResponse'
      tags:
        - indices.rollover
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: alias
          required: true
          description: The name of the alias to rollover
          type: string
          format: Name
        - in: path
          name: new_index
          required: true
          description: The name of the rollover index
          type: string
          format: IndexName
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-rollover-index.html'
  '/{index}/_shrink/{target}':
    parameters:
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: master_timeout
        description: Specify timeout for connection to master
        type: string
        format: time
      - in: query
        name: wait_for_active_shards
        description: Set the number of active shards to wait for on the shrunken index before the operation returns.
        type: string
      - in: body
        name: request
        description: The configuration for the target index (`settings` and `aliases`)
        required: false
        schema:
          $ref: '#/definitions/ShrinkIndexRequest'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ShrinkIndexResponse'
      tags:
        - indices.shrink
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: The name of the source index to shrink
          type: string
          format: IndexName
        - in: path
          name: target
          required: true
          description: The name of the target index to shrink into
          type: string
          format: IndexName
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-shrink-index.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ShrinkIndexResponse'
      tags:
        - indices.shrink
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: The name of the source index to shrink
          type: string
          format: IndexName
        - in: path
          name: target
          required: true
          description: The name of the target index to shrink into
          type: string
          format: IndexName
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-shrink-index.html'
  '/{index}/_mapping/{type}':
    parameters:
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: master_timeout
        description: Specify timeout for connection to master
        type: string
        format: time
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: update_all_types
        description: Whether to update the mapping for all fields with the same name across all types or not
        type: boolean
      - in: body
        name: request
        description: The mapping definition
        required: true
        schema:
          $ref: '#/definitions/PutMappingRequest'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutMappingResponse'
      tags:
        - indices.put_mapping
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names the mapping should be added to (supports wildcards); use `_all` or omit to add the mapping on all indices.
          type: string
          format: Indices
        - in: path
          name: type
          required: true
          description: The name of the document type
          type: string
          format: TypeName
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-put-mapping.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutMappingResponse'
      tags:
        - indices.put_mapping
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names the mapping should be added to (supports wildcards); use `_all` or omit to add the mapping on all indices.
          type: string
          format: Indices
        - in: path
          name: type
          required: true
          description: The name of the document type
          type: string
          format: TypeName
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-put-mapping.html'
  /_settings:
    parameters:
      - in: query
        name: master_timeout
        description: Specify timeout for connection to master
        type: string
        format: time
      - in: query
        name: preserve_existing
        description: 'Whether to update existing settings. If set to `true` existing settings on an index remain unchanged, the default is `false`'
        type: boolean
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: flat_settings
        description: 'Return settings in flat format (default: false)'
        type: boolean
      - in: body
        name: request
        description: The index settings to be updated
        required: true
        schema:
          $ref: '#/definitions/UpdateIndexSettingsRequest'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/UpdateIndexSettingsResponse'
      tags:
        - indices.put_settings
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-update-settings.html'
  '/{index}/_settings':
    parameters:
      - in: query
        name: master_timeout
        description: Specify timeout for connection to master
        type: string
        format: time
      - in: query
        name: preserve_existing
        description: 'Whether to update existing settings. If set to `true` existing settings on an index remain unchanged, the default is `false`'
        type: boolean
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: flat_settings
        description: 'Return settings in flat format (default: false)'
        type: boolean
      - in: body
        name: request
        description: The index settings to be updated
        required: true
        schema:
          $ref: '#/definitions/UpdateIndexSettingsRequest'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/UpdateIndexSettingsResponse'
      tags:
        - indices.put_settings
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices
          type: string
          format: Indices
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-update-settings.html'
  '/{index}/_settings/{name}':
    parameters:
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: flat_settings
        description: 'Return settings in flat format (default: false)'
        type: boolean
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
      - in: query
        name: include_defaults
        description: Whether to return all default setting for each of the indices.
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetIndexSettingsResponse'
      tags:
        - indices.get_settings
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices
          type: string
          format: Indices
        - in: path
          name: name
          required: true
          description: The name of the settings that should be included
          type: string
          format: Names
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-settings.html'
  '/_settings/{name}':
    parameters:
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: flat_settings
        description: 'Return settings in flat format (default: false)'
        type: boolean
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
      - in: query
        name: include_defaults
        description: Whether to return all default setting for each of the indices.
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetIndexSettingsResponse'
      tags:
        - indices.get_settings
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: name
          required: true
          description: The name of the settings that should be included
          type: string
          format: Names
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-settings.html'
  '/_template/{name}':
    parameters:
      - in: query
        name: order
        description: 'The order for this template when merging multiple matching ones (higher numbers are merged later, overriding the lower numbers)'
        type: integer
        format: long
      - in: query
        name: create
        description: Whether the index template should only be added if new or can also replace an existing one
        type: boolean
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: master_timeout
        description: Specify timeout for connection to master
        type: string
        format: time
      - in: query
        name: flat_settings
        description: 'Return settings in flat format (default: false)'
        type: boolean
      - in: body
        name: request
        description: The template definition
        required: true
        schema:
          $ref: '#/definitions/PutIndexTemplateRequest'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutIndexTemplateResponse'
      tags:
        - indices.put_template
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: name
          required: true
          description: The name of the template
          type: string
          format: Name
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutIndexTemplateResponse'
      tags:
        - indices.put_template
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: name
          required: true
          description: The name of the template
          type: string
          format: Name
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html'
  /_template:
    parameters:
      - in: query
        name: flat_settings
        description: 'Return settings in flat format (default: false)'
        type: boolean
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetIndexTemplateResponse'
      tags:
        - indices.get_template
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html'
  '/_mapping/field/{fields}':
    parameters:
      - in: query
        name: include_defaults
        description: Whether the default mapping values should be returned as well
        type: boolean
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetFieldMappingResponse'
      tags:
        - indices.get_field_mapping
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: fields
          required: true
          description: A comma-separated list of fields
          type: string
          format: Fields
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-field-mapping.html'
  '/{index}/_mapping/field/{fields}':
    parameters:
      - in: query
        name: include_defaults
        description: Whether the default mapping values should be returned as well
        type: boolean
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetFieldMappingResponse'
      tags:
        - indices.get_field_mapping
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names
          type: string
          format: Indices
        - in: path
          name: fields
          required: true
          description: A comma-separated list of fields
          type: string
          format: Fields
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-field-mapping.html'
  '/_mapping/{type}/field/{fields}':
    parameters:
      - in: query
        name: include_defaults
        description: Whether the default mapping values should be returned as well
        type: boolean
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetFieldMappingResponse'
      tags:
        - indices.get_field_mapping
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: type
          required: true
          description: A comma-separated list of document types
          type: string
          format: Types
        - in: path
          name: fields
          required: true
          description: A comma-separated list of fields
          type: string
          format: Fields
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-field-mapping.html'
  '/{index}/_mapping/{type}/field/{fields}':
    parameters:
      - in: query
        name: include_defaults
        description: Whether the default mapping values should be returned as well
        type: boolean
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetFieldMappingResponse'
      tags:
        - indices.get_field_mapping
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names
          type: string
          format: Indices
        - in: path
          name: type
          required: true
          description: A comma-separated list of document types
          type: string
          format: Types
        - in: path
          name: fields
          required: true
          description: A comma-separated list of fields
          type: string
          format: Fields
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-field-mapping.html'
  /_mapping:
    parameters:
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetMappingResponse'
      tags:
        - indices.get_mapping
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-mapping.html'
  '/{index}/_mapping':
    parameters:
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetMappingResponse'
      tags:
        - indices.get_mapping
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names
          type: string
          format: Indices
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-mapping.html'
  '/_mapping/{type}':
    parameters:
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: master_timeout
        description: Specify timeout for connection to master
        type: string
        format: time
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: update_all_types
        description: Whether to update the mapping for all fields with the same name across all types or not
        type: boolean
      - in: body
        name: request
        description: The mapping definition
        required: true
        schema:
          $ref: '#/definitions/PutMappingRequest'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutMappingResponse'
      tags:
        - indices.put_mapping
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: type
          required: true
          description: The name of the document type
          type: string
          format: TypeName
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-put-mapping.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutMappingResponse'
      tags:
        - indices.put_mapping
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: type
          required: true
          description: The name of the document type
          type: string
          format: TypeName
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-put-mapping.html'
  '/{index}/{type}/_mapping':
    parameters:
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: master_timeout
        description: Specify timeout for connection to master
        type: string
        format: time
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: update_all_types
        description: Whether to update the mapping for all fields with the same name across all types or not
        type: boolean
      - in: body
        name: request
        description: The mapping definition
        required: true
        schema:
          $ref: '#/definitions/PutMappingRequest'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutMappingResponse'
      tags:
        - indices.put_mapping
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names the mapping should be added to (supports wildcards); use `_all` or omit to add the mapping on all indices.
          type: string
          format: Indices
        - in: path
          name: type
          required: true
          description: The name of the document type
          type: string
          format: TypeName
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-put-mapping.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutMappingResponse'
      tags:
        - indices.put_mapping
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names the mapping should be added to (supports wildcards); use `_all` or omit to add the mapping on all indices.
          type: string
          format: Indices
        - in: path
          name: type
          required: true
          description: The name of the document type
          type: string
          format: TypeName
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-put-mapping.html'
  '/{index}/{type}/_mappings':
    parameters:
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: master_timeout
        description: Specify timeout for connection to master
        type: string
        format: time
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: update_all_types
        description: Whether to update the mapping for all fields with the same name across all types or not
        type: boolean
      - in: body
        name: request
        description: The mapping definition
        required: true
        schema:
          $ref: '#/definitions/PutMappingRequest'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutMappingResponse'
      tags:
        - indices.put_mapping
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names the mapping should be added to (supports wildcards); use `_all` or omit to add the mapping on all indices.
          type: string
          format: Indices
        - in: path
          name: type
          required: true
          description: The name of the document type
          type: string
          format: TypeName
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-put-mapping.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutMappingResponse'
      tags:
        - indices.put_mapping
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names the mapping should be added to (supports wildcards); use `_all` or omit to add the mapping on all indices.
          type: string
          format: Indices
        - in: path
          name: type
          required: true
          description: The name of the document type
          type: string
          format: TypeName
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-put-mapping.html'
  '/{index}/_mappings/{type}':
    parameters:
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: master_timeout
        description: Specify timeout for connection to master
        type: string
        format: time
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: update_all_types
        description: Whether to update the mapping for all fields with the same name across all types or not
        type: boolean
      - in: body
        name: request
        description: The mapping definition
        required: true
        schema:
          $ref: '#/definitions/PutMappingRequest'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutMappingResponse'
      tags:
        - indices.put_mapping
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names the mapping should be added to (supports wildcards); use `_all` or omit to add the mapping on all indices.
          type: string
          format: Indices
        - in: path
          name: type
          required: true
          description: The name of the document type
          type: string
          format: TypeName
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-put-mapping.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutMappingResponse'
      tags:
        - indices.put_mapping
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names the mapping should be added to (supports wildcards); use `_all` or omit to add the mapping on all indices.
          type: string
          format: Indices
        - in: path
          name: type
          required: true
          description: The name of the document type
          type: string
          format: TypeName
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-put-mapping.html'
  '/_mappings/{type}':
    parameters:
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: master_timeout
        description: Specify timeout for connection to master
        type: string
        format: time
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: update_all_types
        description: Whether to update the mapping for all fields with the same name across all types or not
        type: boolean
      - in: body
        name: request
        description: The mapping definition
        required: true
        schema:
          $ref: '#/definitions/PutMappingRequest'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutMappingResponse'
      tags:
        - indices.put_mapping
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: type
          required: true
          description: The name of the document type
          type: string
          format: TypeName
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-put-mapping.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutMappingResponse'
      tags:
        - indices.put_mapping
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: type
          required: true
          description: The name of the document type
          type: string
          format: TypeName
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-put-mapping.html'
  /_recovery:
    parameters:
      - in: query
        name: detailed
        description: Whether to display detailed information about shard recovery
        type: boolean
      - in: query
        name: active_only
        description: Display only those recoveries that are currently on-going
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/RecoveryStatusResponse'
      tags:
        - indices.recovery
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-recovery.html'
  '/{index}/_recovery':
    parameters:
      - in: query
        name: detailed
        description: Whether to display detailed information about shard recovery
        type: boolean
      - in: query
        name: active_only
        description: Display only those recoveries that are currently on-going
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/RecoveryStatusResponse'
      tags:
        - indices.recovery
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices
          type: string
          format: Indices
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-recovery.html'
  /_segments:
    parameters:
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: verbose
        description: Includes detailed memory usage by Lucene.
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/SegmentsResponse'
      tags:
        - indices.segments
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-segments.html'
  '/{index}/_segments':
    parameters:
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: verbose
        description: Includes detailed memory usage by Lucene.
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/SegmentsResponse'
      tags:
        - indices.segments
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices
          type: string
          format: Indices
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-segments.html'
  /_shard_stores:
    parameters:
      - in: query
        name: status
        description: A comma-separated list of statuses used to filter on shards to get store information for
        type: string
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/IndicesShardStoresResponse'
      tags:
        - indices.shard_stores
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-shards-stores.html'
  '/{index}/_shard_stores':
    parameters:
      - in: query
        name: status
        description: A comma-separated list of statuses used to filter on shards to get store information for
        type: string
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/IndicesShardStoresResponse'
      tags:
        - indices.shard_stores
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices
          type: string
          format: Indices
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-shards-stores.html'
  /_stats:
    parameters:
      - in: query
        name: completion_fields
        description: A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)
        type: string
        format: Fields
      - in: query
        name: fielddata_fields
        description: A comma-separated list of fields for `fielddata` index metric (supports wildcards)
        type: string
        format: Fields
      - in: query
        name: fields
        description: A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)
        type: string
        format: Fields
      - in: query
        name: groups
        description: A comma-separated list of search groups for `search` index metric
        type: string
      - in: query
        name: level
        description: 'Return stats aggregated at cluster, index or shard level'
        type: string
        format: level
      - in: query
        name: types
        description: A comma-separated list of document types for the `indexing` index metric
        type: string
      - in: query
        name: include_segment_file_sizes
        description: Whether to report the aggregated disk usage of each one of the Lucene index files (only applies if segment stats are requested)
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/IndicesStatsResponse'
      tags:
        - indices.stats
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-stats.html'
  '/_stats/{metric}':
    parameters:
      - in: query
        name: completion_fields
        description: A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)
        type: string
        format: Fields
      - in: query
        name: fielddata_fields
        description: A comma-separated list of fields for `fielddata` index metric (supports wildcards)
        type: string
        format: Fields
      - in: query
        name: fields
        description: A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)
        type: string
        format: Fields
      - in: query
        name: groups
        description: A comma-separated list of search groups for `search` index metric
        type: string
      - in: query
        name: level
        description: 'Return stats aggregated at cluster, index or shard level'
        type: string
        format: level
      - in: query
        name: types
        description: A comma-separated list of document types for the `indexing` index metric
        type: string
      - in: query
        name: include_segment_file_sizes
        description: Whether to report the aggregated disk usage of each one of the Lucene index files (only applies if segment stats are requested)
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/IndicesStatsResponse'
      tags:
        - indices.stats
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: metric
          required: true
          description: Limit the information returned the specific metrics.
          type: string
          format: Metrics
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-stats.html'
  '/{index}/_stats':
    parameters:
      - in: query
        name: completion_fields
        description: A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)
        type: string
        format: Fields
      - in: query
        name: fielddata_fields
        description: A comma-separated list of fields for `fielddata` index metric (supports wildcards)
        type: string
        format: Fields
      - in: query
        name: fields
        description: A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)
        type: string
        format: Fields
      - in: query
        name: groups
        description: A comma-separated list of search groups for `search` index metric
        type: string
      - in: query
        name: level
        description: 'Return stats aggregated at cluster, index or shard level'
        type: string
        format: level
      - in: query
        name: types
        description: A comma-separated list of document types for the `indexing` index metric
        type: string
      - in: query
        name: include_segment_file_sizes
        description: Whether to report the aggregated disk usage of each one of the Lucene index files (only applies if segment stats are requested)
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/IndicesStatsResponse'
      tags:
        - indices.stats
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices
          type: string
          format: Indices
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-stats.html'
  '/{index}/_stats/{metric}':
    parameters:
      - in: query
        name: completion_fields
        description: A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)
        type: string
        format: Fields
      - in: query
        name: fielddata_fields
        description: A comma-separated list of fields for `fielddata` index metric (supports wildcards)
        type: string
        format: Fields
      - in: query
        name: fields
        description: A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)
        type: string
        format: Fields
      - in: query
        name: groups
        description: A comma-separated list of search groups for `search` index metric
        type: string
      - in: query
        name: level
        description: 'Return stats aggregated at cluster, index or shard level'
        type: string
        format: level
      - in: query
        name: types
        description: A comma-separated list of document types for the `indexing` index metric
        type: string
      - in: query
        name: include_segment_file_sizes
        description: Whether to report the aggregated disk usage of each one of the Lucene index files (only applies if segment stats are requested)
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/IndicesStatsResponse'
      tags:
        - indices.stats
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices
          type: string
          format: Indices
        - in: path
          name: metric
          required: true
          description: Limit the information returned the specific metrics.
          type: string
          format: Metrics
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-stats.html'
  /_cache/clear:
    parameters:
      - in: query
        name: field_data
        description: Clear field data
        type: boolean
      - in: query
        name: fielddata
        description: Clear field data
        type: boolean
      - in: query
        name: fields
        description: 'A comma-separated list of fields to clear when using the `field_data` parameter (default: all)'
        type: string
        format: Fields
      - in: query
        name: query
        description: Clear query caches
        type: boolean
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: index
        description: A comma-separated list of index name to limit the operation
        type: string
      - in: query
        name: recycler
        description: Clear the recycler cache
        type: boolean
      - in: query
        name: request_cache
        description: Clear request cache
        type: boolean
      - in: query
        name: request
        description: Clear request cache
        type: boolean
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ClearCacheResponse'
      tags:
        - indices.clear_cache
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-clearcache.html'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ClearCacheResponse'
      tags:
        - indices.clear_cache
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-clearcache.html'
  '/{index}/_cache/clear':
    parameters:
      - in: query
        name: field_data
        description: Clear field data
        type: boolean
      - in: query
        name: fielddata
        description: Clear field data
        type: boolean
      - in: query
        name: fields
        description: 'A comma-separated list of fields to clear when using the `field_data` parameter (default: all)'
        type: string
        format: Fields
      - in: query
        name: query
        description: Clear query caches
        type: boolean
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: index
        description: A comma-separated list of index name to limit the operation
        type: string
      - in: query
        name: recycler
        description: Clear the recycler cache
        type: boolean
      - in: query
        name: request_cache
        description: Clear request cache
        type: boolean
      - in: query
        name: request
        description: Clear request cache
        type: boolean
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ClearCacheResponse'
      tags:
        - indices.clear_cache
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index name to limit the operation
          type: string
          format: Indices
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-clearcache.html'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ClearCacheResponse'
      tags:
        - indices.clear_cache
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index name to limit the operation
          type: string
          format: Indices
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-clearcache.html'
  /_flush:
    parameters:
      - in: query
        name: force
        description: Whether a flush should be forced even if it is not necessarily needed ie. if no changes will be committed to the index. This is useful if transaction log IDs should be incremented even if no uncommitted changes are present. (This setting can be considered as internal)
        type: boolean
      - in: query
        name: wait_if_ongoing
        description: If set to true the flush operation will block until the flush can be executed if another flush operation is already executing. The default is true. If set to false the flush will be skipped iff if another flush operation is already running.
        type: boolean
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/FlushResponse'
      tags:
        - indices.flush
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-flush.html'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/FlushResponse'
      tags:
        - indices.flush
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-flush.html'
  '/{index}/_flush':
    parameters:
      - in: query
        name: force
        description: Whether a flush should be forced even if it is not necessarily needed ie. if no changes will be committed to the index. This is useful if transaction log IDs should be incremented even if no uncommitted changes are present. (This setting can be considered as internal)
        type: boolean
      - in: query
        name: wait_if_ongoing
        description: If set to true the flush operation will block until the flush can be executed if another flush operation is already executing. The default is true. If set to false the flush will be skipped iff if another flush operation is already running.
        type: boolean
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/FlushResponse'
      tags:
        - indices.flush
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names; use `_all` or empty string for all indices
          type: string
          format: Indices
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-flush.html'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/FlushResponse'
      tags:
        - indices.flush
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names; use `_all` or empty string for all indices
          type: string
          format: Indices
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-flush.html'
  /_forcemerge:
    parameters:
      - in: query
        name: flush
        description: 'Specify whether the index should be flushed after performing the operation (default: true)'
        type: boolean
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: max_num_segments
        description: 'The number of segments the index should be merged into (default: dynamic)'
        type: integer
        format: long
      - in: query
        name: only_expunge_deletes
        description: Specify whether the operation should only expunge deleted documents
        type: boolean
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ForceMergeResponse'
      tags:
        - indices.forcemerge
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-forcemerge.html'
  '/{index}/_forcemerge':
    parameters:
      - in: query
        name: flush
        description: 'Specify whether the index should be flushed after performing the operation (default: true)'
        type: boolean
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: max_num_segments
        description: 'The number of segments the index should be merged into (default: dynamic)'
        type: integer
        format: long
      - in: query
        name: only_expunge_deletes
        description: Specify whether the operation should only expunge deleted documents
        type: boolean
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ForceMergeResponse'
      tags:
        - indices.forcemerge
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices
          type: string
          format: Indices
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-forcemerge.html'
  /_refresh:
    parameters:
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/RefreshResponse'
      tags:
        - indices.refresh
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-refresh.html'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/RefreshResponse'
      tags:
        - indices.refresh
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-refresh.html'
  '/{index}/_refresh':
    parameters:
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/RefreshResponse'
      tags:
        - indices.refresh
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices
          type: string
          format: Indices
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-refresh.html'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/RefreshResponse'
      tags:
        - indices.refresh
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices
          type: string
          format: Indices
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-refresh.html'
  /_flush/synced:
    parameters:
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/SyncedFlushResponse'
      tags:
        - indices.flush_synced
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-synced-flush.html'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/SyncedFlushResponse'
      tags:
        - indices.flush_synced
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-synced-flush.html'
  '/{index}/_flush/synced':
    parameters:
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/SyncedFlushResponse'
      tags:
        - indices.flush_synced
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names; use `_all` or empty string for all indices
          type: string
          format: Indices
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-synced-flush.html'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/SyncedFlushResponse'
      tags:
        - indices.flush_synced
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names; use `_all` or empty string for all indices
          type: string
          format: Indices
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-synced-flush.html'
  /_upgrade:
    parameters:
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/UpgradeStatusResponse'
      tags:
        - indices.get_upgrade
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-upgrade.html'
  '/{index}/_upgrade':
    parameters:
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/UpgradeStatusResponse'
      tags:
        - indices.get_upgrade
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices
          type: string
          format: Indices
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-upgrade.html'
  '/_ingest/pipeline/{id}':
    parameters:
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: body
        name: request
        description: The ingest definition
        required: true
        schema:
          $ref: '#/definitions/PutPipelineRequest'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutPipelineResponse'
      tags:
        - ingest.put_pipeline
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          description: Pipeline ID
          type: string
          format: Id
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/plugins/master/ingest.html'
  /_ingest/pipeline:
    parameters:
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetPipelineResponse'
      tags:
        - ingest.get_pipeline
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/plugins/master/ingest.html'
  /_ingest/processor/grok:
    parameters: []
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GrokProcessorPatternsResponse'
      tags:
        - ingest.processor_grok
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/plugins/master/ingest.html'
  /_ingest/pipeline/_simulate:
    parameters:
      - in: query
        name: verbose
        description: Verbose mode. Display data output for each processor in executed pipeline
        type: boolean
      - in: body
        name: request
        description: The simulate definition
        required: true
        schema:
          $ref: '#/definitions/SimulatePipelineRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/SimulatePipelineResponse'
      tags:
        - ingest.simulate
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/plugins/master/ingest.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/SimulatePipelineResponse'
      tags:
        - ingest.simulate
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/plugins/master/ingest.html'
  '/_ingest/pipeline/{id}/_simulate':
    parameters:
      - in: query
        name: verbose
        description: Verbose mode. Display data output for each processor in executed pipeline
        type: boolean
      - in: body
        name: request
        description: The simulate definition
        required: true
        schema:
          $ref: '#/definitions/SimulatePipelineRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/SimulatePipelineResponse'
      tags:
        - ingest.simulate
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          description: Pipeline ID
          type: string
          format: Id
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/plugins/master/ingest.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/SimulatePipelineResponse'
      tags:
        - ingest.simulate
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          description: Pipeline ID
          type: string
          format: Id
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/plugins/master/ingest.html'
  '/_scripts/{id}':
    parameters:
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: master_timeout
        description: Specify timeout for connection to master
        type: string
        format: time
      - in: query
        name: context
        description: Context name to compile script against
        type: string
      - in: body
        name: request
        description: The document
        required: true
        schema:
          $ref: '#/definitions/PutScriptRequest'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutScriptResponse'
      tags:
        - put_script
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          description: Script ID
          type: string
          format: Id
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutScriptResponse'
      tags:
        - put_script
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          description: Script ID
          type: string
          format: Id
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html'
  '/_scripts/{id}/{context}':
    parameters:
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: master_timeout
        description: Specify timeout for connection to master
        type: string
        format: time
      - in: query
        name: context
        description: Context name to compile script against
        type: string
      - in: body
        name: request
        description: The document
        required: true
        schema:
          $ref: '#/definitions/PutScriptRequest'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutScriptResponse'
      tags:
        - put_script
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          description: Script ID
          type: string
          format: Id
        - in: path
          name: context
          required: true
          description: Script context
          type: string
          format: Name
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutScriptResponse'
      tags:
        - put_script
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          description: Script ID
          type: string
          format: Id
        - in: path
          name: context
          required: true
          description: Script context
          type: string
          format: Name
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html'
  '/_snapshot/{repository}':
    parameters:
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetRepositoryResponse'
      tags:
        - snapshot.get_repository
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: repository
          required: true
          description: A comma-separated list of repository names
          type: string
          format: Names
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html'
  /_snapshot:
    parameters:
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetRepositoryResponse'
      tags:
        - snapshot.get_repository
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html'
  '/_snapshot/{repository}/_verify':
    parameters:
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/VerifyRepositoryResponse'
      tags:
        - snapshot.verify_repository
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: repository
          required: true
          description: A repository name
          type: string
          format: Name
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html'
  '/_snapshot/{repository}/{snapshot}/_restore':
    parameters:
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: wait_for_completion
        description: Should this request wait until the operation has completed before returning
        type: boolean
      - in: body
        name: request
        description: Details of what to restore
        required: false
        schema:
          $ref: '#/definitions/RestoreRequest'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/RestoreResponse'
      tags:
        - snapshot.restore
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: repository
          required: true
          description: A repository name
          type: string
          format: Name
        - in: path
          name: snapshot
          required: true
          description: A snapshot name
          type: string
          format: Name
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html'
  '/_snapshot/{repository}/{snapshot}':
    parameters:
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: wait_for_completion
        description: Should this request wait until the operation has completed before returning
        type: boolean
      - in: body
        name: request
        description: The snapshot definition
        required: false
        schema:
          $ref: '#/definitions/SnapshotRequest'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/SnapshotResponse'
      tags:
        - snapshot.create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: repository
          required: true
          description: A repository name
          type: string
          format: Name
        - in: path
          name: snapshot
          required: true
          description: A snapshot name
          type: string
          format: Name
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/SnapshotResponse'
      tags:
        - snapshot.create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: repository
          required: true
          description: A repository name
          type: string
          format: Name
        - in: path
          name: snapshot
          required: true
          description: A snapshot name
          type: string
          format: Name
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html'
  /_snapshot/_status:
    parameters:
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: ignore_unavailable
        description: 'Whether to ignore unavailable snapshots, defaults to false which means a SnapshotMissingException is thrown'
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/SnapshotStatusResponse'
      tags:
        - snapshot.status
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html'
  '/_snapshot/{repository}/_status':
    parameters:
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: ignore_unavailable
        description: 'Whether to ignore unavailable snapshots, defaults to false which means a SnapshotMissingException is thrown'
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/SnapshotStatusResponse'
      tags:
        - snapshot.status
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: repository
          required: true
          description: A repository name
          type: string
          format: Name
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html'
  '/_snapshot/{repository}/{snapshot}/_status':
    parameters:
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: ignore_unavailable
        description: 'Whether to ignore unavailable snapshots, defaults to false which means a SnapshotMissingException is thrown'
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/SnapshotStatusResponse'
      tags:
        - snapshot.status
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: repository
          required: true
          description: A repository name
          type: string
          format: Name
        - in: path
          name: snapshot
          required: true
          description: A comma-separated list of snapshot names
          type: string
          format: Names
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html'
  /_count:
    parameters:
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: min_score
        description: Include only documents with a specific `_score` value in the result
        type: number
        format: double
      - in: query
        name: preference
        description: 'Specify the node or shard the operation should be performed on (default: random)'
        type: string
      - in: query
        name: routing
        description: A comma-separated list of specific routing values
        type: string
        format: Routing
      - in: query
        name: q
        description: Query in the Lucene query string syntax
        type: string
      - in: query
        name: analyzer
        description: The analyzer to use for the query string
        type: string
      - in: query
        name: analyze_wildcard
        description: 'Specify whether wildcard and prefix queries should be analyzed (default: false)'
        type: boolean
      - in: query
        name: default_operator
        description: The default operator for query string query (AND or OR)
        type: string
        format: default_operator
      - in: query
        name: df
        description: The field to use as default where no field prefix is given in the query string
        type: string
      - in: query
        name: lenient
        description: Specify whether format-based query failures (such as providing text to a numeric field) should be ignored
        type: boolean
      - in: query
        name: terminate_after
        description: 'The maximum count for each shard, upon reaching which the query execution will terminate early'
        type: integer
        format: long
      - in: body
        name: request
        description: A query to restrict the results specified with the Query DSL (optional)
        required: false
        schema:
          $ref: '#/definitions/CountRequest'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CountResponse'
      tags:
        - count
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CountResponse'
      tags:
        - count
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html'
  '/{index}/_count':
    parameters:
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: min_score
        description: Include only documents with a specific `_score` value in the result
        type: number
        format: double
      - in: query
        name: preference
        description: 'Specify the node or shard the operation should be performed on (default: random)'
        type: string
      - in: query
        name: routing
        description: A comma-separated list of specific routing values
        type: string
        format: Routing
      - in: query
        name: q
        description: Query in the Lucene query string syntax
        type: string
      - in: query
        name: analyzer
        description: The analyzer to use for the query string
        type: string
      - in: query
        name: analyze_wildcard
        description: 'Specify whether wildcard and prefix queries should be analyzed (default: false)'
        type: boolean
      - in: query
        name: default_operator
        description: The default operator for query string query (AND or OR)
        type: string
        format: default_operator
      - in: query
        name: df
        description: The field to use as default where no field prefix is given in the query string
        type: string
      - in: query
        name: lenient
        description: Specify whether format-based query failures (such as providing text to a numeric field) should be ignored
        type: boolean
      - in: query
        name: terminate_after
        description: 'The maximum count for each shard, upon reaching which the query execution will terminate early'
        type: integer
        format: long
      - in: body
        name: request
        description: A query to restrict the results specified with the Query DSL (optional)
        required: false
        schema:
          $ref: '#/definitions/CountRequest'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CountResponse'
      tags:
        - count
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of indices to restrict the results
          type: string
          format: Indices
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CountResponse'
      tags:
        - count
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of indices to restrict the results
          type: string
          format: Indices
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html'
  '/{index}/{type}/_count':
    parameters:
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: min_score
        description: Include only documents with a specific `_score` value in the result
        type: number
        format: double
      - in: query
        name: preference
        description: 'Specify the node or shard the operation should be performed on (default: random)'
        type: string
      - in: query
        name: routing
        description: A comma-separated list of specific routing values
        type: string
        format: Routing
      - in: query
        name: q
        description: Query in the Lucene query string syntax
        type: string
      - in: query
        name: analyzer
        description: The analyzer to use for the query string
        type: string
      - in: query
        name: analyze_wildcard
        description: 'Specify whether wildcard and prefix queries should be analyzed (default: false)'
        type: boolean
      - in: query
        name: default_operator
        description: The default operator for query string query (AND or OR)
        type: string
        format: default_operator
      - in: query
        name: df
        description: The field to use as default where no field prefix is given in the query string
        type: string
      - in: query
        name: lenient
        description: Specify whether format-based query failures (such as providing text to a numeric field) should be ignored
        type: boolean
      - in: query
        name: terminate_after
        description: 'The maximum count for each shard, upon reaching which the query execution will terminate early'
        type: integer
        format: long
      - in: body
        name: request
        description: A query to restrict the results specified with the Query DSL (optional)
        required: false
        schema:
          $ref: '#/definitions/CountRequest'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CountResponse'
      tags:
        - count
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of indices to restrict the results
          type: string
          format: Indices
        - in: path
          name: type
          required: true
          description: A comma-separated list of types to restrict the results
          type: string
          format: Types
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CountResponse'
      tags:
        - count
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of indices to restrict the results
          type: string
          format: Indices
        - in: path
          name: type
          required: true
          description: A comma-separated list of types to restrict the results
          type: string
          format: Types
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html'
  '/{index}/{type}/{id}/_explain':
    parameters:
      - in: query
        name: analyze_wildcard
        description: 'Specify whether wildcards and prefix queries in the query string query should be analyzed (default: false)'
        type: boolean
      - in: query
        name: analyzer
        description: The analyzer for the query string query
        type: string
      - in: query
        name: default_operator
        description: The default operator for query string query (AND or OR)
        type: string
        format: default_operator
      - in: query
        name: df
        description: 'The default field for query string query (default: _all)'
        type: string
      - in: query
        name: stored_fields
        description: A comma-separated list of stored fields to return in the response
        type: string
        format: Fields
      - in: query
        name: lenient
        description: Specify whether format-based query failures (such as providing text to a numeric field) should be ignored
        type: boolean
      - in: query
        name: parent
        description: The ID of the parent document
        type: string
      - in: query
        name: preference
        description: 'Specify the node or shard the operation should be performed on (default: random)'
        type: string
      - in: query
        name: q
        description: Query in the Lucene query string syntax
        type: string
      - in: query
        name: routing
        description: Specific routing value
        type: string
        format: Routing
      - in: query
        name: _source
        description: 'True or false to return the _source field or not, or a list of fields to return'
        type: string
      - in: query
        name: _source_exclude
        description: A list of fields to exclude from the returned _source field
        type: string
        format: Fields
      - in: query
        name: _source_include
        description: A list of fields to extract and return from the _source field
        type: string
        format: Fields
      - in: body
        name: request
        description: The query definition using the Query DSL
        required: false
        schema:
          $ref: '#/definitions/ExplainRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ExplainResponse'
      tags:
        - explain
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          description: The document ID
          type: string
          format: Id
        - in: path
          name: index
          required: true
          description: The name of the index
          type: string
          format: IndexName
        - in: path
          name: type
          required: true
          description: The type of the document
          type: string
          format: TypeName
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/search-explain.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ExplainResponse'
      tags:
        - explain
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          description: The document ID
          type: string
          format: Id
        - in: path
          name: index
          required: true
          description: The name of the index
          type: string
          format: IndexName
        - in: path
          name: type
          required: true
          description: The type of the document
          type: string
          format: TypeName
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/search-explain.html'
  /_field_caps:
    parameters:
      - in: query
        name: fields
        description: A comma-separated list of field names
        type: string
        format: Fields
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: body
        name: request
        description: Field json objects containing an array of field names
        required: false
        schema:
          $ref: '#/definitions/FieldCapabilitiesRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/FieldCapabilitiesResponse'
      tags:
        - field_caps
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/search-field-caps.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/FieldCapabilitiesResponse'
      tags:
        - field_caps
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/search-field-caps.html'
  '/{index}/_field_caps':
    parameters:
      - in: query
        name: fields
        description: A comma-separated list of field names
        type: string
        format: Fields
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: body
        name: request
        description: Field json objects containing an array of field names
        required: false
        schema:
          $ref: '#/definitions/FieldCapabilitiesRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/FieldCapabilitiesResponse'
      tags:
        - field_caps
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices
          type: string
          format: Indices
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/search-field-caps.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/FieldCapabilitiesResponse'
      tags:
        - field_caps
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices
          type: string
          format: Indices
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/search-field-caps.html'
  /_msearch/template:
    parameters:
      - in: query
        name: search_type
        description: Search operation type
        type: string
        format: search_type
      - in: query
        name: typed_keys
        description: Specify whether aggregation and suggester names should be prefixed by their respective types in the response
        type: boolean
      - in: query
        name: max_concurrent_searches
        description: Controls the maximum number of concurrent searches the multi search api will execute
        type: integer
        format: long
      - in: body
        name: request
        description: 'The request definitions (metadata-search request definition pairs), separated by newlines'
        required: true
        schema:
          $ref: '#/definitions/MultiSearchTemplateRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/MultiSearchTemplateResponse'
      tags:
        - msearch_template
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/search-multi-search.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/MultiSearchTemplateResponse'
      tags:
        - msearch_template
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/search-multi-search.html'
  '/{index}/_msearch/template':
    parameters:
      - in: query
        name: search_type
        description: Search operation type
        type: string
        format: search_type
      - in: query
        name: typed_keys
        description: Specify whether aggregation and suggester names should be prefixed by their respective types in the response
        type: boolean
      - in: query
        name: max_concurrent_searches
        description: Controls the maximum number of concurrent searches the multi search api will execute
        type: integer
        format: long
      - in: body
        name: request
        description: 'The request definitions (metadata-search request definition pairs), separated by newlines'
        required: true
        schema:
          $ref: '#/definitions/MultiSearchTemplateRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/MultiSearchTemplateResponse'
      tags:
        - msearch_template
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names to use as default
          type: string
          format: Indices
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/search-multi-search.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/MultiSearchTemplateResponse'
      tags:
        - msearch_template
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names to use as default
          type: string
          format: Indices
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/search-multi-search.html'
  '/{index}/{type}/_msearch/template':
    parameters:
      - in: query
        name: search_type
        description: Search operation type
        type: string
        format: search_type
      - in: query
        name: typed_keys
        description: Specify whether aggregation and suggester names should be prefixed by their respective types in the response
        type: boolean
      - in: query
        name: max_concurrent_searches
        description: Controls the maximum number of concurrent searches the multi search api will execute
        type: integer
        format: long
      - in: body
        name: request
        description: 'The request definitions (metadata-search request definition pairs), separated by newlines'
        required: true
        schema:
          $ref: '#/definitions/MultiSearchTemplateRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/MultiSearchTemplateResponse'
      tags:
        - msearch_template
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names to use as default
          type: string
          format: Indices
        - in: path
          name: type
          required: true
          description: A comma-separated list of document types to use as default
          type: string
          format: Types
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/search-multi-search.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/MultiSearchTemplateResponse'
      tags:
        - msearch_template
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names to use as default
          type: string
          format: Indices
        - in: path
          name: type
          required: true
          description: A comma-separated list of document types to use as default
          type: string
          format: Types
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/search-multi-search.html'
  /_msearch:
    parameters:
      - in: query
        name: search_type
        description: Search operation type
        type: string
        format: search_type
      - in: query
        name: max_concurrent_searches
        description: Controls the maximum number of concurrent searches the multi search api will execute
        type: integer
        format: long
      - in: query
        name: typed_keys
        description: Specify whether aggregation and suggester names should be prefixed by their respective types in the response
        type: boolean
      - in: query
        name: pre_filter_shard_size
        description: "A threshold that enforces a pre-filter roundtrip to prefilter search shards based on query rewriting if the\_number of shards the search request expands to exceeds the threshold. This filter roundtrip can limit the number of shards significantly if for instance a shard can not match any documents based on it's rewrite method ie. if date filters are mandatory to match but the shard bounds and the query are disjoint."
        type: integer
        format: long
      - in: body
        name: request
        description: 'The request definitions (metadata-search request definition pairs), separated by newlines'
        required: true
        schema:
          $ref: '#/definitions/MultiSearchRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/MultiSearchResponse'
      tags:
        - msearch
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/search-multi-search.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/MultiSearchResponse'
      tags:
        - msearch
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/search-multi-search.html'
  '/{index}/_msearch':
    parameters:
      - in: query
        name: search_type
        description: Search operation type
        type: string
        format: search_type
      - in: query
        name: max_concurrent_searches
        description: Controls the maximum number of concurrent searches the multi search api will execute
        type: integer
        format: long
      - in: query
        name: typed_keys
        description: Specify whether aggregation and suggester names should be prefixed by their respective types in the response
        type: boolean
      - in: query
        name: pre_filter_shard_size
        description: "A threshold that enforces a pre-filter roundtrip to prefilter search shards based on query rewriting if the\_number of shards the search request expands to exceeds the threshold. This filter roundtrip can limit the number of shards significantly if for instance a shard can not match any documents based on it's rewrite method ie. if date filters are mandatory to match but the shard bounds and the query are disjoint."
        type: integer
        format: long
      - in: body
        name: request
        description: 'The request definitions (metadata-search request definition pairs), separated by newlines'
        required: true
        schema:
          $ref: '#/definitions/MultiSearchRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/MultiSearchResponse'
      tags:
        - msearch
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names to use as default
          type: string
          format: Indices
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/search-multi-search.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/MultiSearchResponse'
      tags:
        - msearch
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names to use as default
          type: string
          format: Indices
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/search-multi-search.html'
  '/{index}/{type}/_msearch':
    parameters:
      - in: query
        name: search_type
        description: Search operation type
        type: string
        format: search_type
      - in: query
        name: max_concurrent_searches
        description: Controls the maximum number of concurrent searches the multi search api will execute
        type: integer
        format: long
      - in: query
        name: typed_keys
        description: Specify whether aggregation and suggester names should be prefixed by their respective types in the response
        type: boolean
      - in: query
        name: pre_filter_shard_size
        description: "A threshold that enforces a pre-filter roundtrip to prefilter search shards based on query rewriting if the\_number of shards the search request expands to exceeds the threshold. This filter roundtrip can limit the number of shards significantly if for instance a shard can not match any documents based on it's rewrite method ie. if date filters are mandatory to match but the shard bounds and the query are disjoint."
        type: integer
        format: long
      - in: body
        name: request
        description: 'The request definitions (metadata-search request definition pairs), separated by newlines'
        required: true
        schema:
          $ref: '#/definitions/MultiSearchRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/MultiSearchResponse'
      tags:
        - msearch
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names to use as default
          type: string
          format: Indices
        - in: path
          name: type
          required: true
          description: A comma-separated list of document types to use as default
          type: string
          format: Types
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/search-multi-search.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/MultiSearchResponse'
      tags:
        - msearch
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names to use as default
          type: string
          format: Indices
        - in: path
          name: type
          required: true
          description: A comma-separated list of document types to use as default
          type: string
          format: Types
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/search-multi-search.html'
  '/_search/scroll/{scroll_id}':
    parameters:
      - in: query
        name: scroll
        description: Specify how long a consistent view of the index should be maintained for scrolled search
        type: string
        format: time
      - in: query
        name: scroll_id
        description: The scroll ID for scrolled search
        type: string
      - in: body
        name: request
        description: The scroll ID if not passed by URL or query parameter.
        required: false
        schema:
          $ref: '#/definitions/ScrollRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ScrollResponse'
      tags:
        - scroll
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: scroll_id
          required: true
          description: The scroll ID
          type: string
          format: ScrollId
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/search-request-scroll.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ScrollResponse'
      tags:
        - scroll
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: scroll_id
          required: true
          description: The scroll ID
          type: string
          format: ScrollId
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/search-request-scroll.html'
  /_search/scroll:
    parameters:
      - in: query
        name: scroll
        description: Specify how long a consistent view of the index should be maintained for scrolled search
        type: string
        format: time
      - in: query
        name: scroll_id
        description: The scroll ID for scrolled search
        type: string
      - in: body
        name: request
        description: The scroll ID if not passed by URL or query parameter.
        required: false
        schema:
          $ref: '#/definitions/ScrollRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ScrollResponse'
      tags:
        - scroll
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/search-request-scroll.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ScrollResponse'
      tags:
        - scroll
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/search-request-scroll.html'
  /_search_shards:
    parameters:
      - in: query
        name: preference
        description: 'Specify the node or shard the operation should be performed on (default: random)'
        type: string
      - in: query
        name: routing
        description: Specific routing value
        type: string
        format: Routing
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/SearchShardsResponse'
      tags:
        - search_shards
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/search-shards.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/SearchShardsResponse'
      tags:
        - search_shards
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/search-shards.html'
  '/{index}/_search_shards':
    parameters:
      - in: query
        name: preference
        description: 'Specify the node or shard the operation should be performed on (default: random)'
        type: string
      - in: query
        name: routing
        description: Specific routing value
        type: string
        format: Routing
      - in: query
        name: local
        description: 'Return local information, do not retrieve the state from master node (default: false)'
        type: boolean
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/SearchShardsResponse'
      tags:
        - search_shards
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices
          type: string
          format: Indices
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/search-shards.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/SearchShardsResponse'
      tags:
        - search_shards
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices
          type: string
          format: Indices
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/search-shards.html'
  /_render/template:
    parameters:
      - in: body
        name: request
        description: The search definition template and its params
        required: false
        schema:
          $ref: '#/definitions/RenderSearchTemplateRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/RenderSearchTemplateResponse'
      tags:
        - render_search_template
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/search-template.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/RenderSearchTemplateResponse'
      tags:
        - render_search_template
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/search-template.html'
  '/_render/template/{id}':
    parameters:
      - in: body
        name: request
        description: The search definition template and its params
        required: false
        schema:
          $ref: '#/definitions/RenderSearchTemplateRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/RenderSearchTemplateResponse'
      tags:
        - render_search_template
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          description: The id of the stored search template
          type: string
          format: Id
      externalDocs:
        url: 'http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/search-template.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/RenderSearchTemplateResponse'
      tags:
        - render_search_template
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          description: The id of the stored search template
          type: string
          format: Id
      externalDocs:
        url: 'http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/search-template.html'
  /_search/template:
    parameters:
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: preference
        description: 'Specify the node or shard the operation should be performed on (default: random)'
        type: string
      - in: query
        name: routing
        description: A comma-separated list of specific routing values
        type: string
        format: Routing
      - in: query
        name: scroll
        description: Specify how long a consistent view of the index should be maintained for scrolled search
        type: string
        format: time
      - in: query
        name: search_type
        description: Search operation type
        type: string
        format: search_type
      - in: query
        name: explain
        description: Specify whether to return detailed information about score computation as part of a hit
        type: boolean
      - in: query
        name: profile
        description: Specify whether to profile the query execution
        type: boolean
      - in: query
        name: typed_keys
        description: Specify whether aggregation and suggester names should be prefixed by their respective types in the response
        type: boolean
      - in: body
        name: request
        description: The search definition template and its params
        required: true
        schema:
          $ref: '#/definitions/SearchTemplateRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/SearchTemplateResponse'
      tags:
        - search_template
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/SearchTemplateResponse'
      tags:
        - search_template
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html'
  '/{index}/_search/template':
    parameters:
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: preference
        description: 'Specify the node or shard the operation should be performed on (default: random)'
        type: string
      - in: query
        name: routing
        description: A comma-separated list of specific routing values
        type: string
        format: Routing
      - in: query
        name: scroll
        description: Specify how long a consistent view of the index should be maintained for scrolled search
        type: string
        format: time
      - in: query
        name: search_type
        description: Search operation type
        type: string
        format: search_type
      - in: query
        name: explain
        description: Specify whether to return detailed information about score computation as part of a hit
        type: boolean
      - in: query
        name: profile
        description: Specify whether to profile the query execution
        type: boolean
      - in: query
        name: typed_keys
        description: Specify whether aggregation and suggester names should be prefixed by their respective types in the response
        type: boolean
      - in: body
        name: request
        description: The search definition template and its params
        required: true
        schema:
          $ref: '#/definitions/SearchTemplateRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/SearchTemplateResponse'
      tags:
        - search_template
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices
          type: string
          format: Indices
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/SearchTemplateResponse'
      tags:
        - search_template
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices
          type: string
          format: Indices
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html'
  '/{index}/{type}/_search/template':
    parameters:
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: preference
        description: 'Specify the node or shard the operation should be performed on (default: random)'
        type: string
      - in: query
        name: routing
        description: A comma-separated list of specific routing values
        type: string
        format: Routing
      - in: query
        name: scroll
        description: Specify how long a consistent view of the index should be maintained for scrolled search
        type: string
        format: time
      - in: query
        name: search_type
        description: Search operation type
        type: string
        format: search_type
      - in: query
        name: explain
        description: Specify whether to return detailed information about score computation as part of a hit
        type: boolean
      - in: query
        name: profile
        description: Specify whether to profile the query execution
        type: boolean
      - in: query
        name: typed_keys
        description: Specify whether aggregation and suggester names should be prefixed by their respective types in the response
        type: boolean
      - in: body
        name: request
        description: The search definition template and its params
        required: true
        schema:
          $ref: '#/definitions/SearchTemplateRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/SearchTemplateResponse'
      tags:
        - search_template
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices
          type: string
          format: Indices
        - in: path
          name: type
          required: true
          description: A comma-separated list of document types to search; leave empty to perform the operation on all types
          type: string
          format: Types
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/SearchTemplateResponse'
      tags:
        - search_template
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices
          type: string
          format: Indices
        - in: path
          name: type
          required: true
          description: A comma-separated list of document types to search; leave empty to perform the operation on all types
          type: string
          format: Types
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html'
  /_search:
    parameters:
      - in: query
        name: analyzer
        description: The analyzer to use for the query string
        type: string
      - in: query
        name: analyze_wildcard
        description: 'Specify whether wildcard and prefix queries should be analyzed (default: false)'
        type: boolean
      - in: query
        name: default_operator
        description: The default operator for query string query (AND or OR)
        type: string
        format: default_operator
      - in: query
        name: df
        description: The field to use as default where no field prefix is given in the query string
        type: string
      - in: query
        name: explain
        description: Specify whether to return detailed information about score computation as part of a hit
        type: boolean
      - in: query
        name: stored_fields
        description: A comma-separated list of stored fields to return as part of a hit
        type: string
        format: Fields
      - in: query
        name: docvalue_fields
        description: A comma-separated list of fields to return as the docvalue representation of a field for each hit
        type: string
        format: Fields
      - in: query
        name: from
        description: 'Starting offset (default: 0)'
        type: integer
        format: long
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: lenient
        description: Specify whether format-based query failures (such as providing text to a numeric field) should be ignored
        type: boolean
      - in: query
        name: preference
        description: 'Specify the node or shard the operation should be performed on (default: random)'
        type: string
      - in: query
        name: q
        description: Query in the Lucene query string syntax
        type: string
      - in: query
        name: routing
        description: A comma-separated list of specific routing values
        type: string
        format: Routing
      - in: query
        name: scroll
        description: Specify how long a consistent view of the index should be maintained for scrolled search
        type: string
        format: time
      - in: query
        name: search_type
        description: Search operation type
        type: string
        format: search_type
      - in: query
        name: size
        description: 'Number of hits to return (default: 10)'
        type: integer
        format: long
      - in: query
        name: sort
        description: 'A comma-separated list of <field>:<direction> pairs'
        type: string
      - in: query
        name: _source
        description: 'True or false to return the _source field or not, or a list of fields to return'
        type: string
      - in: query
        name: _source_exclude
        description: A list of fields to exclude from the returned _source field
        type: string
        format: Fields
      - in: query
        name: _source_include
        description: A list of fields to extract and return from the _source field
        type: string
        format: Fields
      - in: query
        name: terminate_after
        description: 'The maximum number of documents to collect for each shard, upon reaching which the query execution will terminate early.'
        type: integer
        format: long
      - in: query
        name: stats
        description: Specific 'tag' of the request for logging and statistical purposes
        type: string
      - in: query
        name: suggest_field
        description: Specify which field to use for suggestions
        type: string
        format: Field
      - in: query
        name: suggest_mode
        description: Specify suggest mode
        type: string
        format: suggest_mode
      - in: query
        name: suggest_size
        description: How many suggestions to return in response
        type: integer
        format: long
      - in: query
        name: suggest_text
        description: The source text for which the suggestions should be returned
        type: string
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: track_scores
        description: Whether to calculate and return scores even if they are not used for sorting
        type: boolean
      - in: query
        name: track_total_hits
        description: Indicate if the number of documents that match the query should be tracked
        type: boolean
      - in: query
        name: typed_keys
        description: Specify whether aggregation and suggester names should be prefixed by their respective types in the response
        type: boolean
      - in: query
        name: version
        description: Specify whether to return document version as part of a hit
        type: boolean
      - in: query
        name: request_cache
        description: 'Specify if request cache should be used for this request or not, defaults to index level setting'
        type: boolean
      - in: query
        name: batched_reduce_size
        description: The number of shard results that should be reduced at once on the coordinating node. This value should be used as a protection mechanism to reduce the memory overhead per search request if the potential number of shards in the request can be large.
        type: integer
        format: long
      - in: query
        name: max_concurrent_shard_requests
        description: The number of concurrent shard requests this search executes concurrently. This value should be used to limit the impact of the search on the cluster in order to limit the number of concurrent shard requests
        type: integer
        format: long
      - in: query
        name: pre_filter_shard_size
        description: "A threshold that enforces a pre-filter roundtrip to prefilter search shards based on query rewriting if the\_number of shards the search request expands to exceeds the threshold. This filter roundtrip can limit the number of shards significantly if for instance a shard can not match any documents based on it's rewrite method ie. if date filters are mandatory to match but the shard bounds and the query are disjoint."
        type: integer
        format: long
      - in: body
        name: request
        description: The search definition using the Query DSL
        required: false
        schema:
          $ref: '#/definitions/SearchRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/SearchResponse'
      tags:
        - search
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/search-search.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/SearchResponse'
      tags:
        - search
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/search-search.html'
  '/{index}/_search':
    parameters:
      - in: query
        name: analyzer
        description: The analyzer to use for the query string
        type: string
      - in: query
        name: analyze_wildcard
        description: 'Specify whether wildcard and prefix queries should be analyzed (default: false)'
        type: boolean
      - in: query
        name: default_operator
        description: The default operator for query string query (AND or OR)
        type: string
        format: default_operator
      - in: query
        name: df
        description: The field to use as default where no field prefix is given in the query string
        type: string
      - in: query
        name: explain
        description: Specify whether to return detailed information about score computation as part of a hit
        type: boolean
      - in: query
        name: stored_fields
        description: A comma-separated list of stored fields to return as part of a hit
        type: string
        format: Fields
      - in: query
        name: docvalue_fields
        description: A comma-separated list of fields to return as the docvalue representation of a field for each hit
        type: string
        format: Fields
      - in: query
        name: from
        description: 'Starting offset (default: 0)'
        type: integer
        format: long
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: lenient
        description: Specify whether format-based query failures (such as providing text to a numeric field) should be ignored
        type: boolean
      - in: query
        name: preference
        description: 'Specify the node or shard the operation should be performed on (default: random)'
        type: string
      - in: query
        name: q
        description: Query in the Lucene query string syntax
        type: string
      - in: query
        name: routing
        description: A comma-separated list of specific routing values
        type: string
        format: Routing
      - in: query
        name: scroll
        description: Specify how long a consistent view of the index should be maintained for scrolled search
        type: string
        format: time
      - in: query
        name: search_type
        description: Search operation type
        type: string
        format: search_type
      - in: query
        name: size
        description: 'Number of hits to return (default: 10)'
        type: integer
        format: long
      - in: query
        name: sort
        description: 'A comma-separated list of <field>:<direction> pairs'
        type: string
      - in: query
        name: _source
        description: 'True or false to return the _source field or not, or a list of fields to return'
        type: string
      - in: query
        name: _source_exclude
        description: A list of fields to exclude from the returned _source field
        type: string
        format: Fields
      - in: query
        name: _source_include
        description: A list of fields to extract and return from the _source field
        type: string
        format: Fields
      - in: query
        name: terminate_after
        description: 'The maximum number of documents to collect for each shard, upon reaching which the query execution will terminate early.'
        type: integer
        format: long
      - in: query
        name: stats
        description: Specific 'tag' of the request for logging and statistical purposes
        type: string
      - in: query
        name: suggest_field
        description: Specify which field to use for suggestions
        type: string
        format: Field
      - in: query
        name: suggest_mode
        description: Specify suggest mode
        type: string
        format: suggest_mode
      - in: query
        name: suggest_size
        description: How many suggestions to return in response
        type: integer
        format: long
      - in: query
        name: suggest_text
        description: The source text for which the suggestions should be returned
        type: string
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: track_scores
        description: Whether to calculate and return scores even if they are not used for sorting
        type: boolean
      - in: query
        name: track_total_hits
        description: Indicate if the number of documents that match the query should be tracked
        type: boolean
      - in: query
        name: typed_keys
        description: Specify whether aggregation and suggester names should be prefixed by their respective types in the response
        type: boolean
      - in: query
        name: version
        description: Specify whether to return document version as part of a hit
        type: boolean
      - in: query
        name: request_cache
        description: 'Specify if request cache should be used for this request or not, defaults to index level setting'
        type: boolean
      - in: query
        name: batched_reduce_size
        description: The number of shard results that should be reduced at once on the coordinating node. This value should be used as a protection mechanism to reduce the memory overhead per search request if the potential number of shards in the request can be large.
        type: integer
        format: long
      - in: query
        name: max_concurrent_shard_requests
        description: The number of concurrent shard requests this search executes concurrently. This value should be used to limit the impact of the search on the cluster in order to limit the number of concurrent shard requests
        type: integer
        format: long
      - in: query
        name: pre_filter_shard_size
        description: "A threshold that enforces a pre-filter roundtrip to prefilter search shards based on query rewriting if the\_number of shards the search request expands to exceeds the threshold. This filter roundtrip can limit the number of shards significantly if for instance a shard can not match any documents based on it's rewrite method ie. if date filters are mandatory to match but the shard bounds and the query are disjoint."
        type: integer
        format: long
      - in: body
        name: request
        description: The search definition using the Query DSL
        required: false
        schema:
          $ref: '#/definitions/SearchRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/SearchResponse'
      tags:
        - search
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices
          type: string
          format: Indices
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/search-search.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/SearchResponse'
      tags:
        - search
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices
          type: string
          format: Indices
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/search-search.html'
  '/{index}/{type}/_search':
    parameters:
      - in: query
        name: analyzer
        description: The analyzer to use for the query string
        type: string
      - in: query
        name: analyze_wildcard
        description: 'Specify whether wildcard and prefix queries should be analyzed (default: false)'
        type: boolean
      - in: query
        name: default_operator
        description: The default operator for query string query (AND or OR)
        type: string
        format: default_operator
      - in: query
        name: df
        description: The field to use as default where no field prefix is given in the query string
        type: string
      - in: query
        name: explain
        description: Specify whether to return detailed information about score computation as part of a hit
        type: boolean
      - in: query
        name: stored_fields
        description: A comma-separated list of stored fields to return as part of a hit
        type: string
        format: Fields
      - in: query
        name: docvalue_fields
        description: A comma-separated list of fields to return as the docvalue representation of a field for each hit
        type: string
        format: Fields
      - in: query
        name: from
        description: 'Starting offset (default: 0)'
        type: integer
        format: long
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: lenient
        description: Specify whether format-based query failures (such as providing text to a numeric field) should be ignored
        type: boolean
      - in: query
        name: preference
        description: 'Specify the node or shard the operation should be performed on (default: random)'
        type: string
      - in: query
        name: q
        description: Query in the Lucene query string syntax
        type: string
      - in: query
        name: routing
        description: A comma-separated list of specific routing values
        type: string
        format: Routing
      - in: query
        name: scroll
        description: Specify how long a consistent view of the index should be maintained for scrolled search
        type: string
        format: time
      - in: query
        name: search_type
        description: Search operation type
        type: string
        format: search_type
      - in: query
        name: size
        description: 'Number of hits to return (default: 10)'
        type: integer
        format: long
      - in: query
        name: sort
        description: 'A comma-separated list of <field>:<direction> pairs'
        type: string
      - in: query
        name: _source
        description: 'True or false to return the _source field or not, or a list of fields to return'
        type: string
      - in: query
        name: _source_exclude
        description: A list of fields to exclude from the returned _source field
        type: string
        format: Fields
      - in: query
        name: _source_include
        description: A list of fields to extract and return from the _source field
        type: string
        format: Fields
      - in: query
        name: terminate_after
        description: 'The maximum number of documents to collect for each shard, upon reaching which the query execution will terminate early.'
        type: integer
        format: long
      - in: query
        name: stats
        description: Specific 'tag' of the request for logging and statistical purposes
        type: string
      - in: query
        name: suggest_field
        description: Specify which field to use for suggestions
        type: string
        format: Field
      - in: query
        name: suggest_mode
        description: Specify suggest mode
        type: string
        format: suggest_mode
      - in: query
        name: suggest_size
        description: How many suggestions to return in response
        type: integer
        format: long
      - in: query
        name: suggest_text
        description: The source text for which the suggestions should be returned
        type: string
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: query
        name: track_scores
        description: Whether to calculate and return scores even if they are not used for sorting
        type: boolean
      - in: query
        name: track_total_hits
        description: Indicate if the number of documents that match the query should be tracked
        type: boolean
      - in: query
        name: typed_keys
        description: Specify whether aggregation and suggester names should be prefixed by their respective types in the response
        type: boolean
      - in: query
        name: version
        description: Specify whether to return document version as part of a hit
        type: boolean
      - in: query
        name: request_cache
        description: 'Specify if request cache should be used for this request or not, defaults to index level setting'
        type: boolean
      - in: query
        name: batched_reduce_size
        description: The number of shard results that should be reduced at once on the coordinating node. This value should be used as a protection mechanism to reduce the memory overhead per search request if the potential number of shards in the request can be large.
        type: integer
        format: long
      - in: query
        name: max_concurrent_shard_requests
        description: The number of concurrent shard requests this search executes concurrently. This value should be used to limit the impact of the search on the cluster in order to limit the number of concurrent shard requests
        type: integer
        format: long
      - in: query
        name: pre_filter_shard_size
        description: "A threshold that enforces a pre-filter roundtrip to prefilter search shards based on query rewriting if the\_number of shards the search request expands to exceeds the threshold. This filter roundtrip can limit the number of shards significantly if for instance a shard can not match any documents based on it's rewrite method ie. if date filters are mandatory to match but the shard bounds and the query are disjoint."
        type: integer
        format: long
      - in: body
        name: request
        description: The search definition using the Query DSL
        required: false
        schema:
          $ref: '#/definitions/SearchRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/SearchResponse'
      tags:
        - search
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices
          type: string
          format: Indices
        - in: path
          name: type
          required: true
          description: A comma-separated list of document types to search; leave empty to perform the operation on all types
          type: string
          format: Types
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/search-search.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/SearchResponse'
      tags:
        - search
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices
          type: string
          format: Indices
        - in: path
          name: type
          required: true
          description: A comma-separated list of document types to search; leave empty to perform the operation on all types
          type: string
          format: Types
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/search-search.html'
  /_validate/query:
    parameters:
      - in: query
        name: explain
        description: Return detailed information about the error
        type: boolean
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: q
        description: Query in the Lucene query string syntax
        type: string
      - in: query
        name: analyzer
        description: The analyzer to use for the query string
        type: string
      - in: query
        name: analyze_wildcard
        description: 'Specify whether wildcard and prefix queries should be analyzed (default: false)'
        type: boolean
      - in: query
        name: default_operator
        description: The default operator for query string query (AND or OR)
        type: string
        format: default_operator
      - in: query
        name: df
        description: The field to use as default where no field prefix is given in the query string
        type: string
      - in: query
        name: lenient
        description: Specify whether format-based query failures (such as providing text to a numeric field) should be ignored
        type: boolean
      - in: query
        name: rewrite
        description: Provide a more detailed explanation showing the actual Lucene query that will be executed.
        type: boolean
      - in: query
        name: all_shards
        description: Execute validation on all shards instead of one random shard per index
        type: boolean
      - in: body
        name: request
        description: The query definition specified with the Query DSL
        required: false
        schema:
          $ref: '#/definitions/ValidateQueryRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ValidateQueryResponse'
      tags:
        - indices.validate_query
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/search-validate.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ValidateQueryResponse'
      tags:
        - indices.validate_query
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/search-validate.html'
  '/{index}/_validate/query':
    parameters:
      - in: query
        name: explain
        description: Return detailed information about the error
        type: boolean
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: q
        description: Query in the Lucene query string syntax
        type: string
      - in: query
        name: analyzer
        description: The analyzer to use for the query string
        type: string
      - in: query
        name: analyze_wildcard
        description: 'Specify whether wildcard and prefix queries should be analyzed (default: false)'
        type: boolean
      - in: query
        name: default_operator
        description: The default operator for query string query (AND or OR)
        type: string
        format: default_operator
      - in: query
        name: df
        description: The field to use as default where no field prefix is given in the query string
        type: string
      - in: query
        name: lenient
        description: Specify whether format-based query failures (such as providing text to a numeric field) should be ignored
        type: boolean
      - in: query
        name: rewrite
        description: Provide a more detailed explanation showing the actual Lucene query that will be executed.
        type: boolean
      - in: query
        name: all_shards
        description: Execute validation on all shards instead of one random shard per index
        type: boolean
      - in: body
        name: request
        description: The query definition specified with the Query DSL
        required: false
        schema:
          $ref: '#/definitions/ValidateQueryRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ValidateQueryResponse'
      tags:
        - indices.validate_query
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names to restrict the operation; use `_all` or empty string to perform the operation on all indices
          type: string
          format: Indices
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/search-validate.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ValidateQueryResponse'
      tags:
        - indices.validate_query
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names to restrict the operation; use `_all` or empty string to perform the operation on all indices
          type: string
          format: Indices
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/search-validate.html'
  '/{index}/{type}/_validate/query':
    parameters:
      - in: query
        name: explain
        description: Return detailed information about the error
        type: boolean
      - in: query
        name: ignore_unavailable
        description: Whether specified concrete indices should be ignored when unavailable (missing or closed)
        type: boolean
      - in: query
        name: allow_no_indices
        description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)
        type: boolean
      - in: query
        name: expand_wildcards
        description: 'Whether to expand wildcard expression to concrete indices that are open, closed or both.'
        type: string
        format: expand_wildcards
      - in: query
        name: q
        description: Query in the Lucene query string syntax
        type: string
      - in: query
        name: analyzer
        description: The analyzer to use for the query string
        type: string
      - in: query
        name: analyze_wildcard
        description: 'Specify whether wildcard and prefix queries should be analyzed (default: false)'
        type: boolean
      - in: query
        name: default_operator
        description: The default operator for query string query (AND or OR)
        type: string
        format: default_operator
      - in: query
        name: df
        description: The field to use as default where no field prefix is given in the query string
        type: string
      - in: query
        name: lenient
        description: Specify whether format-based query failures (such as providing text to a numeric field) should be ignored
        type: boolean
      - in: query
        name: rewrite
        description: Provide a more detailed explanation showing the actual Lucene query that will be executed.
        type: boolean
      - in: query
        name: all_shards
        description: Execute validation on all shards instead of one random shard per index
        type: boolean
      - in: body
        name: request
        description: The query definition specified with the Query DSL
        required: false
        schema:
          $ref: '#/definitions/ValidateQueryRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ValidateQueryResponse'
      tags:
        - indices.validate_query
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names to restrict the operation; use `_all` or empty string to perform the operation on all indices
          type: string
          format: Indices
        - in: path
          name: type
          required: true
          description: A comma-separated list of document types to restrict the operation; leave empty to perform the operation on all types
          type: string
          format: Types
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/search-validate.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ValidateQueryResponse'
      tags:
        - indices.validate_query
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names to restrict the operation; use `_all` or empty string to perform the operation on all indices
          type: string
          format: Indices
        - in: path
          name: type
          required: true
          description: A comma-separated list of document types to restrict the operation; leave empty to perform the operation on all types
          type: string
          format: Types
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/master/search-validate.html'
  '/{index}/_xpack/graph/_explore':
    parameters:
      - in: query
        name: routing
        description: Specific routing value
        type: string
        format: Routing
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: body
        name: request
        description: Graph Query DSL
        required: false
        schema:
          $ref: '#/definitions/GraphExploreRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GraphExploreResponse'
      tags:
        - xpack.graph.explore
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices
          type: string
          format: Indices
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/graph-explore-api.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GraphExploreResponse'
      tags:
        - xpack.graph.explore
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices
          type: string
          format: Indices
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/graph-explore-api.html'
  '/{index}/{type}/_xpack/graph/_explore':
    parameters:
      - in: query
        name: routing
        description: Specific routing value
        type: string
        format: Routing
      - in: query
        name: timeout
        description: Explicit operation timeout
        type: string
        format: time
      - in: body
        name: request
        description: Graph Query DSL
        required: false
        schema:
          $ref: '#/definitions/GraphExploreRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GraphExploreResponse'
      tags:
        - xpack.graph.explore
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices
          type: string
          format: Indices
        - in: path
          name: type
          required: true
          description: A comma-separated list of document types to search; leave empty to perform the operation on all types
          type: string
          format: Types
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/graph-explore-api.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GraphExploreResponse'
      tags:
        - xpack.graph.explore
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices
          type: string
          format: Indices
        - in: path
          name: type
          required: true
          description: A comma-separated list of document types to search; leave empty to perform the operation on all types
          type: string
          format: Types
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/graph-explore-api.html'
  /_xpack:
    parameters:
      - in: query
        name: human
        description: Presents additional info for humans (feature descriptions and X-Pack tagline)
        type: boolean
      - in: query
        name: categories
        description: 'Comma-separated list of info categories. Can be any of: build, license, features'
        type: string
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/XPackInfoResponse'
      tags:
        - xpack.info
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/info-api.html'
  /_xpack/usage:
    parameters:
      - in: query
        name: master_timeout
        description: Specify timeout for watch write operation
        type: string
        format: time
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/XPackUsageResponse'
      tags:
        - xpack.usage
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: Retrieve information about xpack features usage
  /_xpack/license:
    parameters:
      - in: query
        name: acknowledge
        description: 'whether the user has acknowledged acknowledge messages (default: false)'
        type: boolean
      - in: body
        name: request
        description: licenses to be installed
        required: false
        schema:
          $ref: '#/definitions/PostLicenseRequest'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PostLicenseResponse'
      tags:
        - xpack.license.post
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/x-pack/current/license-management.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PostLicenseResponse'
      tags:
        - xpack.license.post
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/x-pack/current/license-management.html'
  '/_xpack/ml/anomaly_detectors/{job_id}/_close':
    parameters:
      - in: query
        name: allow_no_jobs
        description: Whether to ignore if a wildcard expression matches no jobs. (This includes `_all` string or when no jobs have been specified)
        type: boolean
      - in: query
        name: force
        description: True if the job should be forcefully closed
        type: boolean
      - in: query
        name: timeout
        description: Controls the time to wait until a job has closed. Default to 30 minutes
        type: string
        format: time
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/CloseJobResponse'
      tags:
        - xpack.ml.close_job
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: job_id
          required: true
          description: The name of the job to close
          type: string
          format: Id
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-close-job.html'
  '/_xpack/ml/datafeeds/{datafeed_id}':
    parameters:
      - in: body
        name: request
        description: The datafeed config
        required: true
        schema:
          $ref: '#/definitions/PutDatafeedRequest'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutDatafeedResponse'
      tags:
        - xpack.ml.put_datafeed
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: datafeed_id
          required: true
          description: The ID of the datafeed to create
          type: string
          format: Id
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-put-datafeed.html'
  /_xpack/ml/_delete_expired_data:
    parameters: []
    delete:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/DeleteExpiredDataResponse'
      tags:
        - xpack.ml.delete_expired_data
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs: null
  '/_xpack/ml/anomaly_detectors/{job_id}':
    parameters:
      - in: body
        name: request
        description: The job
        required: true
        schema:
          $ref: '#/definitions/PutJobRequest'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutJobResponse'
      tags:
        - xpack.ml.put_job
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: job_id
          required: true
          description: The ID of the job to create
          type: string
          format: Id
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-put-job.html'
  '/_xpack/ml/anomaly_detectors/{job_id}/model_snapshots/{snapshot_id}':
    parameters:
      - in: query
        name: from
        description: Skips a number of documents
        type: string
        format: int_
      - in: query
        name: size
        description: The default number of documents returned in queries as a string.
        type: string
        format: int_
      - in: query
        name: start
        description: The filter 'start' query parameter
        type: string
        format: date-time
      - in: query
        name: end
        description: The filter 'end' query parameter
        type: string
        format: date-time
      - in: query
        name: sort
        description: Name of the field to sort on
        type: string
      - in: query
        name: desc
        description: True if the results should be sorted in descending order
        type: boolean
      - in: body
        name: request
        description: Model snapshot selection criteria
        required: false
        schema:
          $ref: '#/definitions/GetModelSnapshotsRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetModelSnapshotsResponse'
      tags:
        - xpack.ml.get_model_snapshots
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: job_id
          required: true
          description: The ID of the job to fetch
          type: string
          format: Id
        - in: path
          name: snapshot_id
          required: true
          description: The ID of the snapshot to fetch
          type: string
          format: Id
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-snapshot.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetModelSnapshotsResponse'
      tags:
        - xpack.ml.get_model_snapshots
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: job_id
          required: true
          description: The ID of the job to fetch
          type: string
          format: Id
        - in: path
          name: snapshot_id
          required: true
          description: The ID of the snapshot to fetch
          type: string
          format: Id
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-snapshot.html'
  '/_xpack/ml/anomaly_detectors/{job_id}/_flush':
    parameters:
      - in: query
        name: calc_interim
        description: Calculates interim results for the most recent bucket or all buckets within the latency period
        type: boolean
      - in: query
        name: start
        description: 'When used in conjunction with calc_interim, specifies the range of buckets on which to calculate interim results'
        type: string
      - in: query
        name: end
        description: 'When used in conjunction with calc_interim, specifies the range of buckets on which to calculate interim results'
        type: string
      - in: query
        name: advance_time
        description: Advances time to the given value generating results and updating the model for the advanced interval
        type: string
      - in: query
        name: skip_time
        description: Skips time to the given value without generating results or updating the model for the skipped interval
        type: string
      - in: body
        name: request
        description: Flush parameters
        required: false
        schema:
          $ref: '#/definitions/FlushJobRequest'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/FlushJobResponse'
      tags:
        - xpack.ml.flush_job
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: job_id
          required: true
          description: The name of the job to flush
          type: string
          format: Id
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-flush-job.html'
  '/_xpack/ml/anomaly_detectors/{job_id}/results/records':
    parameters:
      - in: query
        name: exclude_interim
        description: Exclude interim results
        type: boolean
      - in: query
        name: from
        description: skips a number of records
        type: string
        format: int_
      - in: query
        name: size
        description: specifies a max number of records to get
        type: string
        format: int_
      - in: query
        name: start
        description: Start time filter for records
        type: string
      - in: query
        name: end
        description: End time filter for records
        type: string
      - in: query
        name: record_score
        description: record_score
        type: string
        format: double_
      - in: query
        name: sort
        description: Sort records by a particular field
        type: string
      - in: query
        name: desc
        description: Set the sort direction
        type: boolean
      - in: body
        name: request
        description: Record selection criteria
        required: false
        schema:
          $ref: '#/definitions/GetAnomalyRecordsRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetAnomalyRecordsResponse'
      tags:
        - xpack.ml.get_records
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: job_id
          required: true
          description: job_id
          type: string
          format: Id
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-record.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetAnomalyRecordsResponse'
      tags:
        - xpack.ml.get_records
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: job_id
          required: true
          description: job_id
          type: string
          format: Id
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-record.html'
  '/_xpack/ml/anomaly_detectors/{job_id}/results/buckets/{timestamp}':
    parameters:
      - in: query
        name: expand
        description: Include anomaly records
        type: boolean
      - in: query
        name: exclude_interim
        description: Exclude interim results
        type: boolean
      - in: query
        name: from
        description: skips a number of buckets
        type: string
        format: int_
      - in: query
        name: size
        description: specifies a max number of buckets to get
        type: string
        format: int_
      - in: query
        name: start
        description: Start time filter for buckets
        type: string
      - in: query
        name: end
        description: End time filter for buckets
        type: string
      - in: query
        name: anomaly_score
        description: Filter for the most anomalous buckets
        type: string
        format: double_
      - in: query
        name: sort
        description: Sort buckets by a particular field
        type: string
      - in: query
        name: desc
        description: Set the sort direction
        type: boolean
      - in: body
        name: request
        description: Bucket selection details if not provided in URI
        required: false
        schema:
          $ref: '#/definitions/GetBucketsRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetBucketsResponse'
      tags:
        - xpack.ml.get_buckets
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: job_id
          required: true
          description: ID of the job to get bucket results from
          type: string
          format: Id
        - in: path
          name: timestamp
          required: true
          description: The timestamp of the desired single bucket result
          type: string
          format: Timestamp
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-bucket.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetBucketsResponse'
      tags:
        - xpack.ml.get_buckets
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: job_id
          required: true
          description: ID of the job to get bucket results from
          type: string
          format: Id
        - in: path
          name: timestamp
          required: true
          description: The timestamp of the desired single bucket result
          type: string
          format: Timestamp
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-bucket.html'
  '/_xpack/ml/anomaly_detectors/{job_id}/results/buckets':
    parameters:
      - in: query
        name: expand
        description: Include anomaly records
        type: boolean
      - in: query
        name: exclude_interim
        description: Exclude interim results
        type: boolean
      - in: query
        name: from
        description: skips a number of buckets
        type: string
        format: int_
      - in: query
        name: size
        description: specifies a max number of buckets to get
        type: string
        format: int_
      - in: query
        name: start
        description: Start time filter for buckets
        type: string
      - in: query
        name: end
        description: End time filter for buckets
        type: string
      - in: query
        name: anomaly_score
        description: Filter for the most anomalous buckets
        type: string
        format: double_
      - in: query
        name: sort
        description: Sort buckets by a particular field
        type: string
      - in: query
        name: desc
        description: Set the sort direction
        type: boolean
      - in: body
        name: request
        description: Bucket selection details if not provided in URI
        required: false
        schema:
          $ref: '#/definitions/GetBucketsRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetBucketsResponse'
      tags:
        - xpack.ml.get_buckets
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: job_id
          required: true
          description: ID of the job to get bucket results from
          type: string
          format: Id
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-bucket.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetBucketsResponse'
      tags:
        - xpack.ml.get_buckets
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: job_id
          required: true
          description: ID of the job to get bucket results from
          type: string
          format: Id
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-bucket.html'
  '/_xpack/ml/anomaly_detectors/{job_id}/results/categories/{category_id}':
    parameters:
      - in: query
        name: from
        description: skips a number of categories
        type: string
        format: int_
      - in: query
        name: size
        description: specifies a max number of categories to get
        type: string
        format: int_
      - in: body
        name: request
        description: Category selection details if not provided in URI
        required: false
        schema:
          $ref: '#/definitions/GetCategoriesRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetCategoriesResponse'
      tags:
        - xpack.ml.get_categories
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: job_id
          required: true
          description: The name of the job
          type: string
          format: Id
        - in: path
          name: category_id
          required: true
          description: The identifier of the category definition of interest
          type: string
          format: CategoryId
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-category.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetCategoriesResponse'
      tags:
        - xpack.ml.get_categories
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: job_id
          required: true
          description: The name of the job
          type: string
          format: Id
        - in: path
          name: category_id
          required: true
          description: The identifier of the category definition of interest
          type: string
          format: CategoryId
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-category.html'
  '/_xpack/ml/anomaly_detectors/{job_id}/results/categories/':
    parameters:
      - in: query
        name: from
        description: skips a number of categories
        type: string
        format: int_
      - in: query
        name: size
        description: specifies a max number of categories to get
        type: string
        format: int_
      - in: body
        name: request
        description: Category selection details if not provided in URI
        required: false
        schema:
          $ref: '#/definitions/GetCategoriesRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetCategoriesResponse'
      tags:
        - xpack.ml.get_categories
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: job_id
          required: true
          description: The name of the job
          type: string
          format: Id
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-category.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetCategoriesResponse'
      tags:
        - xpack.ml.get_categories
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: job_id
          required: true
          description: The name of the job
          type: string
          format: Id
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-category.html'
  '/_xpack/ml/datafeeds/{datafeed_id}/_stats':
    parameters:
      - in: query
        name: allow_no_datafeeds
        description: Whether to ignore if a wildcard expression matches no datafeeds. (This includes `_all` string or when no datafeeds have been specified)
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetDatafeedStatsResponse'
      tags:
        - xpack.ml.get_datafeed_stats
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: datafeed_id
          required: true
          description: The ID of the datafeeds stats to fetch
          type: string
          format: Id
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-datafeed-stats.html'
  /_xpack/ml/datafeeds/_stats:
    parameters:
      - in: query
        name: allow_no_datafeeds
        description: Whether to ignore if a wildcard expression matches no datafeeds. (This includes `_all` string or when no datafeeds have been specified)
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetDatafeedStatsResponse'
      tags:
        - xpack.ml.get_datafeed_stats
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-datafeed-stats.html'
  /_xpack/ml/datafeeds:
    parameters:
      - in: query
        name: allow_no_datafeeds
        description: Whether to ignore if a wildcard expression matches no datafeeds. (This includes `_all` string or when no datafeeds have been specified)
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetDatafeedsResponse'
      tags:
        - xpack.ml.get_datafeeds
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-datafeed.html'
  '/_xpack/ml/anomaly_detectors/{job_id}/results/influencers':
    parameters:
      - in: query
        name: exclude_interim
        description: Exclude interim results
        type: boolean
      - in: query
        name: from
        description: skips a number of influencers
        type: string
        format: int_
      - in: query
        name: size
        description: specifies a max number of influencers to get
        type: string
        format: int_
      - in: query
        name: start
        description: start timestamp for the requested influencers
        type: string
      - in: query
        name: end
        description: end timestamp for the requested influencers
        type: string
      - in: query
        name: influencer_score
        description: influencer score threshold for the requested influencers
        type: string
        format: double_
      - in: query
        name: sort
        description: sort field for the requested influencers
        type: string
      - in: query
        name: desc
        description: whether the results should be sorted in decending order
        type: boolean
      - in: body
        name: request
        description: Influencer selection criteria
        required: false
        schema:
          $ref: '#/definitions/GetInfluencersRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetInfluencersResponse'
      tags:
        - xpack.ml.get_influencers
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: job_id
          required: true
          description: job_id
          type: string
          format: Id
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-influencer.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetInfluencersResponse'
      tags:
        - xpack.ml.get_influencers
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: job_id
          required: true
          description: job_id
          type: string
          format: Id
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-influencer.html'
  /_xpack/ml/anomaly_detectors/_stats:
    parameters:
      - in: query
        name: allow_no_jobs
        description: Whether to ignore if a wildcard expression matches no jobs. (This includes `_all` string or when no jobs have been specified)
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetJobStatsResponse'
      tags:
        - xpack.ml.get_job_stats
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-job-stats.html'
  '/_xpack/ml/anomaly_detectors/{job_id}/_stats':
    parameters:
      - in: query
        name: allow_no_jobs
        description: Whether to ignore if a wildcard expression matches no jobs. (This includes `_all` string or when no jobs have been specified)
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetJobStatsResponse'
      tags:
        - xpack.ml.get_job_stats
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: job_id
          required: true
          description: The ID of the jobs stats to fetch
          type: string
          format: Id
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-job-stats.html'
  /_xpack/ml/anomaly_detectors:
    parameters:
      - in: query
        name: allow_no_jobs
        description: Whether to ignore if a wildcard expression matches no jobs. (This includes `_all` string or when no jobs have been specified)
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetJobsResponse'
      tags:
        - xpack.ml.get_jobs
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-job.html'
  '/_xpack/ml/anomaly_detectors/{job_id}/model_snapshots':
    parameters:
      - in: query
        name: from
        description: Skips a number of documents
        type: string
        format: int_
      - in: query
        name: size
        description: The default number of documents returned in queries as a string.
        type: string
        format: int_
      - in: query
        name: start
        description: The filter 'start' query parameter
        type: string
        format: date-time
      - in: query
        name: end
        description: The filter 'end' query parameter
        type: string
        format: date-time
      - in: query
        name: sort
        description: Name of the field to sort on
        type: string
      - in: query
        name: desc
        description: True if the results should be sorted in descending order
        type: boolean
      - in: body
        name: request
        description: Model snapshot selection criteria
        required: false
        schema:
          $ref: '#/definitions/GetModelSnapshotsRequest'
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetModelSnapshotsResponse'
      tags:
        - xpack.ml.get_model_snapshots
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: job_id
          required: true
          description: The ID of the job to fetch
          type: string
          format: Id
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-snapshot.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetModelSnapshotsResponse'
      tags:
        - xpack.ml.get_model_snapshots
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: job_id
          required: true
          description: The ID of the job to fetch
          type: string
          format: Id
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-get-snapshot.html'
  '/_xpack/ml/anomaly_detectors/{job_id}/_open':
    parameters: []
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/OpenJobResponse'
      tags:
        - xpack.ml.open_job
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: job_id
          required: true
          description: The ID of the job to open
          type: string
          format: Id
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-open-job.html'
  '/_xpack/ml/anomaly_detectors/{job_id}/_data':
    parameters:
      - in: query
        name: reset_start
        description: Optional parameter to specify the start of the bucket resetting range
        type: string
      - in: query
        name: reset_end
        description: Optional parameter to specify the end of the bucket resetting range
        type: string
      - in: body
        name: request
        description: The data to process
        required: true
        schema:
          $ref: '#/definitions/PostJobDataRequest'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PostJobDataResponse'
      tags:
        - xpack.ml.post_data
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: job_id
          required: true
          description: The name of the job receiving the data
          type: string
          format: Id
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-post-data.html'
  '/_xpack/ml/datafeeds/{datafeed_id}/_preview':
    parameters: []
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PreviewDatafeedResponse'
      tags:
        - xpack.ml.preview_datafeed
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: datafeed_id
          required: true
          description: The ID of the datafeed to preview
          type: string
          format: Id
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-preview-datafeed.html'
  '/_xpack/ml/anomaly_detectors/{job_id}/model_snapshots/{snapshot_id}/_revert':
    parameters:
      - in: query
        name: delete_intervening_results
        description: Should we reset the results back to the time of the snapshot?
        type: boolean
      - in: body
        name: request
        description: Reversion options
        required: false
        schema:
          $ref: '#/definitions/RevertModelSnapshotRequest'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/RevertModelSnapshotResponse'
      tags:
        - xpack.ml.revert_model_snapshot
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: job_id
          required: true
          description: The ID of the job to fetch
          type: string
          format: Id
        - in: path
          name: snapshot_id
          required: true
          description: The ID of the snapshot to revert to
          type: string
          format: Id
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-revert-snapshot.html'
  '/_xpack/ml/datafeeds/{datafeed_id}/_start':
    parameters:
      - in: query
        name: start
        description: The start time from where the datafeed should begin
        type: string
      - in: query
        name: end
        description: 'The end time when the datafeed should stop. When not set, the datafeed continues in real time'
        type: string
      - in: query
        name: timeout
        description: Controls the time to wait until a datafeed has started. Default to 20 seconds
        type: string
        format: time
      - in: body
        name: request
        description: The start datafeed parameters
        required: false
        schema:
          $ref: '#/definitions/StartDatafeedRequest'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/StartDatafeedResponse'
      tags:
        - xpack.ml.start_datafeed
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: datafeed_id
          required: true
          description: The ID of the datafeed to start
          type: string
          format: Id
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-start-datafeed.html'
  '/_xpack/ml/datafeeds/{datafeed_id}/_stop':
    parameters:
      - in: query
        name: allow_no_datafeeds
        description: Whether to ignore if a wildcard expression matches no datafeeds. (This includes `_all` string or when no datafeeds have been specified)
        type: boolean
      - in: query
        name: force
        description: True if the datafeed should be forcefully stopped.
        type: boolean
      - in: query
        name: timeout
        description: Controls the time to wait until a datafeed has stopped. Default to 20 seconds
        type: string
        format: time
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/StopDatafeedResponse'
      tags:
        - xpack.ml.stop_datafeed
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: datafeed_id
          required: true
          description: The ID of the datafeed to stop
          type: string
          format: Id
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-stop-datafeed.html'
  '/_xpack/ml/datafeeds/{datafeed_id}/_update':
    parameters:
      - in: body
        name: request
        description: The datafeed update settings
        required: true
        schema:
          $ref: '#/definitions/UpdateDatafeedRequest'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/UpdateDatafeedResponse'
      tags:
        - xpack.ml.update_datafeed
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: datafeed_id
          required: true
          description: The ID of the datafeed to update
          type: string
          format: Id
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-update-datafeed.html'
  '/_xpack/ml/anomaly_detectors/{job_id}/_update':
    parameters:
      - in: body
        name: request
        description: The job update settings
        required: true
        schema:
          $ref: '#/definitions/UpdateJobRequest'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/UpdateJobResponse'
      tags:
        - xpack.ml.update_job
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: job_id
          required: true
          description: The ID of the job to create
          type: string
          format: Id
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-update-job.html'
  '/_xpack/ml/anomaly_detectors/{job_id}/model_snapshots/{snapshot_id}/_update':
    parameters:
      - in: body
        name: request
        description: The model snapshot properties to update
        required: true
        schema:
          $ref: '#/definitions/UpdateModelSnapshotRequest'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/UpdateModelSnapshotResponse'
      tags:
        - xpack.ml.update_model_snapshot
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: job_id
          required: true
          description: The ID of the job to fetch
          type: string
          format: Id
        - in: path
          name: snapshot_id
          required: true
          description: The ID of the snapshot to update
          type: string
          format: Id
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/ml-update-snapshot.html'
  /_xpack/ml/anomaly_detectors/_validate/detector:
    parameters:
      - in: body
        name: request
        description: The detector
        required: true
        schema:
          $ref: '#/definitions/ValidateDetectorRequest'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ValidateDetectorResponse'
      tags:
        - xpack.ml.validate_detector
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs: null
  /_xpack/ml/anomaly_detectors/_validate:
    parameters:
      - in: body
        name: request
        description: The job config
        required: true
        schema:
          $ref: '#/definitions/ValidateJobRequest'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ValidateJobResponse'
      tags:
        - xpack.ml.validate
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs: null
  /_xpack/migration/deprecations:
    parameters: []
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/DeprecationInfoResponse'
      tags:
        - xpack.migration.deprecations
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/migration/current/migration-api-deprecation.html'
  '/{index}/_xpack/migration/deprecations':
    parameters: []
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/DeprecationInfoResponse'
      tags:
        - xpack.migration.deprecations
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: index
          required: true
          description: Index pattern
          type: string
          format: IndexName
      externalDocs:
        url: 'http://www.elastic.co/guide/en/migration/current/migration-api-deprecation.html'
  /_xpack/security/_authenticate:
    parameters: []
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/AuthenticateResponse'
      tags:
        - xpack.security.authenticate
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-authenticate.html'
  '/_xpack/security/realm/{realms}/_clear_cache':
    parameters:
      - in: query
        name: usernames
        description: Comma-separated list of usernames to clear from the cache
        type: string
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ClearCachedRealmsResponse'
      tags:
        - xpack.security.clear_cached_realms
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: realms
          required: true
          description: Comma-separated list of realms to clear
          type: string
          format: Names
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-clear-cache.html'
  '/_xpack/security/role_mapping/{name}':
    parameters:
      - in: query
        name: refresh
        description: 'If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes.'
        type: string
        format: refresh
      - in: body
        name: request
        description: The role to add
        required: true
        schema:
          $ref: '#/definitions/PutRoleMappingRequest'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutRoleMappingResponse'
      tags:
        - xpack.security.put_role_mapping
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: name
          required: true
          description: Role-mapping name
          type: string
          format: Name
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-role-mapping.html#security-api-put-role-mapping'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutRoleMappingResponse'
      tags:
        - xpack.security.put_role_mapping
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: name
          required: true
          description: Role-mapping name
          type: string
          format: Name
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-role-mapping.html#security-api-put-role-mapping'
  /_xpack/security/role_mapping:
    parameters: []
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetRoleMappingResponse'
      tags:
        - xpack.security.get_role_mapping
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-role-mapping.html#security-api-get-role-mapping'
  '/_xpack/security/role/{name}/_clear_cache':
    parameters: []
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ClearCachedRolesResponse'
      tags:
        - xpack.security.clear_cached_roles
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: name
          required: true
          description: Role name
          type: string
          format: Names
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-roles.html#security-api-clear-role-cache'
  '/_xpack/security/role/{name}':
    parameters:
      - in: query
        name: refresh
        description: 'If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes.'
        type: string
        format: refresh
      - in: body
        name: request
        description: The role to add
        required: true
        schema:
          $ref: '#/definitions/PutRoleRequest'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutRoleResponse'
      tags:
        - xpack.security.put_role
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: name
          required: true
          description: Role name
          type: string
          format: Name
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-roles.html#security-api-put-role'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutRoleResponse'
      tags:
        - xpack.security.put_role
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: name
          required: true
          description: Role name
          type: string
          format: Name
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-roles.html#security-api-put-role'
  /_xpack/security/role:
    parameters: []
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetRoleResponse'
      tags:
        - xpack.security.get_role
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-roles.html#security-api-get-role'
  '/_xpack/security/user/{username}/_password':
    parameters:
      - in: query
        name: refresh
        description: 'If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes.'
        type: string
        format: refresh
      - in: body
        name: request
        description: the new password for the user
        required: true
        schema:
          $ref: '#/definitions/ChangePasswordRequest'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ChangePasswordResponse'
      tags:
        - xpack.security.change_password
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: username
          required: true
          description: The username of the user to change the password for
          type: string
          format: Name
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-change-password.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ChangePasswordResponse'
      tags:
        - xpack.security.change_password
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: username
          required: true
          description: The username of the user to change the password for
          type: string
          format: Name
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-change-password.html'
  /_xpack/security/user/_password:
    parameters:
      - in: query
        name: refresh
        description: 'If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes.'
        type: string
        format: refresh
      - in: body
        name: request
        description: the new password for the user
        required: true
        schema:
          $ref: '#/definitions/ChangePasswordRequest'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ChangePasswordResponse'
      tags:
        - xpack.security.change_password
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-change-password.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ChangePasswordResponse'
      tags:
        - xpack.security.change_password
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-change-password.html'
  '/_xpack/security/user/{username}':
    parameters:
      - in: query
        name: refresh
        description: 'If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes.'
        type: string
        format: refresh
      - in: body
        name: request
        description: The user to add
        required: true
        schema:
          $ref: '#/definitions/PutUserRequest'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutUserResponse'
      tags:
        - xpack.security.put_user
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: username
          required: true
          description: The username of the User
          type: string
          format: Name
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-users.html#security-api-put-user'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutUserResponse'
      tags:
        - xpack.security.put_user
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: username
          required: true
          description: The username of the User
          type: string
          format: Name
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-users.html#security-api-put-user'
  '/_xpack/security/user/{username}/_disable':
    parameters:
      - in: query
        name: refresh
        description: 'If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes.'
        type: string
        format: refresh
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/DisableUserResponse'
      tags:
        - xpack.security.disable_user
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: username
          required: true
          description: The username of the user to disable
          type: string
          format: Name
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-users.html#security-api-disable-user'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/DisableUserResponse'
      tags:
        - xpack.security.disable_user
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: username
          required: true
          description: The username of the user to disable
          type: string
          format: Name
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-users.html#security-api-disable-user'
  '/_xpack/security/user/{username}/_enable':
    parameters:
      - in: query
        name: refresh
        description: 'If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes.'
        type: string
        format: refresh
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/EnableUserResponse'
      tags:
        - xpack.security.enable_user
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: username
          required: true
          description: The username of the user to enable
          type: string
          format: Name
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-users.html#security-api-enable-user'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/EnableUserResponse'
      tags:
        - xpack.security.enable_user
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: username
          required: true
          description: The username of the user to enable
          type: string
          format: Name
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-users.html#security-api-enable-user'
  /_xpack/security/oauth2/token:
    parameters:
      - in: body
        name: request
        description: The token to invalidate
        required: true
        schema:
          $ref: '#/definitions/InvalidateUserAccessTokenRequest'
    delete:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/InvalidateUserAccessTokenResponse'
      tags:
        - xpack.security.invalidate_token
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-tokens.html#security-api-invalidate-token'
  /_xpack/security/user:
    parameters: []
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/GetUserResponse'
      tags:
        - xpack.security.get_user
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-users.html#security-api-get-user'
  '/_xpack/watcher/watch/{watch_id}/_ack':
    parameters:
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/AcknowledgeWatchResponse'
      tags:
        - xpack.watcher.ack_watch
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: watch_id
          required: true
          description: Watch ID
          type: string
          format: Id
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-ack-watch.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/AcknowledgeWatchResponse'
      tags:
        - xpack.watcher.ack_watch
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: watch_id
          required: true
          description: Watch ID
          type: string
          format: Id
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-ack-watch.html'
  '/_xpack/watcher/watch/{watch_id}/_ack/{action_id}':
    parameters:
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/AcknowledgeWatchResponse'
      tags:
        - xpack.watcher.ack_watch
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: watch_id
          required: true
          description: Watch ID
          type: string
          format: Id
        - in: path
          name: action_id
          required: true
          description: A comma-separated list of the action ids to be acked
          type: string
          format: ActionIds
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-ack-watch.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/AcknowledgeWatchResponse'
      tags:
        - xpack.watcher.ack_watch
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: watch_id
          required: true
          description: Watch ID
          type: string
          format: Id
        - in: path
          name: action_id
          required: true
          description: A comma-separated list of the action ids to be acked
          type: string
          format: ActionIds
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-ack-watch.html'
  '/_xpack/watcher/watch/{watch_id}/_activate':
    parameters:
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ActivateWatchResponse'
      tags:
        - xpack.watcher.activate_watch
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: watch_id
          required: true
          description: Watch ID
          type: string
          format: Id
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-activate-watch.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ActivateWatchResponse'
      tags:
        - xpack.watcher.activate_watch
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: watch_id
          required: true
          description: Watch ID
          type: string
          format: Id
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-activate-watch.html'
  '/_xpack/watcher/watch/{watch_id}/_deactivate':
    parameters:
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/DeactivateWatchResponse'
      tags:
        - xpack.watcher.deactivate_watch
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: watch_id
          required: true
          description: Watch ID
          type: string
          format: Id
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-deactivate-watch.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/DeactivateWatchResponse'
      tags:
        - xpack.watcher.deactivate_watch
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: watch_id
          required: true
          description: Watch ID
          type: string
          format: Id
      externalDocs:
        url: 'https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-deactivate-watch.html'
  '/_xpack/watcher/watch/{id}':
    parameters:
      - in: query
        name: master_timeout
        description: Explicit operation timeout for connection to master node
        type: string
        format: time
      - in: query
        name: active
        description: Specify whether the watch is in/active by default
        type: boolean
      - in: body
        name: request
        description: The watch
        required: true
        schema:
          $ref: '#/definitions/PutWatchRequest'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutWatchResponse'
      tags:
        - xpack.watcher.put_watch
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          description: Watch ID
          type: string
          format: Id
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-put-watch.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/PutWatchResponse'
      tags:
        - xpack.watcher.put_watch
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          description: Watch ID
          type: string
          format: Id
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-put-watch.html'
  '/_xpack/watcher/watch/{id}/_execute':
    parameters:
      - in: query
        name: debug
        description: indicates whether the watch should execute in debug mode
        type: boolean
      - in: body
        name: request
        description: Execution control
        required: false
        schema:
          $ref: '#/definitions/ExecuteWatchRequest'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ExecuteWatchResponse'
      tags:
        - xpack.watcher.execute_watch
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          description: Watch ID
          type: string
          format: Id
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-execute-watch.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ExecuteWatchResponse'
      tags:
        - xpack.watcher.execute_watch
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          description: Watch ID
          type: string
          format: Id
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-execute-watch.html'
  /_xpack/watcher/watch/_execute:
    parameters:
      - in: query
        name: debug
        description: indicates whether the watch should execute in debug mode
        type: boolean
      - in: body
        name: request
        description: Execution control
        required: false
        schema:
          $ref: '#/definitions/ExecuteWatchRequest'
    put:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ExecuteWatchResponse'
      tags:
        - xpack.watcher.execute_watch
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-execute-watch.html'
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/ExecuteWatchResponse'
      tags:
        - xpack.watcher.execute_watch
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-execute-watch.html'
  /_xpack/watcher/_restart:
    parameters: []
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/RestartWatcherResponse'
      tags:
        - xpack.watcher.restart
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-restart.html'
  /_xpack/watcher/_start:
    parameters: []
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/StartWatcherResponse'
      tags:
        - xpack.watcher.start
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-start.html'
  /_xpack/watcher/_stop:
    parameters: []
    post:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/StopWatcherResponse'
      tags:
        - xpack.watcher.stop
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-stop.html'
  /_xpack/watcher/stats:
    parameters:
      - in: query
        name: metric
        description: Controls what additional stat metrics should be include in the response
        type: string
        format: metric
      - in: query
        name: emit_stacktraces
        description: Emits stack traces of currently running watches
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/WatcherStatsResponse'
      tags:
        - xpack.watcher.stats
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-stats.html'
  '/_xpack/watcher/stats/{metric}':
    parameters:
      - in: query
        name: metric
        description: Controls what additional stat metrics should be include in the response
        type: string
        format: metric
      - in: query
        name: emit_stacktraces
        description: Emits stack traces of currently running watches
        type: boolean
    get:
      responses:
        '200':
          description: Request accepted and processed response
          schema:
            $ref: '#/definitions/WatcherStatsResponse'
      tags:
        - xpack.watcher.stats
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: metric
          required: true
          description: Controls what additional stat metrics should be include in the response
          type: string
          format: Metrics
      externalDocs:
        url: 'http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-stats.html'
definitions:
  Uri:
    type: string
    format: uri
  Date:
    type: string
    format: date-time
  TimeSpan:
    type: string
    format: time
  SourceDocument:
    type: object
  short:
    type: integer
    format: short
  byte:
    type: integer
    format: byte
  integer:
    type: integer
    format: integer
  long:
    type: integer
    format: long
  float:
    type: number
    format: float
  double:
    type: number
    format: double
  Aggregate:
    type: object
    properties:
      meta:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
  Aggregation:
    type: object
    properties:
      name:
        type: string
      meta:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
  AggregationContainer:
    type: object
    properties:
      meta:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
      avg:
        $ref: '#/definitions/AverageAggregation'
      date_histogram:
        $ref: '#/definitions/DateHistogramAggregation'
      percentiles:
        $ref: '#/definitions/PercentilesAggregation'
      date_range:
        $ref: '#/definitions/DateRangeAggregation'
      extended_stats:
        $ref: '#/definitions/ExtendedStatsAggregation'
      filter:
        $ref: '#/definitions/FilterAggregation'
      filters:
        $ref: '#/definitions/FiltersAggregation'
      geo_distance:
        $ref: '#/definitions/GeoDistanceAggregation'
      geohash_grid:
        $ref: '#/definitions/GeoHashGridAggregation'
      geo_bounds:
        $ref: '#/definitions/GeoBoundsAggregation'
      histogram:
        $ref: '#/definitions/HistogramAggregation'
      global:
        $ref: '#/definitions/GlobalAggregation'
      ip_range:
        $ref: '#/definitions/IpRangeAggregation'
      max:
        $ref: '#/definitions/MaxAggregation'
      min:
        $ref: '#/definitions/MinAggregation'
      cardinality:
        $ref: '#/definitions/CardinalityAggregation'
      missing:
        $ref: '#/definitions/MissingAggregation'
      nested:
        $ref: '#/definitions/NestedAggregation'
      reverse_nested:
        $ref: '#/definitions/ReverseNestedAggregation'
      range:
        $ref: '#/definitions/RangeAggregation'
      stats:
        $ref: '#/definitions/StatsAggregation'
      sum:
        $ref: '#/definitions/SumAggregation'
      terms:
        $ref: '#/definitions/TermsAggregation'
      significant_terms:
        $ref: '#/definitions/SignificantTermsAggregation'
      value_count:
        $ref: '#/definitions/ValueCountAggregation'
      percentile_ranks:
        $ref: '#/definitions/PercentileRanksAggregation'
      top_hits:
        $ref: '#/definitions/TopHitsAggregation'
      children:
        $ref: '#/definitions/ChildrenAggregation'
      scripted_metric:
        $ref: '#/definitions/ScriptedMetricAggregation'
      avg_bucket:
        $ref: '#/definitions/AverageBucketAggregation'
      derivative:
        $ref: '#/definitions/DerivativeAggregation'
      max_bucket:
        $ref: '#/definitions/MaxBucketAggregation'
      min_bucket:
        $ref: '#/definitions/MinBucketAggregation'
      sum_bucket:
        $ref: '#/definitions/SumBucketAggregation'
      stats_bucket:
        $ref: '#/definitions/StatsBucketAggregation'
      extended_stats_bucket:
        $ref: '#/definitions/ExtendedStatsBucketAggregation'
      percentiles_bucket:
        $ref: '#/definitions/PercentilesBucketAggregation'
      moving_avg:
        $ref: '#/definitions/MovingAverageAggregation'
      cumulative_sum:
        $ref: '#/definitions/CumulativeSumAggregation'
      serial_diff:
        $ref: '#/definitions/SerialDifferencingAggregation'
      bucket_script:
        $ref: '#/definitions/BucketScriptAggregation'
      bucket_selector:
        $ref: '#/definitions/BucketSelectorAggregation'
      sampler:
        $ref: '#/definitions/SamplerAggregation'
      geo_centroid:
        $ref: '#/definitions/GeoCentroidAggregation'
      matrix_stats:
        $ref: '#/definitions/MatrixStatsAggregation'
      adjacency_matrix:
        $ref: '#/definitions/AdjacencyMatrixAggregation'
      aggs:
        type: object
        additionalProperties:
          $ref: '#/definitions/AggregationContainer'
  BucketAggregation:
    type: object
    properties:
      aggregations:
        type: object
        additionalProperties:
          $ref: '#/definitions/AggregationContainer'
  AdjacencyMatrixAggregation:
    type: object
    properties:
      filters:
        type: object
        additionalProperties:
          $ref: '#/definitions/QueryContainer'
  ChildrenAggregation:
    type: object
    properties:
      type:
        $ref: '#/definitions/RelationName'
  DateHistogramAggregation:
    type: object
    properties:
      field:
        $ref: '#/definitions/Field'
      script:
        $ref: '#/definitions/Script'
      params:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
      interval:
        description: 'Not an array but: union<DateInterval, Time>'
        type: array
        items:
          - $ref: '#/definitions/DateInterval'
          - $ref: '#/definitions/Time'
      format:
        type: string
      min_doc_count:
        $ref: '#/definitions/integer'
      time_zone:
        type: string
      offset:
        type: string
      order:
        $ref: '#/definitions/HistogramOrder'
      extended_bounds:
        $ref: '#/definitions/ExtendedBounds<DateMath>'
      missing:
        $ref: '#/definitions/Date'
  DateRangeAggregation:
    type: object
    properties:
      field:
        $ref: '#/definitions/Field'
      format:
        type: string
      ranges:
        type: array
        items:
          $ref: '#/definitions/DateRangeExpression'
      time_zone:
        type: string
  DateRangeExpression:
    type: object
    properties:
      from:
        $ref: '#/definitions/DateMath'
      to:
        $ref: '#/definitions/DateMath'
      key:
        type: string
  FilterAggregation:
    type: object
    properties:
      filter:
        $ref: '#/definitions/QueryContainer'
  FiltersAggregation:
    type: object
    properties:
      filters:
        description: 'Not an array but: union<dict<key: string, value: QueryContainer >, QueryContainer[]>'
        type: array
        items:
          - type: object
            additionalProperties:
              $ref: '#/definitions/QueryContainer'
          - type: array
            items:
              $ref: '#/definitions/QueryContainer'
      other_bucket:
        type: boolean
      other_bucket_key:
        type: string
  GeoDistanceAggregation:
    type: object
    properties:
      field:
        $ref: '#/definitions/Field'
      origin:
        $ref: '#/definitions/GeoLocation'
      unit:
        $ref: '#/definitions/DistanceUnit'
      distance_type:
        $ref: '#/definitions/GeoDistanceType'
      ranges:
        type: array
        items:
          $ref: '#/definitions/AggregationRange'
  GeoHashGridAggregation:
    type: object
    properties:
      field:
        $ref: '#/definitions/Field'
      size:
        $ref: '#/definitions/integer'
      shard_size:
        $ref: '#/definitions/integer'
      precision:
        $ref: '#/definitions/GeoHashPrecision'
  GlobalAggregation:
    type: object
    properties: {}
  ExtendedBounds:
    type: object
    properties:
      min:
        $ref: '#/definitions/T'
      max:
        $ref: '#/definitions/T'
  HistogramAggregation:
    type: object
    properties:
      field:
        $ref: '#/definitions/Field'
      script:
        $ref: '#/definitions/Script'
      interval:
        $ref: '#/definitions/double'
      min_doc_count:
        $ref: '#/definitions/integer'
      order:
        $ref: '#/definitions/HistogramOrder'
      extended_bounds:
        $ref: '#/definitions/ExtendedBounds<double>'
      offset:
        $ref: '#/definitions/double'
      missing:
        $ref: '#/definitions/double'
  HistogramOrder:
    type: object
    properties:
      key:
        type: string
      order:
        $ref: '#/definitions/SortOrder'
      count_ascending:
        $ref: '#/definitions/HistogramOrder'
      count_descending:
        $ref: '#/definitions/HistogramOrder'
      key_ascending:
        $ref: '#/definitions/HistogramOrder'
      key_descending:
        $ref: '#/definitions/HistogramOrder'
  IpRangeAggregation:
    type: object
    properties:
      field:
        $ref: '#/definitions/Field'
      ranges:
        type: array
        items:
          $ref: '#/definitions/IpRange'
  MissingAggregation:
    type: object
    properties:
      field:
        $ref: '#/definitions/Field'
  NestedAggregation:
    type: object
    properties:
      path:
        $ref: '#/definitions/Field'
  RangeAggregation:
    type: object
    properties:
      field:
        $ref: '#/definitions/Field'
      script:
        $ref: '#/definitions/Script'
      ranges:
        type: array
        items:
          $ref: '#/definitions/AggregationRange'
  ReverseNestedAggregation:
    type: object
    properties:
      path:
        $ref: '#/definitions/Field'
  SamplerAggregation:
    type: object
    properties:
      shard_size:
        $ref: '#/definitions/integer'
      max_docs_per_value:
        $ref: '#/definitions/integer'
      script:
        $ref: '#/definitions/Script'
      execution_hint:
        $ref: '#/definitions/SamplerAggregationExecutionHint'
  SignificantTermsAggregation:
    type: object
    properties:
      field:
        $ref: '#/definitions/Field'
      size:
        $ref: '#/definitions/integer'
      shard_size:
        $ref: '#/definitions/integer'
      min_doc_count:
        $ref: '#/definitions/long'
      shard_min_doc_count:
        $ref: '#/definitions/long'
      execution_hint:
        $ref: '#/definitions/TermsAggregationExecutionHint'
      include:
        $ref: '#/definitions/SignificantTermsIncludeExclude'
      exclude:
        $ref: '#/definitions/SignificantTermsIncludeExclude'
      mutual_information:
        $ref: '#/definitions/MutualInformationHeuristic'
      chi_square:
        $ref: '#/definitions/ChiSquareHeuristic'
      gnd:
        $ref: '#/definitions/GoogleNormalizedDistanceHeuristic'
      percentage:
        $ref: '#/definitions/PercentageScoreHeuristic'
      script_heuristic:
        $ref: '#/definitions/ScriptedHeuristic'
      background_filter:
        $ref: '#/definitions/QueryContainer'
  ChiSquareHeuristic:
    type: object
    properties:
      include_negatives:
        type: boolean
      background_is_superset:
        type: boolean
  GoogleNormalizedDistanceHeuristic:
    type: object
    properties:
      background_is_superset:
        type: boolean
  MutualInformationHeuristic:
    type: object
    properties:
      include_negatives:
        type: boolean
      background_is_superset:
        type: boolean
  PercentageScoreHeuristic:
    type: object
    properties: {}
  ScriptedHeuristic:
    type: object
    properties:
      script:
        $ref: '#/definitions/Script'
  TermsAggregation:
    type: object
    properties:
      field:
        $ref: '#/definitions/Field'
      script:
        $ref: '#/definitions/Script'
      size:
        $ref: '#/definitions/integer'
      shard_size:
        $ref: '#/definitions/integer'
      min_doc_count:
        $ref: '#/definitions/integer'
      execution_hint:
        $ref: '#/definitions/TermsAggregationExecutionHint'
      order:
        type: array
        items:
          $ref: '#/definitions/TermsOrder'
      include:
        $ref: '#/definitions/TermsInclude'
      exclude:
        $ref: '#/definitions/TermsExclude'
      collect_mode:
        $ref: '#/definitions/TermsAggregationCollectMode'
      show_term_doc_count_error:
        type: boolean
      missing:
        $ref: '#/definitions/object'
  TermsExclude:
    type: object
    properties:
      pattern:
        type: string
      values:
        type: array
        items:
          type: string
  TermsInclude:
    type: object
    properties:
      pattern:
        type: string
      values:
        type: array
        items:
          type: string
      partition:
        $ref: '#/definitions/long'
      num_partitions:
        $ref: '#/definitions/long'
  TermsOrder:
    type: object
    properties:
      key:
        type: string
      order:
        $ref: '#/definitions/SortOrder'
      count_ascending:
        $ref: '#/definitions/TermsOrder'
      count_descending:
        $ref: '#/definitions/TermsOrder'
      term_ascending:
        $ref: '#/definitions/TermsOrder'
      term_descending:
        $ref: '#/definitions/TermsOrder'
      key_ascending:
        $ref: '#/definitions/TermsOrder'
      key_descending:
        $ref: '#/definitions/TermsOrder'
  MatrixAggregation:
    type: object
    properties:
      fields:
        type: array
        items:
          $ref: '#/definitions/Field'
      missing:
        type: object
        additionalProperties:
          $ref: '#/definitions/double'
  MatrixStatsAggregation:
    type: object
    properties:
      mode:
        $ref: '#/definitions/MatrixStatsMode'
  MetricAggregation:
    type: object
    properties:
      field:
        $ref: '#/definitions/Field'
      script:
        $ref: '#/definitions/Script'
      missing:
        $ref: '#/definitions/double'
  AverageAggregation:
    type: object
    properties: {}
  CardinalityAggregation:
    type: object
    properties:
      precision_threshold:
        $ref: '#/definitions/integer'
      rehash:
        type: boolean
  ExtendedStatsAggregation:
    type: object
    properties:
      sigma:
        $ref: '#/definitions/double'
  GeoBoundsAggregation:
    type: object
    properties:
      wrap_longitude:
        type: boolean
  GeoCentroidAggregation:
    type: object
    properties: {}
  MaxAggregation:
    type: object
    properties: {}
  MinAggregation:
    type: object
    properties: {}
  PercentileRanksAggregation:
    type: object
    properties:
      values:
        type: array
        items:
          $ref: '#/definitions/double'
      method:
        $ref: '#/definitions/PercentilesMethod'
  PercentilesAggregation:
    type: object
    properties:
      percents:
        type: array
        items:
          $ref: '#/definitions/double'
      method:
        $ref: '#/definitions/PercentilesMethod'
  PercentilesMethod:
    type: object
    properties: {}
  ScriptedMetricAggregation:
    type: object
    properties:
      init_script:
        $ref: '#/definitions/Script'
      map_script:
        $ref: '#/definitions/Script'
      combine_script:
        $ref: '#/definitions/Script'
      reduce_script:
        $ref: '#/definitions/Script'
      params:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
  StatsAggregation:
    type: object
    properties: {}
  SumAggregation:
    type: object
    properties: {}
  TopHitsAggregation:
    type: object
    properties:
      from:
        $ref: '#/definitions/integer'
      size:
        $ref: '#/definitions/integer'
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      _source:
        description: 'Not an array but: union<boolean, SourceFilter>'
        type: array
        items:
          - type: boolean
          - $ref: '#/definitions/SourceFilter'
      highlight:
        $ref: '#/definitions/Highlight'
      explain:
        type: boolean
      script_fields:
        type: object
        additionalProperties:
          $ref: '#/definitions/ScriptField'
      stored_fields:
        type: array
        items:
          $ref: '#/definitions/Field'
      version:
        type: boolean
      track_scores:
        type: boolean
  ValueCountAggregation:
    type: object
    properties: {}
  BucketsPath:
    type: object
    properties: {}
  PipelineAggregation:
    type: object
    properties:
      buckets_path:
        $ref: '#/definitions/BucketsPath'
      gap_policy:
        $ref: '#/definitions/GapPolicy'
      format:
        type: string
  AverageBucketAggregation:
    type: object
    properties: {}
  BucketScriptAggregation:
    type: object
    properties:
      script:
        $ref: '#/definitions/Script'
  BucketSelectorAggregation:
    type: object
    properties:
      script:
        $ref: '#/definitions/Script'
  CumulativeSumAggregation:
    type: object
    properties: {}
  DerivativeAggregation:
    type: object
    properties: {}
  ExtendedStatsBucketAggregation:
    type: object
    properties:
      sigma:
        $ref: '#/definitions/double'
  MaxBucketAggregation:
    type: object
    properties: {}
  MinBucketAggregation:
    type: object
    properties: {}
  MovingAverageAggregation:
    type: object
    properties:
      model:
        $ref: '#/definitions/MovingAverageModel'
      window:
        $ref: '#/definitions/integer'
      minimize:
        type: boolean
      predict:
        $ref: '#/definitions/integer'
  MovingAverageModel:
    type: object
    properties:
      name:
        type: string
  PercentilesBucketAggregation:
    type: object
    properties:
      percents:
        type: array
        items:
          $ref: '#/definitions/double'
  SerialDifferencingAggregation:
    type: object
    properties:
      lag:
        $ref: '#/definitions/integer'
  StatsBucketAggregation:
    type: object
    properties: {}
  SumBucketAggregation:
    type: object
    properties: {}
  StopWords:
    type: object
    properties: {}
  AnalyzerBase:
    type: object
    properties:
      version:
        type: string
      type:
        type: string
  CustomAnalyzer:
    type: object
    properties:
      tokenizer:
        type: string
      filter:
        type: array
        items:
          type: string
      char_filter:
        type: array
        items:
          type: string
      position_offset_gap:
        $ref: '#/definitions/integer'
  FingerprintAnalyzer:
    type: object
    properties:
      separator:
        type: string
      max_output_size:
        $ref: '#/definitions/integer'
      preserve_original:
        type: boolean
      stopwords:
        $ref: '#/definitions/StopWords'
      stopwords_path:
        type: string
  IAnalyzer:
    type: object
    properties:
      version:
        type: string
      type:
        type: string
  KeywordAnalyzer:
    type: object
    properties: {}
  LanguageAnalyzer:
    type: object
    properties:
      type:
        type: string
      stopwords:
        $ref: '#/definitions/StopWords'
      stem_exclusion:
        type: array
        items:
          type: string
      language:
        $ref: '#/definitions/Language'
      stopwords_path:
        type: string
  PatternAnalyzer:
    type: object
    properties:
      lowercase:
        type: boolean
      pattern:
        type: string
      flags:
        type: string
      stopwords:
        $ref: '#/definitions/StopWords'
  SimpleAnalyzer:
    type: object
    properties: {}
  SnowballAnalyzer:
    type: object
    properties:
      language:
        $ref: '#/definitions/SnowballLanguage'
      stopwords:
        $ref: '#/definitions/StopWords'
  StandardAnalyzer:
    type: object
    properties:
      stopwords:
        $ref: '#/definitions/StopWords'
      max_token_length:
        $ref: '#/definitions/integer'
  StopAnalyzer:
    type: object
    properties:
      stopwords:
        $ref: '#/definitions/StopWords'
      stopwords_path:
        type: string
  WhitespaceAnalyzer:
    type: object
    properties: {}
  CharFilterBase:
    type: object
    properties:
      version:
        type: string
      type:
        type: string
  HtmlStripCharFilter:
    type: object
    properties: {}
  ICharFilter:
    type: object
    properties:
      version:
        type: string
      type:
        type: string
  MappingCharFilter:
    type: object
    properties:
      mappings:
        type: array
        items:
          type: string
      mappings_path:
        type: string
  PatternReplaceCharFilter:
    type: object
    properties:
      pattern:
        type: string
      replacement:
        type: string
  IcuCollationTokenFilter:
    type: object
    properties:
      language:
        type: string
      country:
        type: string
      variant:
        type: string
      strength:
        $ref: '#/definitions/IcuCollationStrength'
      decomposition:
        $ref: '#/definitions/IcuCollationDecomposition'
      alternate:
        $ref: '#/definitions/IcuCollationAlternate'
      caseLevel:
        type: boolean
      caseFirst:
        $ref: '#/definitions/IcuCollationCaseFirst'
      numeric:
        type: boolean
      variableTop:
        type: string
      hiraganaQuaternaryMode:
        type: boolean
  IcuFoldingTokenFilter:
    type: object
    properties:
      unicodeSetFilter:
        type: string
  IcuNormalizationCharFilter:
    type: object
    properties:
      name:
        $ref: '#/definitions/IcuNormalizationType'
      mode:
        $ref: '#/definitions/IcuNormalizationMode'
  IcuNormalizationTokenFilter:
    type: object
    properties:
      name:
        $ref: '#/definitions/IcuNormalizationType'
  IcuTokenizer:
    type: object
    properties:
      rule_files:
        type: string
  IcuTransformTokenFilter:
    type: object
    properties:
      dir:
        $ref: '#/definitions/IcuTransformDirection'
      id:
        type: string
  KuromojiAnalyzer:
    type: object
    properties:
      mode:
        $ref: '#/definitions/KuromojiTokenizationMode'
      user_dictionary:
        type: string
  KuromojiIterationMarkCharFilter:
    type: object
    properties:
      normalize_kanji:
        type: boolean
      normalize_kana:
        type: boolean
  KuromojiPartOfSpeechTokenFilter:
    type: object
    properties:
      stoptags:
        type: array
        items:
          type: string
  KuromojiReadingFormTokenFilter:
    type: object
    properties:
      use_romaji:
        type: boolean
  KuromojiStemmerTokenFilter:
    type: object
    properties:
      minimum_length:
        $ref: '#/definitions/integer'
  KuromojiTokenizer:
    type: object
    properties:
      mode:
        $ref: '#/definitions/KuromojiTokenizationMode'
      discard_punctuation:
        type: boolean
      user_dictionary:
        type: string
      nbest_examples:
        type: string
      nbest_cost:
        $ref: '#/definitions/integer'
  PhoneticTokenFilter:
    type: object
    properties:
      encoder:
        $ref: '#/definitions/PhoneticEncoder'
      replace:
        type: boolean
  AsciiFoldingTokenFilter:
    type: object
    properties:
      preserve_original:
        type: boolean
  CommonGramsTokenFilter:
    type: object
    properties:
      common_words:
        type: object
        description: Unknown InstanceOf
      common_words_path:
        type: string
      ignore_case:
        type: boolean
      query_mode:
        type: boolean
  ElisionTokenFilter:
    type: object
    properties:
      articles:
        type: array
        items:
          type: string
  FingerprintTokenFilter:
    type: object
    properties:
      separator:
        type: string
      max_output_size:
        $ref: '#/definitions/integer'
  HunspellTokenFilter:
    type: object
    properties:
      locale:
        type: string
      dictionary:
        type: string
      dedup:
        type: boolean
      longest_only:
        type: boolean
  ITokenFilter:
    type: object
    properties:
      version:
        type: string
      type:
        type: string
  KStemTokenFilter:
    type: object
    properties: {}
  KeepTypesTokenFilter:
    type: object
    properties:
      types:
        type: array
        items:
          type: string
  KeepWordsTokenFilter:
    type: object
    properties:
      keep_words:
        type: array
        items:
          type: string
      keep_words_path:
        type: string
      keep_words_case:
        type: boolean
  KeywordMarkerTokenFilter:
    type: object
    properties:
      keywords:
        type: array
        items:
          type: string
      keywords_path:
        type: string
      ignore_case:
        type: boolean
  LengthTokenFilter:
    type: object
    properties:
      min:
        $ref: '#/definitions/integer'
      max:
        $ref: '#/definitions/integer'
  LimitTokenCountTokenFilter:
    type: object
    properties:
      max_token_count:
        $ref: '#/definitions/integer'
      consume_all_tokens:
        type: boolean
  LowercaseTokenFilter:
    type: object
    properties:
      language:
        type: string
  NGramTokenFilter:
    type: object
    properties:
      min_gram:
        $ref: '#/definitions/integer'
      max_gram:
        $ref: '#/definitions/integer'
  PatternCaptureTokenFilter:
    type: object
    properties:
      patterns:
        type: array
        items:
          type: string
      preserve_original:
        type: boolean
  PatternReplaceTokenFilter:
    type: object
    properties:
      pattern:
        type: string
      replacement:
        type: string
  PorterStemTokenFilter:
    type: object
    properties: {}
  ReverseTokenFilter:
    type: object
    properties: {}
  SnowballTokenFilter:
    type: object
    properties:
      language:
        $ref: '#/definitions/SnowballLanguage'
  StandardTokenFilter:
    type: object
    properties: {}
  StemmerOverrideTokenFilter:
    type: object
    properties:
      rules:
        type: array
        items:
          type: string
      rules_path:
        type: string
  StemmerTokenFilter:
    type: object
    properties:
      language:
        type: string
  TokenFilterBase:
    type: object
    properties:
      version:
        type: string
      type:
        type: string
  TrimTokenFilter:
    type: object
    properties: {}
  TruncateTokenFilter:
    type: object
    properties:
      length:
        $ref: '#/definitions/integer'
  UniqueTokenFilter:
    type: object
    properties:
      only_on_same_position:
        type: boolean
  UppercaseTokenFilter:
    type: object
    properties: {}
  CompoundWordTokenFilterBase:
    type: object
    properties:
      word_list:
        type: array
        items:
          type: string
      word_list_path:
        type: string
      min_word_size:
        $ref: '#/definitions/integer'
      min_subword_size:
        $ref: '#/definitions/integer'
      max_subword_size:
        $ref: '#/definitions/integer'
      only_longest_match:
        type: boolean
      hyphenation_patterns_path:
        type: string
  DictionaryDecompounderTokenFilter:
    type: object
    properties: {}
  HyphenationDecompounderTokenFilter:
    type: object
    properties: {}
  DelimitedPayloadTokenFilter:
    type: object
    properties:
      delimiter:
        type: string
      encoding:
        $ref: '#/definitions/DelimitedPayloadEncoding'
  EdgeNGramTokenFilter:
    type: object
    properties:
      min_gram:
        $ref: '#/definitions/integer'
      max_gram:
        $ref: '#/definitions/integer'
      side:
        $ref: '#/definitions/EdgeNGramSide'
  ShingleTokenFilter:
    type: object
    properties:
      min_shingle_size:
        $ref: '#/definitions/integer'
      max_shingle_size:
        $ref: '#/definitions/integer'
      output_unigrams:
        type: boolean
      output_unigrams_if_no_shingles:
        type: boolean
      token_separator:
        type: string
      filler_token:
        type: string
  StopTokenFilter:
    type: object
    properties:
      stopwords:
        $ref: '#/definitions/StopWords'
      ignore_case:
        type: boolean
      stopwords_path:
        type: string
      remove_trailing:
        type: boolean
  SynonymGraphTokenFilter:
    type: object
    properties:
      synonyms_path:
        type: string
      format:
        $ref: '#/definitions/SynonymFormat'
      synonyms:
        type: array
        items:
          type: string
      ignore_case:
        type: boolean
      expand:
        type: boolean
      tokenizer:
        type: string
  SynonymTokenFilter:
    type: object
    properties:
      synonyms_path:
        type: string
      format:
        $ref: '#/definitions/SynonymFormat'
      synonyms:
        type: array
        items:
          type: string
      ignore_case:
        type: boolean
      expand:
        type: boolean
      tokenizer:
        type: string
  WordDelimiterTokenFilter:
    type: object
    properties:
      generate_word_parts:
        type: boolean
      generate_number_parts:
        type: boolean
      catenate_words:
        type: boolean
      catenate_numbers:
        type: boolean
      catenate_all:
        type: boolean
      split_on_case_change:
        type: boolean
      preserve_original:
        type: boolean
      split_on_numerics:
        type: boolean
      stem_english_possessive:
        type: boolean
      protected_words:
        type: array
        items:
          type: string
      protected_words_path:
        type: string
      type_table:
        type: array
        items:
          type: string
      type_table_path:
        type: string
  WordDelimiterGraphTokenFilter:
    type: object
    properties:
      generate_word_parts:
        type: boolean
      generate_number_parts:
        type: boolean
      catenate_words:
        type: boolean
      catenate_numbers:
        type: boolean
      catenate_all:
        type: boolean
      split_on_case_change:
        type: boolean
      preserve_original:
        type: boolean
      split_on_numerics:
        type: boolean
      stem_english_possessive:
        type: boolean
      protected_words:
        type: array
        items:
          type: string
      protected_words_path:
        type: string
      type_table:
        type: array
        items:
          type: string
      type_table_path:
        type: string
  ITokenizer:
    type: object
    properties:
      version:
        type: string
      type:
        type: string
  KeywordTokenizer:
    type: object
    properties:
      buffer_size:
        $ref: '#/definitions/integer'
  LetterTokenizer:
    type: object
    properties: {}
  LowercaseTokenizer:
    type: object
    properties: {}
  PathHierarchyTokenizer:
    type: object
    properties:
      delimiter:
        type: string
      replacement:
        type: string
      buffer_size:
        $ref: '#/definitions/integer'
      reverse:
        type: boolean
      skip:
        $ref: '#/definitions/integer'
  PatternTokenizer:
    type: object
    properties:
      pattern:
        type: string
      flags:
        type: string
      group:
        $ref: '#/definitions/integer'
  StandardTokenizer:
    type: object
    properties:
      max_token_length:
        $ref: '#/definitions/integer'
  TokenizerBase:
    type: object
    properties:
      version:
        type: string
      type:
        type: string
  UaxEmailUrlTokenizer:
    type: object
    properties:
      max_token_length:
        $ref: '#/definitions/integer'
  WhitespaceTokenizer:
    type: object
    properties: {}
  EdgeNGramTokenizer:
    type: object
    properties:
      min_gram:
        $ref: '#/definitions/integer'
      max_gram:
        $ref: '#/definitions/integer'
      token_chars:
        type: array
        items:
          $ref: '#/definitions/TokenChar'
  NGramTokenizer:
    type: object
    properties:
      min_gram:
        $ref: '#/definitions/integer'
      max_gram:
        $ref: '#/definitions/integer'
      token_chars:
        type: array
        items:
          $ref: '#/definitions/TokenChar'
  CatResponse:
    type: object
    properties:
      records:
        type: array
        items:
          $ref: '#/definitions/TCatRecord'
  ICatRecord:
    type: object
    properties: {}
  CatAliasesRecord:
    type: object
    properties:
      alias:
        type: string
      index:
        type: string
      filter:
        type: string
      indexRouting:
        type: string
      searchRouting:
        type: string
  CatAliasesRequest:
    type: object
    properties:
      format:
        type: string
      local:
        type: boolean
      master_timeout:
        $ref: '#/definitions/Time'
      headers:
        type: array
        items:
          type: string
      help:
        type: boolean
      sort_by_columns:
        type: array
        items:
          type: string
      verbose:
        type: boolean
  CatAliasesResponse:
    type: object
    properties:
      records:
        type: array
        items:
          $ref: '#/definitions/CatAliasesRecord'
  CatAllocationRecord:
    type: object
    properties:
      shards:
        type: string
      diskUsed:
        type: string
      diskAvail:
        type: string
      diskRatio:
        type: string
      ip:
        type: string
      node:
        type: string
  CatAllocationRequest:
    type: object
    properties:
      format:
        type: string
      bytes:
        $ref: '#/definitions/Bytes'
      local:
        type: boolean
      master_timeout:
        $ref: '#/definitions/Time'
      headers:
        type: array
        items:
          type: string
      help:
        type: boolean
      sort_by_columns:
        type: array
        items:
          type: string
      verbose:
        type: boolean
  CatAllocationResponse:
    type: object
    properties:
      records:
        type: array
        items:
          $ref: '#/definitions/CatAllocationRecord'
  CatCountRecord:
    type: object
    properties:
      epoch:
        type: string
      timestamp:
        type: string
      count:
        type: string
  CatCountRequest:
    type: object
    properties:
      format:
        type: string
      local:
        type: boolean
      master_timeout:
        $ref: '#/definitions/Time'
      headers:
        type: array
        items:
          type: string
      help:
        type: boolean
      sort_by_columns:
        type: array
        items:
          type: string
      verbose:
        type: boolean
  CatCountResponse:
    type: object
    properties:
      records:
        type: array
        items:
          $ref: '#/definitions/CatCountRecord'
  CatFielddataRecord:
    type: object
    properties:
      id:
        type: string
      host:
        type: string
      ip:
        type: string
      node:
        type: string
      field:
        type: string
      size:
        type: string
  CatFielddataRequest:
    type: object
    properties:
      format:
        type: string
      bytes:
        $ref: '#/definitions/Bytes'
      local:
        type: boolean
      master_timeout:
        $ref: '#/definitions/Time'
      headers:
        type: array
        items:
          type: string
      help:
        type: boolean
      sort_by_columns:
        type: array
        items:
          type: string
      verbose:
        type: boolean
  CatFielddataResponse:
    type: object
    properties:
      records:
        type: array
        items:
          $ref: '#/definitions/CatFielddataRecord'
  CatHealthRecord:
    type: object
    properties:
      cluster:
        type: string
      epoch:
        type: string
      node.data:
        type: string
      node.total:
        type: string
      pri:
        type: string
      relo:
        type: string
      init:
        type: string
      shards:
        type: string
      status:
        type: string
      timestamp:
        type: string
      unassign:
        type: string
      pending_tasks:
        type: string
  CatHealthRequest:
    type: object
    properties:
      format:
        type: string
      local:
        type: boolean
      master_timeout:
        $ref: '#/definitions/Time'
      headers:
        type: array
        items:
          type: string
      help:
        type: boolean
      sort_by_columns:
        type: array
        items:
          type: string
      include_timestamp:
        type: boolean
      verbose:
        type: boolean
  CatHealthResponse:
    type: object
    properties:
      records:
        type: array
        items:
          $ref: '#/definitions/CatHealthRecord'
  CatHelpRecord:
    type: object
    properties:
      endpoint:
        type: string
  CatHelpRequest:
    type: object
    properties:
      help:
        type: boolean
      sort_by_columns:
        type: array
        items:
          type: string
  CatHelpResponse:
    type: object
    properties:
      records:
        type: array
        items:
          $ref: '#/definitions/CatHelpRecord'
  CatIndicesRecord:
    type: object
    properties:
      docs.count:
        type: string
      docs.deleted:
        type: string
      health:
        type: string
      index:
        type: string
      pri:
        type: string
      pri.store.size:
        type: string
      rep:
        type: string
      store.size:
        type: string
      status:
        type: string
      tm:
        type: string
  CatIndicesRequest:
    type: object
    properties:
      format:
        type: string
      bytes:
        $ref: '#/definitions/Bytes'
      local:
        type: boolean
      master_timeout:
        $ref: '#/definitions/Time'
      headers:
        type: array
        items:
          type: string
      health:
        $ref: '#/definitions/Health'
      help:
        type: boolean
      pri:
        type: boolean
      sort_by_columns:
        type: array
        items:
          type: string
      verbose:
        type: boolean
  CatIndicesResponse:
    type: object
    properties:
      records:
        type: array
        items:
          $ref: '#/definitions/CatIndicesRecord'
  CatMasterRecord:
    type: object
    properties:
      id:
        type: string
      ip:
        type: string
      node:
        type: string
  CatMasterRequest:
    type: object
    properties:
      format:
        type: string
      local:
        type: boolean
      master_timeout:
        $ref: '#/definitions/Time'
      headers:
        type: array
        items:
          type: string
      help:
        type: boolean
      sort_by_columns:
        type: array
        items:
          type: string
      verbose:
        type: boolean
  CatMasterResponse:
    type: object
    properties:
      records:
        type: array
        items:
          $ref: '#/definitions/CatMasterRecord'
  CatNodeAttributesRecord:
    type: object
    properties:
      id:
        type: string
      node:
        type: string
      pid:
        $ref: '#/definitions/long'
      host:
        type: string
      ip:
        type: string
      port:
        $ref: '#/definitions/long'
      attr:
        type: string
      value:
        type: string
  CatNodeAttributesRequest:
    type: object
    properties:
      format:
        type: string
      local:
        type: boolean
      master_timeout:
        $ref: '#/definitions/Time'
      headers:
        type: array
        items:
          type: string
      help:
        type: boolean
      sort_by_columns:
        type: array
        items:
          type: string
      verbose:
        type: boolean
  CatNodeAttributesResponse:
    type: object
    properties:
      records:
        type: array
        items:
          $ref: '#/definitions/CatNodeAttributesRecord'
  CatNodesRecord:
    type: object
    properties:
      node_id:
        type: string
      pid:
        type: string
      ip:
        type: string
      port:
        type: string
      version:
        type: string
      build:
        type: string
      jdk:
        type: string
      disk_available:
        type: string
      heap_current:
        type: string
      heap_percent:
        type: string
      heap_max:
        type: string
      ram_current:
        type: string
      ram_percent:
        type: string
      ram_max:
        type: string
      load_1m:
        type: string
      load_5m:
        type: string
      load_15m:
        type: string
      cpu:
        type: string
      uptime:
        type: string
      node_role:
        type: string
      master:
        type: string
      name:
        type: string
      completion_size:
        type: string
      fielddata_memory:
        type: string
      fielddata_evictions:
        type: string
      filter_cache_memory:
        type: string
      filter_cache_evictions:
        type: string
      flush_total:
        type: string
      flush_total_time:
        type: string
      file_descriptor_current:
        $ref: '#/definitions/integer'
      file_descriptor_percent:
        $ref: '#/definitions/integer'
      file_descriptor_max:
        $ref: '#/definitions/integer'
      get_current:
        type: string
      get_time:
        type: string
      get_total:
        type: string
      get_exists_time:
        type: string
      get_exists_total:
        type: string
      get_missing_time:
        type: string
      get_missing_total:
        type: string
      id_cache_memory:
        type: string
      indexing_delete_current:
        type: string
      indexing_delete_time:
        type: string
      indexing_delete_total:
        type: string
      indexing_index_current:
        type: string
      indexing_index_time:
        type: string
      indexing_index_total:
        type: string
      merges_current:
        type: string
      merges_current_docs:
        type: string
      merges_current_size:
        type: string
      merges_total:
        type: string
      merges_total_docs:
        type: string
      merges_total_time:
        type: string
      percolate_current:
        type: string
      percolate_memory:
        type: string
      percolate_queries:
        type: string
      percolate_time:
        type: string
      percolate_total:
        type: string
      refresh_total:
        type: string
      refresh_time:
        type: string
      search_fetch_current:
        type: string
      search_fetch_time:
        type: string
      search_fetch_total:
        type: string
      search_open_contexts:
        type: string
      search_query_current:
        type: string
      search_query_time:
        type: string
      search_query_total:
        type: string
      segments_count:
        type: string
      segments_memory:
        type: string
      segments_index_writer_memory:
        type: string
      segments_index_writer_max_memory:
        type: string
      segments_version_map_memory:
        type: string
  CatNodesRequest:
    type: object
    properties:
      format:
        type: string
      full_id:
        type: boolean
      local:
        type: boolean
      master_timeout:
        $ref: '#/definitions/Time'
      headers:
        type: array
        items:
          type: string
      help:
        type: boolean
      sort_by_columns:
        type: array
        items:
          type: string
      verbose:
        type: boolean
  CatNodesResponse:
    type: object
    properties:
      records:
        type: array
        items:
          $ref: '#/definitions/CatNodesRecord'
  CatPendingTasksRecord:
    type: object
    properties:
      insertOrder:
        $ref: '#/definitions/integer'
      timeInQueue:
        type: string
      priority:
        type: string
      source:
        type: string
  CatPendingTasksRequest:
    type: object
    properties:
      format:
        type: string
      local:
        type: boolean
      master_timeout:
        $ref: '#/definitions/Time'
      headers:
        type: array
        items:
          type: string
      help:
        type: boolean
      sort_by_columns:
        type: array
        items:
          type: string
      verbose:
        type: boolean
  CatPendingTasksResponse:
    type: object
    properties:
      records:
        type: array
        items:
          $ref: '#/definitions/CatPendingTasksRecord'
  CatPluginsRecord:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      component:
        type: string
      version:
        type: string
      type:
        type: string
      isolation:
        type: string
      url:
        type: string
      description:
        type: string
  CatPluginsRequest:
    type: object
    properties:
      format:
        type: string
      local:
        type: boolean
      master_timeout:
        $ref: '#/definitions/Time'
      headers:
        type: array
        items:
          type: string
      help:
        type: boolean
      sort_by_columns:
        type: array
        items:
          type: string
      verbose:
        type: boolean
  CatPluginsResponse:
    type: object
    properties:
      records:
        type: array
        items:
          $ref: '#/definitions/CatPluginsRecord'
  CatRecoveryRecord:
    type: object
    properties:
      index:
        type: string
      shard:
        type: string
      time:
        type: string
      type:
        type: string
      stage:
        type: string
      source_host:
        type: string
      source_node:
        type: string
      target_host:
        type: string
      target_node:
        type: string
      repository:
        type: string
      snapshot:
        type: string
      files:
        type: string
      files_recovered:
        type: string
      files_percent:
        type: string
      files_total:
        type: string
      bytes:
        type: string
      bytes_recovered:
        type: string
      bytes_percent:
        type: string
      bytes_total:
        type: string
      translog_ops:
        $ref: '#/definitions/long'
      translog_ops_percent:
        type: string
      translog_ops_recovered:
        $ref: '#/definitions/long'
  CatRecoveryRequest:
    type: object
    properties:
      format:
        type: string
      bytes:
        $ref: '#/definitions/Bytes'
      master_timeout:
        $ref: '#/definitions/Time'
      headers:
        type: array
        items:
          type: string
      help:
        type: boolean
      sort_by_columns:
        type: array
        items:
          type: string
      verbose:
        type: boolean
  CatRecoveryResponse:
    type: object
    properties:
      records:
        type: array
        items:
          $ref: '#/definitions/CatRecoveryRecord'
  CatRepositoriesRecord:
    type: object
    properties:
      id:
        type: string
      type:
        type: string
  CatRepositoriesRequest:
    type: object
    properties:
      format:
        type: string
      local:
        type: boolean
      master_timeout:
        $ref: '#/definitions/Time'
      headers:
        type: array
        items:
          type: string
      help:
        type: boolean
      sort_by_columns:
        type: array
        items:
          type: string
      verbose:
        type: boolean
  CatRepositoriesResponse:
    type: object
    properties:
      records:
        type: array
        items:
          $ref: '#/definitions/CatRepositoriesRecord'
  CatSegmentsRecord:
    type: object
    properties:
      index:
        type: string
      shard:
        type: string
      prirep:
        type: string
      ip:
        type: string
      id:
        type: string
      segment:
        type: string
      generation:
        type: string
      docs.count:
        type: string
      docs.deleted:
        type: string
      size:
        type: string
      size.memory:
        type: string
      committed:
        type: string
      searchable:
        type: string
      version:
        type: string
      compound:
        type: string
  CatSegmentsRequest:
    type: object
    properties:
      format:
        type: string
      bytes:
        $ref: '#/definitions/Bytes'
      headers:
        type: array
        items:
          type: string
      help:
        type: boolean
      sort_by_columns:
        type: array
        items:
          type: string
      verbose:
        type: boolean
  CatSegmentsResponse:
    type: object
    properties:
      records:
        type: array
        items:
          $ref: '#/definitions/CatSegmentsRecord'
  CatShardsRecord:
    type: object
    properties:
      index:
        type: string
      shard:
        type: string
      prirep:
        type: string
      state:
        type: string
      docs:
        type: string
      store:
        type: string
      ip:
        type: string
      id:
        type: string
      node:
        type: string
      completion.size:
        type: string
      fielddata.memory_size:
        type: string
      fielddata.evictions:
        type: string
      filter_cache.memory_size:
        type: string
      flush.total:
        type: string
      flush.total_time:
        type: string
      get.current:
        type: string
      get.time:
        type: string
      get.total:
        type: string
      get.exists_time:
        type: string
      get.exists_total:
        type: string
      get.missing_time:
        type: string
      get.missing_total:
        type: string
      id_cache.memory_size:
        type: string
      indexing.delete_current:
        type: string
      indexing.delete_time:
        type: string
      indexing.delete_total:
        type: string
      indexing.index_current:
        type: string
      indexing.index_time:
        type: string
      indexing.index_total:
        type: string
      merges.current:
        type: string
      merges.current_docs:
        type: string
      merges.current_size:
        type: string
      merges.total_docs:
        type: string
      merges.total_size:
        type: string
      merges.total_time:
        type: string
      percolate.current:
        type: string
      percolate.memory_size:
        type: string
      percolate.queries:
        type: string
      percolate.time:
        type: string
      percolate.total:
        type: string
      refresh.total:
        type: string
      refresh.time:
        type: string
      search.fetch_current:
        type: string
      search.fetch_time:
        type: string
      search.fetch_total:
        type: string
      search.open_contexts:
        type: string
      search.query_current:
        type: string
      search.query_time:
        type: string
      search.query_total:
        type: string
      segments.count:
        type: string
      segments.memory:
        type: string
      segments.index_writer_memory:
        type: string
      segments.index_writer_max_memory:
        type: string
      segments.version_map_memory:
        type: string
      segments.fixed_bitset_memory:
        type: string
      warmer.current:
        type: string
      warmer.total:
        type: string
      warmer.total_time:
        type: string
  CatShardsRequest:
    type: object
    properties:
      format:
        type: string
      bytes:
        $ref: '#/definitions/Bytes'
      local:
        type: boolean
      master_timeout:
        $ref: '#/definitions/Time'
      headers:
        type: array
        items:
          type: string
      help:
        type: boolean
      sort_by_columns:
        type: array
        items:
          type: string
      verbose:
        type: boolean
  CatShardsResponse:
    type: object
    properties:
      records:
        type: array
        items:
          $ref: '#/definitions/CatShardsRecord'
  CatSnapshotsRecord:
    type: object
    properties:
      id:
        type: string
      status:
        type: string
      start_epoch:
        $ref: '#/definitions/long'
      start_time:
        type: string
      end_epoch:
        $ref: '#/definitions/long'
      end_time:
        type: string
      duration:
        $ref: '#/definitions/Time'
      indices:
        $ref: '#/definitions/long'
      succesful_shards:
        $ref: '#/definitions/long'
      failed_shards:
        $ref: '#/definitions/long'
      total_shards:
        $ref: '#/definitions/long'
  CatSnapshotsRequest:
    type: object
    properties:
      format:
        type: string
      ignore_unavailable:
        type: boolean
      master_timeout:
        $ref: '#/definitions/Time'
      headers:
        type: array
        items:
          type: string
      help:
        type: boolean
      sort_by_columns:
        type: array
        items:
          type: string
      verbose:
        type: boolean
  CatSnapshotsResponse:
    type: object
    properties:
      records:
        type: array
        items:
          $ref: '#/definitions/CatSnapshotsRecord'
  CatTasksRecord:
    type: object
    properties:
      action:
        type: string
      ip:
        type: string
      node:
        type: string
      parent_task_id:
        type: string
      running_time:
        type: string
      start_time:
        type: string
      task_id:
        type: string
      timestamp:
        type: string
      type:
        type: string
  CatTasksRequest:
    type: object
    properties:
      format:
        type: string
      node_id:
        type: array
        items:
          type: string
      actions:
        type: array
        items:
          type: string
      detailed:
        type: boolean
      parent_node:
        type: string
      parent_task:
        $ref: '#/definitions/long'
      headers:
        type: array
        items:
          type: string
      help:
        type: boolean
      sort_by_columns:
        type: array
        items:
          type: string
      verbose:
        type: boolean
  CatTasksResponse:
    type: object
    properties:
      records:
        type: array
        items:
          $ref: '#/definitions/CatTasksRecord'
  CatTemplatesRecord:
    type: object
    properties:
      name:
        type: string
      index_patterns:
        type: string
      order:
        $ref: '#/definitions/long'
      version:
        $ref: '#/definitions/long'
  CatTemplatesRequest:
    type: object
    properties:
      format:
        type: string
      local:
        type: boolean
      master_timeout:
        $ref: '#/definitions/Time'
      headers:
        type: array
        items:
          type: string
      help:
        type: boolean
      sort_by_columns:
        type: array
        items:
          type: string
      verbose:
        type: boolean
  CatTemplatesResponse:
    type: object
    properties:
      records:
        type: array
        items:
          $ref: '#/definitions/CatTemplatesRecord'
  CatThreadPoolRecord:
    type: object
    properties:
      node_name:
        type: string
      node_id:
        type: string
      ephemeral_node_id:
        type: string
      pid:
        $ref: '#/definitions/integer'
      host:
        type: string
      ip:
        type: string
      port:
        $ref: '#/definitions/integer'
      name:
        type: string
      type:
        type: string
      active:
        $ref: '#/definitions/integer'
      size:
        $ref: '#/definitions/integer'
      queue:
        $ref: '#/definitions/integer'
      queue_size:
        $ref: '#/definitions/integer'
      rejected:
        $ref: '#/definitions/long'
      largest:
        $ref: '#/definitions/integer'
      completed:
        $ref: '#/definitions/long'
      min:
        $ref: '#/definitions/integer'
      max:
        $ref: '#/definitions/integer'
      keep_alive:
        $ref: '#/definitions/Time'
  CatThreadPoolRequest:
    type: object
    properties:
      format:
        type: string
      size:
        $ref: '#/definitions/Size'
      local:
        type: boolean
      master_timeout:
        $ref: '#/definitions/Time'
      headers:
        type: array
        items:
          type: string
      help:
        type: boolean
      sort_by_columns:
        type: array
        items:
          type: string
      verbose:
        type: boolean
  CatThreadPoolResponse:
    type: object
    properties:
      records:
        type: array
        items:
          $ref: '#/definitions/CatThreadPoolRecord'
  NodeStatistics:
    type: object
    properties:
      total:
        $ref: '#/definitions/integer'
      successful:
        $ref: '#/definitions/integer'
      failed:
        $ref: '#/definitions/integer'
  NodesResponseBase:
    type: object
    properties:
      node_statistics:
        $ref: '#/definitions/NodeStatistics'
  AllocationDecision:
    type: object
    properties:
      decider:
        type: string
      decision:
        $ref: '#/definitions/AllocationExplainDecision'
      explanation:
        type: string
  AllocationStore:
    type: object
    properties:
      found:
        type: boolean
      in_sync:
        type: boolean
      allocation_id:
        type: string
      matching_sync_id:
        type: boolean
      matching_size_in_bytes:
        $ref: '#/definitions/long'
      store_exception:
        type: string
  ClusterAllocationExplainRequest:
    type: object
    properties:
      index:
        $ref: '#/definitions/IndexName'
      shard:
        $ref: '#/definitions/integer'
      primary:
        type: boolean
      include_yes_decisions:
        type: boolean
      include_disk_info:
        type: boolean
  ClusterAllocationExplainResponse:
    type: object
    properties:
      index:
        type: string
      shard:
        $ref: '#/definitions/integer'
      primary:
        type: boolean
      current_state:
        type: string
      unassigned_info:
        $ref: '#/definitions/UnassignedInformation'
      can_allocate:
        $ref: '#/definitions/Decision'
      allocate_explanation:
        type: string
      configured_delay:
        type: string
      configured_delay_in_mills:
        $ref: '#/definitions/long'
      current_node:
        $ref: '#/definitions/CurrentNode'
      can_remain_on_current_node:
        $ref: '#/definitions/Decision'
      can_remain_decisions:
        type: array
        items:
          $ref: '#/definitions/AllocationDecision'
      can_rebalance_cluster:
        $ref: '#/definitions/Decision'
      can_rebalance_to_other_node:
        $ref: '#/definitions/Decision'
      can_rebalance_cluster_decisions:
        type: array
        items:
          $ref: '#/definitions/AllocationDecision'
      rebalance_explanation:
        type: string
      node_allocation_decisions:
        type: array
        items:
          $ref: '#/definitions/NodeAllocationExplanation'
      can_move_to_other_node:
        $ref: '#/definitions/Decision'
      move_explanation:
        type: string
      allocation_delay:
        type: string
      allocation_delay_in_millis:
        $ref: '#/definitions/long'
      remaining_delay:
        type: string
      remaining_delay_in_millis:
        $ref: '#/definitions/long'
  CurrentNode:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      transport_address:
        type: string
      weight_ranking:
        type: string
      attributes:
        type: object
        additionalProperties:
          type: string
  NodeAllocationExplanation:
    type: object
    properties:
      node_id:
        type: string
      node_name:
        type: string
      transport_address:
        type: string
      node_decision:
        $ref: '#/definitions/Decision'
      node_attributes:
        type: object
        additionalProperties:
          type: string
      store:
        $ref: '#/definitions/AllocationStore'
      weight_ranking:
        $ref: '#/definitions/integer'
      deciders:
        type: array
        items:
          $ref: '#/definitions/AllocationDecision'
  UnassignedInformation:
    type: object
    properties:
      reason:
        $ref: '#/definitions/UnassignedInformationReason'
      at:
        $ref: '#/definitions/Date'
      last_allocation_status:
        type: string
  ClusterHealthRequest:
    type: object
    properties:
      level:
        $ref: '#/definitions/Level'
      local:
        type: boolean
      master_timeout:
        $ref: '#/definitions/Time'
      timeout:
        $ref: '#/definitions/Time'
      wait_for_active_shards:
        type: string
      wait_for_nodes:
        type: string
      wait_for_events:
        $ref: '#/definitions/WaitForEvents'
      wait_for_no_relocating_shards:
        type: boolean
      wait_for_status:
        $ref: '#/definitions/WaitForStatus'
  ClusterHealthResponse:
    type: object
    properties:
      cluster_name:
        type: string
      status:
        $ref: '#/definitions/Health'
      timed_out:
        type: boolean
      number_of_nodes:
        $ref: '#/definitions/integer'
      number_of_data_nodes:
        $ref: '#/definitions/integer'
      active_primary_shards:
        $ref: '#/definitions/integer'
      active_shards:
        $ref: '#/definitions/integer'
      relocating_shards:
        $ref: '#/definitions/integer'
      initializing_shards:
        $ref: '#/definitions/integer'
      unassigned_shards:
        $ref: '#/definitions/integer'
      number_of_pending_tasks:
        $ref: '#/definitions/integer'
      indices:
        type: object
        additionalProperties:
          $ref: '#/definitions/IndexHealthStats'
  IndexHealthStats:
    type: object
    properties:
      status:
        $ref: '#/definitions/Health'
      number_of_shards:
        $ref: '#/definitions/integer'
      number_of_replicas:
        $ref: '#/definitions/integer'
      active_primary_shards:
        $ref: '#/definitions/integer'
      active_shards:
        $ref: '#/definitions/integer'
      relocating_shards:
        $ref: '#/definitions/integer'
      initializing_shards:
        $ref: '#/definitions/integer'
      unassigned_shards:
        $ref: '#/definitions/integer'
      shards:
        type: object
        additionalProperties:
          $ref: '#/definitions/ShardHealthStats'
  ShardHealthStats:
    type: object
    properties:
      status:
        $ref: '#/definitions/Health'
      primary_active:
        type: boolean
      active_shards:
        $ref: '#/definitions/integer'
      relocating_shards:
        $ref: '#/definitions/integer'
      initializing_shards:
        $ref: '#/definitions/integer'
      unassigned_shards:
        $ref: '#/definitions/integer'
  ClusterPendingTasksRequest:
    type: object
    properties:
      local:
        type: boolean
      master_timeout:
        $ref: '#/definitions/Time'
  ClusterPendingTasksResponse:
    type: object
    properties:
      tasks:
        type: array
        items:
          $ref: '#/definitions/PendingTask'
  PendingTask:
    type: object
    properties:
      insert_order:
        $ref: '#/definitions/integer'
      priority:
        type: string
      source:
        type: string
      time_in_queue_millis:
        $ref: '#/definitions/integer'
      time_in_queue:
        type: string
  ClusterRerouteDecision:
    type: object
    properties:
      decider:
        type: string
      decision:
        type: string
      explanation:
        type: string
  ClusterRerouteExplanation:
    type: object
    properties:
      command:
        type: string
      parameters:
        $ref: '#/definitions/ClusterRerouteParameters'
      decisions:
        type: array
        items:
          $ref: '#/definitions/ClusterRerouteDecision'
  ClusterRerouteParameters:
    type: object
    properties:
      index:
        type: string
      shard:
        $ref: '#/definitions/integer'
      from_node:
        type: string
      to_node:
        type: string
      node:
        type: string
      allow_primary:
        type: boolean
  ClusterRerouteRequest:
    type: object
    properties:
      commands:
        type: array
        items:
          $ref: '#/definitions/ClusterRerouteCommand'
      dry_run:
        type: boolean
      explain:
        type: boolean
      retry_failed:
        type: boolean
      metric:
        type: array
        items:
          type: string
      master_timeout:
        $ref: '#/definitions/Time'
      timeout:
        $ref: '#/definitions/Time'
  ClusterRerouteResponse:
    type: object
    properties:
      state:
        $ref: '#/definitions/ClusterRerouteState'
      explanations:
        type: array
        items:
          $ref: '#/definitions/ClusterRerouteExplanation'
  ClusterRerouteState:
    type: object
    properties:
      version:
        $ref: '#/definitions/integer'
      master_node:
        type: string
      blocks:
        $ref: '#/definitions/BlockState'
      nodes:
        type: object
        additionalProperties:
          $ref: '#/definitions/NodeState'
      routing_table:
        $ref: '#/definitions/RoutingTableState'
      routing_nodes:
        $ref: '#/definitions/RoutingNodesState'
  ClusterRerouteCommand:
    type: object
    properties:
      name:
        type: string
  ClusterGetSettingsRequest:
    type: object
    properties:
      flat_settings:
        type: boolean
      master_timeout:
        $ref: '#/definitions/Time'
      timeout:
        $ref: '#/definitions/Time'
      include_defaults:
        type: boolean
  ClusterGetSettingsResponse:
    type: object
    properties:
      persistent:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
      transient:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
  ClusterPutSettingsRequest:
    type: object
    properties:
      persistent:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
      transient:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
      flat_settings:
        type: boolean
      master_timeout:
        $ref: '#/definitions/Time'
      timeout:
        $ref: '#/definitions/Time'
  ClusterPutSettingsResponse:
    type: object
    properties:
      acknowledged:
        type: boolean
      persistent:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
      transient:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
  AllocationId:
    type: object
    properties:
      id:
        type: string
  BlockState:
    type: object
    properties:
      read_only:
        type: boolean
  ClusterStateRequest:
    type: object
    properties:
      local:
        type: boolean
      master_timeout:
        $ref: '#/definitions/Time'
      flat_settings:
        type: boolean
      ignore_unavailable:
        type: boolean
      allow_no_indices:
        type: boolean
      expand_wildcards:
        $ref: '#/definitions/ExpandWildcards'
  ClusterStateResponse:
    type: object
    properties:
      cluster_name:
        type: string
      master_node:
        type: string
      state_uuid:
        type: string
      version:
        $ref: '#/definitions/long'
      nodes:
        type: object
        additionalProperties:
          $ref: '#/definitions/NodeState'
      metadata:
        $ref: '#/definitions/MetadataState'
      routing_table:
        $ref: '#/definitions/RoutingTableState'
      routing_nodes:
        $ref: '#/definitions/RoutingNodesState'
      blocks:
        $ref: '#/definitions/BlockState'
  IndexRoutingTable:
    type: object
    properties:
      shards:
        type: object
        additionalProperties:
          type: array
          items:
            $ref: '#/definitions/RoutingShard'
  MetadataIndexState:
    type: object
    properties:
      state:
        type: string
      settings:
        type: array
        items:
          type: string
      mappings:
        type: object
        additionalProperties:
          $ref: '#/definitions/TypeMapping'
      aliases:
        type: array
        items:
          type: string
  MetadataState:
    type: object
    properties:
      templates:
        type: object
        additionalProperties:
          $ref: '#/definitions/TemplateMapping'
      cluster_uuid:
        type: string
      indices:
        type: object
        additionalProperties:
          $ref: '#/definitions/MetadataIndexState'
  NodeState:
    type: object
    properties:
      name:
        type: string
      transport_address:
        type: string
      attributes:
        type: object
        additionalProperties:
          type: string
  RoutingNodesState:
    type: object
    properties:
      unassigned:
        type: array
        items:
          $ref: '#/definitions/RoutingShard'
      nodes:
        type: object
        additionalProperties:
          type: array
          items:
            $ref: '#/definitions/RoutingShard'
  RoutingShard:
    type: object
    properties:
      allocation_id:
        $ref: '#/definitions/AllocationId'
      state:
        type: string
      primary:
        type: boolean
      node:
        type: string
      relocating_node:
        type: string
      shard:
        $ref: '#/definitions/integer'
      index:
        type: string
  RoutingTableState:
    type: object
    properties:
      indices:
        type: object
        additionalProperties:
          $ref: '#/definitions/IndexRoutingTable'
  ClusterFileSystem:
    type: object
    properties:
      total:
        type: string
      total_in_bytes:
        $ref: '#/definitions/long'
      free:
        type: string
      free_in_bytes:
        $ref: '#/definitions/long'
      available:
        type: string
      available_in_bytes:
        $ref: '#/definitions/long'
  ClusterIndicesShardsIndexStats:
    type: object
    properties:
      shards:
        $ref: '#/definitions/ClusterShardMetrics'
      primaries:
        $ref: '#/definitions/ClusterShardMetrics'
      replication:
        $ref: '#/definitions/ClusterShardMetrics'
  ClusterIndicesShardsStats:
    type: object
    properties:
      total:
        $ref: '#/definitions/double'
      primaries:
        $ref: '#/definitions/double'
      replication:
        $ref: '#/definitions/double'
      index:
        $ref: '#/definitions/ClusterIndicesShardsIndexStats'
  ClusterIndicesStats:
    type: object
    properties:
      completion:
        $ref: '#/definitions/CompletionStats'
      count:
        $ref: '#/definitions/long'
      docs:
        $ref: '#/definitions/DocStats'
      fielddata:
        $ref: '#/definitions/FielddataStats'
      query_cache:
        $ref: '#/definitions/QueryCacheStats'
      segments:
        $ref: '#/definitions/SegmentsStats'
      shards:
        $ref: '#/definitions/ClusterIndicesShardsStats'
      store:
        $ref: '#/definitions/StoreStats'
  ClusterJvm:
    type: object
    properties:
      max_uptime:
        type: string
      max_uptime_in_millis:
        $ref: '#/definitions/long'
      versions:
        type: array
        items:
          $ref: '#/definitions/ClusterJvmVersion'
      mem:
        $ref: '#/definitions/ClusterJvmMemory'
      threads:
        $ref: '#/definitions/long'
  ClusterJvmMemory:
    type: object
    properties:
      heap_used:
        type: string
      heap_used_in_bytes:
        $ref: '#/definitions/long'
      heap_max:
        type: string
      heap_max_in_bytes:
        $ref: '#/definitions/long'
  ClusterJvmVersion:
    type: object
    properties:
      version:
        type: string
      vm_name:
        type: string
      vm_version:
        type: string
      vm_vendor:
        type: string
      count:
        $ref: '#/definitions/integer'
  ClusterNodeCount:
    type: object
    properties:
      total:
        $ref: '#/definitions/integer'
      coordinating_only:
        $ref: '#/definitions/integer'
      master:
        $ref: '#/definitions/integer'
      data:
        $ref: '#/definitions/integer'
      ingest:
        $ref: '#/definitions/integer'
  ClusterNodesStats:
    type: object
    properties:
      count:
        $ref: '#/definitions/ClusterNodeCount'
      versions:
        type: array
        items:
          type: string
      os:
        $ref: '#/definitions/ClusterOperatingSystemStats'
      process:
        $ref: '#/definitions/ClusterProcess'
      jvm:
        $ref: '#/definitions/ClusterJvm'
      fs:
        $ref: '#/definitions/ClusterFileSystem'
      plugins:
        type: array
        items:
          $ref: '#/definitions/PluginStats'
  ClusterOperatingSystemName:
    type: object
    properties:
      count:
        $ref: '#/definitions/integer'
      name:
        type: string
  ClusterOperatingSystemStats:
    type: object
    properties:
      available_processors:
        $ref: '#/definitions/integer'
      allocated_processors:
        $ref: '#/definitions/integer'
      names:
        type: array
        items:
          $ref: '#/definitions/ClusterOperatingSystemName'
  ClusterProcess:
    type: object
    properties:
      cpu:
        $ref: '#/definitions/ClusterProcessCpu'
      open_file_descriptors:
        $ref: '#/definitions/ClusterProcessOpenFileDescriptors'
  ClusterProcessCpu:
    type: object
    properties:
      percent:
        $ref: '#/definitions/integer'
  ClusterProcessOpenFileDescriptors:
    type: object
    properties:
      min:
        $ref: '#/definitions/long'
      max:
        $ref: '#/definitions/long'
      avg:
        $ref: '#/definitions/long'
  ClusterShardMetrics:
    type: object
    properties:
      min:
        $ref: '#/definitions/double'
      max:
        $ref: '#/definitions/double'
      avg:
        $ref: '#/definitions/double'
  ClusterStatsRequest:
    type: object
    properties:
      flat_settings:
        type: boolean
      timeout:
        $ref: '#/definitions/Time'
  ClusterStatsResponse:
    type: object
    properties:
      cluster_name:
        type: string
      timestamp:
        $ref: '#/definitions/long'
      status:
        $ref: '#/definitions/ClusterStatus'
      indices:
        $ref: '#/definitions/ClusterIndicesStats'
      nodes:
        $ref: '#/definitions/ClusterNodesStats'
  HotThreadInformation:
    type: object
    properties:
      node_name:
        type: string
      node_id:
        type: string
      threads:
        type: array
        items:
          type: string
      hosts:
        type: array
        items:
          type: string
  NodesHotThreadsRequest:
    type: object
    properties:
      interval:
        $ref: '#/definitions/Time'
      snapshots:
        $ref: '#/definitions/long'
      threads:
        $ref: '#/definitions/long'
      ignore_idle_threads:
        type: boolean
      thread_type:
        $ref: '#/definitions/ThreadType'
      timeout:
        $ref: '#/definitions/Time'
  NodesHotThreadsResponse:
    type: object
    properties:
      hot_threads:
        type: array
        items:
          $ref: '#/definitions/HotThreadInformation'
  NodeInfo:
    type: object
    properties:
      name:
        type: string
      transport_address:
        type: string
      host:
        type: string
      ip:
        type: string
      version:
        type: string
      build_hash:
        type: string
      roles:
        type: array
        items:
          $ref: '#/definitions/NodeRole'
      settings:
        type: array
        items:
          type: string
      os:
        $ref: '#/definitions/NodeOperatingSystemInfo'
      process:
        $ref: '#/definitions/NodeProcessInfo'
      jvm:
        $ref: '#/definitions/NodeJvmInfo'
      thread_pool:
        type: object
        additionalProperties:
          $ref: '#/definitions/NodeThreadPoolInfo'
      network:
        $ref: '#/definitions/NodeInfoNetwork'
      transport:
        $ref: '#/definitions/NodeInfoTransport'
      http:
        $ref: '#/definitions/NodeInfoHttp'
      plugins:
        type: array
        items:
          $ref: '#/definitions/PluginStats'
  NodeInfoHttp:
    type: object
    properties:
      bound_address:
        type: array
        items:
          type: string
      publish_address:
        type: string
      max_content_length:
        type: string
      max_content_length_in_bytes:
        $ref: '#/definitions/long'
  NodeInfoJVMMemory:
    type: object
    properties:
      heap_init:
        type: string
      heap_init_in_bytes:
        $ref: '#/definitions/long'
      heap_max:
        type: string
      heap_max_in_bytes:
        $ref: '#/definitions/long'
      non_heap_init:
        type: string
      non_heap_init_in_bytes:
        $ref: '#/definitions/long'
      non_heap_max:
        type: string
      non_heap_max_in_bytes:
        $ref: '#/definitions/long'
      direct_max:
        type: string
      direct_max_in_bytes:
        $ref: '#/definitions/long'
  NodeInfoMemory:
    type: object
    properties:
      total:
        type: string
      total_in_bytes:
        $ref: '#/definitions/long'
  NodeInfoNetwork:
    type: object
    properties:
      refresh_interval:
        $ref: '#/definitions/integer'
      primary_interface:
        $ref: '#/definitions/NodeInfoNetworkInterface'
  NodeInfoNetworkInterface:
    type: object
    properties:
      address:
        type: string
      name:
        type: string
      mac_address:
        type: string
  NodeInfoOSCPU:
    type: object
    properties:
      vendor:
        type: string
      model:
        type: string
      mhz:
        $ref: '#/definitions/integer'
      total_cores:
        $ref: '#/definitions/integer'
      total_sockets:
        $ref: '#/definitions/integer'
      cores_per_socket:
        $ref: '#/definitions/integer'
      cache_size:
        type: string
      cache_size_in_bytes:
        $ref: '#/definitions/integer'
  NodeInfoTransport:
    type: object
    properties:
      bound_address:
        type: array
        items:
          type: string
      publish_address:
        type: string
  NodeJvmInfo:
    type: object
    properties:
      pid:
        $ref: '#/definitions/integer'
      version:
        type: string
      vm_name:
        type: string
      vm_version:
        type: string
      vm_vendor:
        type: string
      memory_pools:
        type: array
        items:
          type: string
      gc_collectors:
        type: array
        items:
          type: string
      start_time_in_millis:
        $ref: '#/definitions/long'
      mem:
        $ref: '#/definitions/NodeInfoJVMMemory'
  NodeOperatingSystemInfo:
    type: object
    properties:
      name:
        type: string
      arch:
        type: string
      version:
        type: string
      refresh_interval_in_millis:
        $ref: '#/definitions/integer'
      available_processors:
        $ref: '#/definitions/integer'
      cpu:
        $ref: '#/definitions/NodeInfoOSCPU'
      mem:
        $ref: '#/definitions/NodeInfoMemory'
      swap:
        $ref: '#/definitions/NodeInfoMemory'
  NodeProcessInfo:
    type: object
    properties:
      refresh_interval_in_millis:
        $ref: '#/definitions/long'
      id:
        $ref: '#/definitions/long'
      mlockall:
        type: boolean
  NodeThreadPoolInfo:
    type: object
    properties:
      type:
        type: string
      min:
        $ref: '#/definitions/integer'
      max:
        $ref: '#/definitions/integer'
      queue_size:
        $ref: '#/definitions/integer'
      keep_alive:
        type: string
  NodesInfoRequest:
    type: object
    properties:
      flat_settings:
        type: boolean
      timeout:
        $ref: '#/definitions/Time'
  NodesInfoResponse:
    type: object
    properties:
      cluster_name:
        type: string
      nodes:
        type: object
        additionalProperties:
          $ref: '#/definitions/NodeInfo'
  BreakerStats:
    type: object
    properties:
      estimated_size:
        type: string
      estimated_size_in_bytes:
        $ref: '#/definitions/long'
      limit_size:
        type: string
      limit_size_in_bytes:
        $ref: '#/definitions/long'
      overhead:
        $ref: '#/definitions/float'
      tripped:
        $ref: '#/definitions/float'
  CPUStats:
    type: object
    properties:
      load_average:
        $ref: '#/definitions/LoadAverageStats'
      percent:
        $ref: '#/definitions/float'
  DataPathStats:
    type: object
    properties:
      path:
        type: string
      mount:
        type: string
      type:
        type: string
      total:
        type: string
      total_in_bytes:
        $ref: '#/definitions/long'
      free:
        type: string
      free_in_bytes:
        $ref: '#/definitions/long'
      available:
        type: string
      available_in_bytes:
        $ref: '#/definitions/long'
      disk_reads:
        $ref: '#/definitions/long'
      disk_writes:
        $ref: '#/definitions/long'
      disk_read_size:
        type: string
      disk_read_size_in_bytes:
        $ref: '#/definitions/long'
      disk_write_size:
        type: string
      disk_write_size_in_bytes:
        $ref: '#/definitions/long'
      disk_queue:
        type: string
  ExtendedMemoryStats:
    type: object
    properties:
      free_percent:
        $ref: '#/definitions/integer'
      used_percent:
        $ref: '#/definitions/integer'
  FileSystemStats:
    type: object
    properties:
      timestamp:
        $ref: '#/definitions/long'
      total:
        $ref: '#/definitions/TotalFileSystemStats'
      data:
        type: array
        items:
          $ref: '#/definitions/DataPathStats'
  GarbageCollectionGenerationStats:
    type: object
    properties:
      collection_count:
        $ref: '#/definitions/long'
      collection_time:
        type: string
      collection_time_in_millis:
        $ref: '#/definitions/long'
  GarbageCollectionStats:
    type: object
    properties:
      collectors:
        type: object
        additionalProperties:
          $ref: '#/definitions/GarbageCollectionGenerationStats'
  HttpStats:
    type: object
    properties:
      current_open:
        $ref: '#/definitions/integer'
      total_opened:
        $ref: '#/definitions/long'
  JVMPool:
    type: object
    properties:
      used:
        type: string
      used_in_bytes:
        $ref: '#/definitions/long'
      max:
        type: string
      max_in_bytes:
        $ref: '#/definitions/long'
      peak_used:
        type: string
      peak_used_in_bytes:
        $ref: '#/definitions/long'
      peak_max:
        type: string
      peak_max_in_bytes:
        $ref: '#/definitions/long'
  JvmClassesStats:
    type: object
    properties:
      current_loaded_count:
        $ref: '#/definitions/long'
      total_loaded_count:
        $ref: '#/definitions/long'
      total_unloaded_count:
        $ref: '#/definitions/long'
  LoadAverageStats:
    type: object
    properties:
      1m:
        $ref: '#/definitions/float'
      5m:
        $ref: '#/definitions/float'
      15m:
        $ref: '#/definitions/float'
  MemoryStats:
    type: object
    properties:
      total:
        type: string
      total_in_bytes:
        $ref: '#/definitions/long'
      free:
        type: string
      free_in_bytes:
        $ref: '#/definitions/long'
      used:
        type: string
      used_in_bytes:
        $ref: '#/definitions/long'
  NodeBufferPool:
    type: object
    properties:
      count:
        $ref: '#/definitions/long'
      used:
        type: string
      used_in_bytes:
        $ref: '#/definitions/long'
      total_capacity:
        type: string
      total_capacity_in_bytes:
        $ref: '#/definitions/long'
  NodeJvmStats:
    type: object
    properties:
      timestamp:
        $ref: '#/definitions/long'
      uptime:
        type: string
      uptime_in_millis:
        $ref: '#/definitions/long'
      mem:
        $ref: '#/definitions/MemoryStats'
      threads:
        $ref: '#/definitions/ThreadStats'
      gc:
        $ref: '#/definitions/GarbageCollectionStats'
      buffer_pools:
        type: object
        additionalProperties:
          $ref: '#/definitions/NodeBufferPool'
      classes:
        $ref: '#/definitions/JvmClassesStats'
  NodeStats:
    type: object
    properties:
      timestamp:
        $ref: '#/definitions/long'
      name:
        type: string
      transport_address:
        type: string
      host:
        type: string
      ip:
        type: object
        description: Unknown InstanceOf
      roles:
        type: array
        items:
          $ref: '#/definitions/NodeRole'
      indices:
        $ref: '#/definitions/IndexStats'
      os:
        $ref: '#/definitions/OperatingSystemStats'
      process:
        $ref: '#/definitions/ProcessStats'
      script:
        $ref: '#/definitions/ScriptStats'
      jvm:
        $ref: '#/definitions/NodeJvmStats'
      thread_pool:
        type: object
        additionalProperties:
          $ref: '#/definitions/ThreadCountStats'
      breakers:
        type: object
        additionalProperties:
          $ref: '#/definitions/BreakerStats'
      fs:
        $ref: '#/definitions/FileSystemStats'
      transport:
        $ref: '#/definitions/TransportStats'
      http:
        $ref: '#/definitions/HttpStats'
  NodesStatsRequest:
    type: object
    properties:
      completion_fields:
        type: array
        items:
          $ref: '#/definitions/Field'
      fielddata_fields:
        type: array
        items:
          $ref: '#/definitions/Field'
      fields:
        type: array
        items:
          $ref: '#/definitions/Field'
      groups:
        type: boolean
      level:
        $ref: '#/definitions/Level'
      types:
        type: array
        items:
          type: string
      timeout:
        $ref: '#/definitions/Time'
      include_segment_file_sizes:
        type: boolean
  NodesStatsResponse:
    type: object
    properties:
      cluster_name:
        type: string
      nodes:
        type: object
        additionalProperties:
          $ref: '#/definitions/NodeStats'
  OperatingSystemStats:
    type: object
    properties:
      timestamp:
        $ref: '#/definitions/long'
      mem:
        $ref: '#/definitions/ExtendedMemoryStats'
      swap:
        $ref: '#/definitions/MemoryStats'
      cpu:
        $ref: '#/definitions/CPUStats'
  ProcessStats:
    type: object
    properties:
      timestamp:
        $ref: '#/definitions/long'
      open_file_descriptors:
        $ref: '#/definitions/integer'
      cpu:
        $ref: '#/definitions/CPUStats'
      mem:
        $ref: '#/definitions/MemoryStats'
  ScriptStats:
    type: object
    properties:
      cache_evictions:
        $ref: '#/definitions/long'
      compilations:
        $ref: '#/definitions/long'
  ThreadCountStats:
    type: object
    properties:
      threads:
        $ref: '#/definitions/long'
      queue:
        $ref: '#/definitions/long'
      active:
        $ref: '#/definitions/long'
      rejected:
        $ref: '#/definitions/long'
      largest:
        $ref: '#/definitions/long'
      completed:
        $ref: '#/definitions/long'
  ThreadStats:
    type: object
    properties:
      count:
        $ref: '#/definitions/long'
      peak_count:
        $ref: '#/definitions/long'
  TotalFileSystemStats:
    type: object
    properties:
      available:
        type: string
      available_in_bytes:
        $ref: '#/definitions/long'
      free:
        type: string
      free_in_bytes:
        $ref: '#/definitions/long'
      total:
        type: string
      total_in_bytes:
        $ref: '#/definitions/long'
  TransportStats:
    type: object
    properties:
      server_open:
        $ref: '#/definitions/integer'
      rx_count:
        $ref: '#/definitions/long'
      rx_size:
        type: string
      rx_size_in_bytes:
        $ref: '#/definitions/long'
      tx_count:
        $ref: '#/definitions/long'
      tx_size:
        type: string
      tx_size_in_bytes:
        $ref: '#/definitions/long'
  NodeUsageInformation:
    type: object
    properties:
      timestamp:
        $ref: '#/definitions/Date'
      since:
        $ref: '#/definitions/Date'
      rest_actions:
        type: object
        additionalProperties:
          $ref: '#/definitions/integer'
  NodesUsageRequest:
    type: object
    properties:
      timeout:
        $ref: '#/definitions/Time'
  NodesUsageResponse:
    type: object
    properties:
      cluster_name:
        type: string
      nodes:
        type: object
        additionalProperties:
          $ref: '#/definitions/NodeUsageInformation'
  PingRequest:
    type: object
    properties: {}
  PingResponse:
    type: object
    properties: {}
  RemoteInfo:
    type: object
    properties:
      connected:
        type: boolean
      num_nodes_connected:
        $ref: '#/definitions/long'
      max_connections_per_cluster:
        $ref: '#/definitions/integer'
      initial_connect_timeout:
        $ref: '#/definitions/Time'
      seeds:
        type: array
        items:
          type: string
      http_addresses:
        type: array
        items:
          type: string
  RemoteInfoRequest:
    type: object
    properties: {}
  RemoteInfoResponse:
    type: object
    properties:
      remotes:
        type: object
        additionalProperties:
          $ref: '#/definitions/RemoteInfo'
  RootNodeInfoRequest:
    type: object
    properties: {}
  RootNodeInfoResponse:
    type: object
    properties:
      name:
        type: string
      tagline:
        type: string
      version:
        $ref: '#/definitions/ElasticsearchVersionInfo'
  CancelTasksRequest:
    type: object
    properties:
      nodes:
        type: array
        items:
          type: string
      actions:
        type: array
        items:
          type: string
      parent_node:
        type: string
      parent_task_id:
        type: string
  CancelTasksResponse:
    type: object
    properties:
      is_valid:
        type: boolean
      nodes:
        type: object
        additionalProperties:
          $ref: '#/definitions/TaskExecutingNode'
      node_failures:
        type: array
        items:
          $ref: '#/definitions/ErrorCause'
  GetTaskRequest:
    type: object
    properties:
      wait_for_completion:
        type: boolean
  GetTaskResponse:
    type: object
    properties:
      completed:
        type: boolean
      task:
        $ref: '#/definitions/TaskInfo'
  TaskInfo:
    type: object
    properties:
      node:
        type: string
      id:
        $ref: '#/definitions/long'
      type:
        type: string
      action:
        type: string
      status:
        $ref: '#/definitions/TaskStatus'
      description:
        type: string
      start_time_in_millis:
        $ref: '#/definitions/long'
      running_time_in_nanos:
        $ref: '#/definitions/long'
      cancellable:
        type: boolean
  ListTasksRequest:
    type: object
    properties:
      nodes:
        type: array
        items:
          type: string
      actions:
        type: array
        items:
          type: string
      detailed:
        type: boolean
      parent_node:
        type: string
      parent_task_id:
        type: string
      wait_for_completion:
        type: boolean
      group_by:
        $ref: '#/definitions/GroupBy'
  ListTasksResponse:
    type: object
    properties:
      is_valid:
        type: boolean
      nodes:
        type: object
        additionalProperties:
          $ref: '#/definitions/TaskExecutingNode'
      node_failures:
        type: array
        items:
          $ref: '#/definitions/ErrorCause'
  TaskExecutingNode:
    type: object
    properties:
      name:
        type: string
      transport_address:
        type: string
      host:
        type: string
      ip:
        type: string
      tasks:
        type: object
        additionalProperties:
          $ref: '#/definitions/TaskState'
  TaskRetries:
    type: object
    properties:
      bulk:
        $ref: '#/definitions/integer'
      search:
        $ref: '#/definitions/integer'
  TaskState:
    type: object
    properties:
      node:
        type: string
      id:
        $ref: '#/definitions/long'
      type:
        type: string
      action:
        type: string
      status:
        $ref: '#/definitions/TaskStatus'
      description:
        type: string
      start_time_in_millis:
        $ref: '#/definitions/long'
      running_time_in_nanos:
        $ref: '#/definitions/long'
      parent_task_id:
        $ref: '#/definitions/TaskId'
  TaskStatus:
    type: object
    properties:
      total:
        $ref: '#/definitions/long'
      updated:
        $ref: '#/definitions/long'
      created:
        $ref: '#/definitions/long'
      deleted:
        $ref: '#/definitions/long'
      batches:
        $ref: '#/definitions/long'
      version_conflicts:
        $ref: '#/definitions/long'
      noops:
        $ref: '#/definitions/long'
      retries:
        $ref: '#/definitions/TaskRetries'
      throttled_millis:
        $ref: '#/definitions/long'
      requests_per_second:
        $ref: '#/definitions/long'
      throttled_until_millis:
        $ref: '#/definitions/long'
  BasicAuthenticationCredentials:
    type: object
    properties:
      username:
        type: string
      password:
        type: string
  Dictionary:
    type: object
    properties:
      key:
        $ref: '#/definitions/TKey'
      value:
        $ref: '#/definitions/TValue'
  ElasticsearchResponse:
    type: object
    properties: {}
  ErrorCause:
    type: object
    properties:
      reason:
        type: string
      type:
        type: string
      caused_by:
        $ref: '#/definitions/ErrorCause'
      stack_trace:
        type: string
      metadata:
        $ref: '#/definitions/ErrorCauseMetadata'
  ErrorCauseMetadata:
    type: object
    properties:
      licensed_expired_feature:
        type: string
      index:
        type: string
      index_u_u_i_d:
        type: string
      resource_type:
        type: string
      resource_id:
        type: array
        items:
          type: string
      shard:
        $ref: '#/definitions/integer'
      failed_shards:
        type: array
        items:
          $ref: '#/definitions/ShardFailure'
      line:
        $ref: '#/definitions/integer'
      column:
        $ref: '#/definitions/integer'
      bytes_wanted:
        $ref: '#/definitions/long'
      bytes_limit:
        $ref: '#/definitions/long'
      phase:
        type: string
      grouped:
        type: boolean
      script_stack:
        type: array
        items:
          type: string
      script:
        type: string
      language:
        type: string
  IpRange:
    type: object
    properties:
      from:
        type: string
      to:
        type: string
      mask:
        type: string
  MainError:
    type: object
    properties:
      root_cause:
        type: array
        items:
          $ref: '#/definitions/ErrorCause'
      headers:
        type: object
        additionalProperties:
          type: string
  RequestConfiguration:
    type: object
    properties:
      request_timeout:
        $ref: '#/definitions/TimeSpan'
      ping_timeout:
        $ref: '#/definitions/TimeSpan'
      content_type:
        type: string
      accept:
        type: string
      max_retries:
        $ref: '#/definitions/integer'
      force_node:
        $ref: '#/definitions/Uri'
      disable_sniff:
        type: boolean
      disable_ping:
        type: boolean
      disable_direct_streaming:
        type: boolean
      allowed_status_codes:
        type: array
        items:
          $ref: '#/definitions/integer'
      basic_authentication_credentials:
        $ref: '#/definitions/BasicAuthenticationCredentials'
      enable_http_pipelining:
        type: boolean
      run_as:
        type: string
      client_certificates:
        $ref: '#/definitions/object'
      throw_exceptions:
        type: boolean
  ServerError:
    type: object
    properties:
      error:
        $ref: '#/definitions/MainError'
      status:
        $ref: '#/definitions/integer'
  ShardFailure:
    type: object
    properties:
      reason:
        $ref: '#/definitions/ErrorCause'
      shard:
        $ref: '#/definitions/integer'
      index:
        type: string
      node:
        type: string
      status:
        type: string
  SignificantTermsIncludeExclude:
    type: object
    properties:
      pattern:
        type: string
      values:
        type: array
        items:
          type: string
  UrlParameter:
    type: object
    properties: {}
  Descriptor:
    type: object
    properties: {}
  ActionIds:
    type: string
    format: ActionIds
  CategoryId:
    type: string
    format: CategoryId
  Field:
    type: string
    format: Field
  Id:
    type: string
    format: Id
  IndexName:
    type: string
    format: IndexName
  Indices:
    type: string
    format: Indices
  Routing:
    type: string
    format: Routing
  IndexMetrics:
    type: string
    format: IndexMetrics
  Metrics:
    type: string
    format: Metrics
  Name:
    type: string
    format: Name
  Names:
    type: string
    format: Names
  NodeIds:
    type: string
    format: NodeIds
  PropertyName:
    type: string
    format: PropertyName
  RelationName:
    type: string
    format: RelationName
  TaskId:
    type: string
    format: TaskId
  TypeName:
    type: string
    format: TypeName
  Types:
    type: string
    format: Types
  LazyDocument:
    type: object
    properties: {}
  IRequest:
    type: object
    properties:
      http_method:
        $ref: '#/definitions/HttpMethod'
      route_values:
        $ref: '#/definitions/RouteValues'
  PlainRequestBase:
    type: object
    properties:
      request_configuration:
        $ref: '#/definitions/RequestConfiguration'
      pretty:
        type: boolean
      human:
        type: boolean
      error_trace:
        type: boolean
      filter_path:
        type: array
        items:
          type: string
  RequestBase:
    type: object
    properties: {}
  RouteValues:
    type: object
    properties:
      index:
        type: string
      type:
        type: string
      id:
        type: string
      name:
        type: string
      field:
        type: string
      scroll_id:
        type: string
      node_id:
        type: string
      fields:
        type: string
      repository:
        type: string
      snapshot:
        type: string
      feature:
        type: string
      metric:
        type: string
      index_metric:
        type: string
      lang:
        type: string
      task_id:
        type: string
      realms:
        type: string
      username:
        type: string
      target:
        type: string
      new_index:
        type: string
      alias:
        type: string
      watch_id:
        type: string
      thread_pool_patterns:
        type: string
      action_id:
        type: string
      job_id:
        type: string
      datafeed_id:
        type: string
      filter_id:
        type: string
      snapshot_id:
        type: string
      category_id:
        type: string
      timestamp:
        type: string
      context:
        type: string
      watcher_stats_metric:
        $ref: '#/definitions/WatcherStatsMetric'
  AcknowledgedResponseBase:
    type: object
    properties:
      acknowledged:
        type: boolean
  DictionaryResponseBase:
    type: object
    properties: {}
  ElasticsearchVersionInfo:
    type: object
    properties:
      number:
        type: string
      snapshot_build:
        type: boolean
      lucene_version:
        type: string
  IResponse:
    type: object
    properties:
      server_error:
        $ref: '#/definitions/ServerError'
  IndicesResponseBase:
    type: object
    properties:
      acknowledged:
        type: boolean
      _shards:
        $ref: '#/definitions/ShardStatistics'
  ResponseBase:
    type: object
    properties:
      server_error:
        $ref: '#/definitions/ServerError'
      is_valid:
        type: boolean
      debug_information:
        type: string
  ShardsOperationResponseBase:
    type: object
    properties:
      _shards:
        $ref: '#/definitions/ShardStatistics'
  Union:
    type: object
    properties: {}
  DateMath:
    type: string
    format: DateMath
  DateMathExpression:
    type: string
    format: DateMathExpression
  DateMathTime:
    type: object
    properties:
      factor:
        $ref: '#/definitions/integer'
      interval:
        $ref: '#/definitions/DateMathTimeUnit'
  BulkError:
    type: object
    properties:
      index:
        type: string
      shard:
        $ref: '#/definitions/integer'
  Fuzziness:
    type: object
    properties:
      auto:
        type: boolean
      edit_distance:
        $ref: '#/definitions/integer'
      ratio:
        $ref: '#/definitions/double'
  Distance:
    type: object
    properties:
      precision:
        $ref: '#/definitions/double'
      unit:
        $ref: '#/definitions/DistanceUnit'
  ShardStatistics:
    type: object
    properties:
      total:
        $ref: '#/definitions/integer'
      successful:
        $ref: '#/definitions/integer'
      failed:
        $ref: '#/definitions/integer'
      failures:
        type: array
        items:
          $ref: '#/definitions/ShardFailure'
  MinimumShouldMatch:
    type: object
    properties: {}
  AggregationRange:
    type: object
    properties:
      from:
        $ref: '#/definitions/double'
      to:
        $ref: '#/definitions/double'
      key:
        type: string
  Script:
    type: object
    properties:
      params:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
      lang:
        type: string
  ScriptField:
    type: object
    properties:
      script:
        $ref: '#/definitions/Script'
  CompletionStats:
    type: object
    properties:
      size:
        type: string
      size_in_bytes:
        $ref: '#/definitions/long'
  DocStats:
    type: object
    properties:
      count:
        $ref: '#/definitions/long'
      deleted:
        $ref: '#/definitions/long'
  FielddataStats:
    type: object
    properties:
      evictions:
        $ref: '#/definitions/long'
      memory_size:
        type: string
      memory_size_in_bytes:
        $ref: '#/definitions/long'
  FlushStats:
    type: object
    properties:
      total:
        $ref: '#/definitions/long'
      total_time:
        type: string
      total_time_in_millis:
        $ref: '#/definitions/long'
  GetStats:
    type: object
    properties:
      current:
        $ref: '#/definitions/long'
      exists_time:
        type: string
      exists_time_in_millis:
        $ref: '#/definitions/long'
      exists_total:
        $ref: '#/definitions/long'
      missing_time:
        type: string
      missing_time_in_millis:
        $ref: '#/definitions/long'
      missing_total:
        $ref: '#/definitions/long'
      time:
        type: string
      time_in_millis:
        $ref: '#/definitions/long'
      total:
        $ref: '#/definitions/long'
  IndexingStats:
    type: object
    properties:
      delete_current:
        $ref: '#/definitions/long'
      delete_time:
        type: string
      delete_time_in_millis:
        $ref: '#/definitions/long'
      delete_total:
        $ref: '#/definitions/long'
      index_current:
        $ref: '#/definitions/long'
      index_time:
        type: string
      index_time_in_millis:
        $ref: '#/definitions/long'
      index_total:
        $ref: '#/definitions/long'
      is_throttled:
        type: boolean
      noop_update_total:
        $ref: '#/definitions/long'
      throttle_time:
        type: string
      throttle_time_in_millis:
        $ref: '#/definitions/long'
      types:
        type: object
        additionalProperties:
          $ref: '#/definitions/IndexingStats'
  MergesStats:
    type: object
    properties:
      current:
        $ref: '#/definitions/long'
      current_docs:
        $ref: '#/definitions/long'
      current_size:
        type: string
      current_size_in_bytes:
        $ref: '#/definitions/long'
      total:
        $ref: '#/definitions/long'
      total_auto_throttle:
        type: string
      total_auto_throttle_in_bytes:
        $ref: '#/definitions/long'
      total_docs:
        $ref: '#/definitions/long'
      total_size:
        type: string
      total_size_in_bytes:
        type: string
      total_stopped_time:
        type: string
      total__stopped_time_in_millis:
        $ref: '#/definitions/long'
      total_throttled_time:
        type: string
      total_throttled_time_in_millis:
        $ref: '#/definitions/long'
      total_time:
        type: string
      total_time_in_millis:
        $ref: '#/definitions/long'
  PluginStats:
    type: object
    properties:
      name:
        type: string
      version:
        type: string
      description:
        type: string
      classname:
        type: string
      jvm:
        type: boolean
      isolated:
        type: boolean
      site:
        type: boolean
  QueryCacheStats:
    type: object
    properties:
      memory_size:
        type: string
      memory_size_in_bytes:
        $ref: '#/definitions/long'
      total_count:
        $ref: '#/definitions/long'
      hit_count:
        $ref: '#/definitions/long'
      miss_count:
        $ref: '#/definitions/long'
      cache_size:
        $ref: '#/definitions/long'
      cache_count:
        $ref: '#/definitions/long'
      evictions:
        $ref: '#/definitions/long'
  RecoveryStats:
    type: object
    properties:
      current_as_source:
        $ref: '#/definitions/long'
      current_as_target:
        $ref: '#/definitions/long'
      throttle_time:
        type: string
      throttle_time_in_millis:
        $ref: '#/definitions/long'
  RefreshStats:
    type: object
    properties:
      total:
        $ref: '#/definitions/long'
      total_time:
        type: string
      total_time_in_millis:
        $ref: '#/definitions/long'
  RequestCacheStats:
    type: object
    properties:
      evictions:
        $ref: '#/definitions/long'
      hit_count:
        $ref: '#/definitions/long'
      memory_size:
        type: string
      memory_size_in_bytes:
        $ref: '#/definitions/long'
      miss_count:
        $ref: '#/definitions/long'
  SearchStats:
    type: object
    properties:
      open_contexts:
        $ref: '#/definitions/long'
      fetch_current:
        $ref: '#/definitions/long'
      fetch_time_in_millis:
        $ref: '#/definitions/long'
      fetch_total:
        $ref: '#/definitions/long'
      query_current:
        $ref: '#/definitions/long'
      query_time_in_millis:
        $ref: '#/definitions/long'
      query_total:
        $ref: '#/definitions/long'
      scroll_current:
        $ref: '#/definitions/long'
      scroll_time_in_millis:
        $ref: '#/definitions/long'
      scroll_total:
        $ref: '#/definitions/long'
      suggest_current:
        $ref: '#/definitions/long'
      suggest_time_in_millis:
        $ref: '#/definitions/long'
      suggest_total:
        $ref: '#/definitions/long'
  SegmentsStats:
    type: object
    properties:
      count:
        $ref: '#/definitions/long'
      doc_values_memory:
        type: string
      doc_values_memory_in_bytes:
        $ref: '#/definitions/long'
      fixed_bit_set_memory:
        type: string
      fixed_bit_set_memory_in_bytes:
        $ref: '#/definitions/long'
      index_writer_max_memory:
        type: string
      index_writer_max_memory_in_bytes:
        $ref: '#/definitions/long'
      index_writer_memory:
        type: string
      index_writer_memory_in_bytes:
        $ref: '#/definitions/long'
      memory:
        type: string
      memory_in_bytes:
        $ref: '#/definitions/long'
      norms_memory:
        type: string
      norms_memory_in_bytes:
        $ref: '#/definitions/long'
      points_memory:
        type: string
      points_memory_in_bytes:
        $ref: '#/definitions/long'
      stored_fields_memory:
        type: string
      stored_fields_memory_in_bytes:
        $ref: '#/definitions/long'
      term_vectors_memory:
        type: string
      term_vectors_memory_in_bytes:
        $ref: '#/definitions/long'
      terms_memory:
        type: string
      terms_memory_in_bytes:
        $ref: '#/definitions/long'
      version_map_memory:
        type: string
      version_map_memory_in_bytes:
        $ref: '#/definitions/long'
  StoreStats:
    type: object
    properties:
      size:
        type: string
      size_in_bytes:
        $ref: '#/definitions/double'
  TranslogStats:
    type: object
    properties:
      operations:
        $ref: '#/definitions/long'
      size:
        type: string
      size_in_bytes:
        $ref: '#/definitions/long'
  WarmerStats:
    type: object
    properties:
      current:
        $ref: '#/definitions/long'
      total:
        $ref: '#/definitions/long'
      total_time:
        type: string
      total_time_in_millis:
        $ref: '#/definitions/long'
  Time:
    type: object
    properties:
      factor:
        $ref: '#/definitions/double'
      interval:
        $ref: '#/definitions/TimeUnit'
      milliseconds:
        $ref: '#/definitions/double'
      minus_one:
        $ref: '#/definitions/Time'
      zero:
        $ref: '#/definitions/Time'
  BulkIndexByScrollFailure:
    type: object
    properties:
      index:
        type: string
      type:
        type: string
      id:
        type: string
      cause:
        $ref: '#/definitions/BulkIndexFailureCause'
      status:
        $ref: '#/definitions/integer'
  BulkIndexFailureCause:
    type: object
    properties:
      index_unique_id:
        type: string
      shard:
        $ref: '#/definitions/integer'
      index:
        type: string
  Retries:
    type: object
    properties:
      bulk:
        $ref: '#/definitions/long'
      search:
        $ref: '#/definitions/long'
  BulkRequest:
    type: object
    properties:
      operations:
        type: array
        items:
          $ref: '#/definitions/BulkOperation'
      wait_for_active_shards:
        type: string
      refresh:
        $ref: '#/definitions/Refresh'
      routing:
        $ref: '#/definitions/Routing'
      timeout:
        $ref: '#/definitions/Time'
      fields:
        type: array
        items:
          $ref: '#/definitions/Field'
      source_enabled:
        type: boolean
      source_exclude:
        type: array
        items:
          $ref: '#/definitions/Field'
      source_include:
        type: array
        items:
          $ref: '#/definitions/Field'
      pipeline:
        type: string
  BulkResponse:
    type: object
    properties:
      is_valid:
        type: boolean
      took:
        $ref: '#/definitions/long'
      errors:
        type: boolean
      items:
        type: array
        items:
          $ref: '#/definitions/BulkResponseItem'
      items_with_errors:
        type: array
        items:
          $ref: '#/definitions/BulkResponseItem'
  BulkOperation:
    type: object
    properties:
      operation:
        type: string
      _index:
        $ref: '#/definitions/IndexName'
      _type:
        $ref: '#/definitions/TypeName'
      _id:
        $ref: '#/definitions/Id'
      version:
        $ref: '#/definitions/long'
      version_type:
        $ref: '#/definitions/VersionType'
      routing:
        $ref: '#/definitions/Routing'
      parent:
        $ref: '#/definitions/Id'
      retry_on_conflict:
        $ref: '#/definitions/integer'
  BulkResponseItem:
    type: object
    properties:
      operation:
        type: string
      _index:
        type: string
      _type:
        type: string
      _id:
        type: string
      _version:
        $ref: '#/definitions/long'
      status:
        $ref: '#/definitions/integer'
      error:
        $ref: '#/definitions/BulkError'
      _shards:
        $ref: '#/definitions/ShardStatistics'
      _seq_no:
        $ref: '#/definitions/long'
      _primary_term:
        $ref: '#/definitions/long'
      is_valid:
        type: boolean
  DeleteByQueryRequest:
    type: object
    properties:
      query:
        $ref: '#/definitions/QueryContainer'
      slice:
        $ref: '#/definitions/SlicedScroll'
      analyzer:
        type: string
      analyze_wildcard:
        type: boolean
      default_operator:
        $ref: '#/definitions/DefaultOperator'
      df:
        type: string
      from:
        $ref: '#/definitions/long'
      ignore_unavailable:
        type: boolean
      allow_no_indices:
        type: boolean
      conflicts:
        $ref: '#/definitions/Conflicts'
      expand_wildcards:
        $ref: '#/definitions/ExpandWildcards'
      lenient:
        type: boolean
      preference:
        type: string
      query_on_query_string:
        type: string
      routing:
        $ref: '#/definitions/Routing'
      scroll:
        $ref: '#/definitions/Time'
      search_type:
        $ref: '#/definitions/SearchType'
      search_timeout:
        $ref: '#/definitions/Time'
      size:
        $ref: '#/definitions/long'
      sort:
        type: array
        items:
          type: string
      source_enabled:
        type: boolean
      source_exclude:
        type: array
        items:
          $ref: '#/definitions/Field'
      source_include:
        type: array
        items:
          $ref: '#/definitions/Field'
      terminate_after:
        $ref: '#/definitions/long'
      stats:
        type: array
        items:
          type: string
      version:
        type: boolean
      request_cache:
        type: boolean
      refresh:
        type: boolean
      timeout:
        $ref: '#/definitions/Time'
      wait_for_active_shards:
        type: string
      scroll_size:
        $ref: '#/definitions/long'
      wait_for_completion:
        type: boolean
      requests_per_second:
        $ref: '#/definitions/long'
      slices:
        $ref: '#/definitions/long'
  DeleteByQueryResponse:
    type: object
    properties:
      is_valid:
        type: boolean
      took:
        $ref: '#/definitions/long'
      task:
        $ref: '#/definitions/TaskId'
      timed_out:
        type: boolean
      slice_id:
        $ref: '#/definitions/integer'
      deleted:
        $ref: '#/definitions/long'
      batches:
        $ref: '#/definitions/long'
      version_conflicts:
        $ref: '#/definitions/long'
      noops:
        $ref: '#/definitions/long'
      retries:
        $ref: '#/definitions/Retries'
      throttled_millis:
        $ref: '#/definitions/long'
      requests_per_second:
        $ref: '#/definitions/float'
      throttled_until_millis:
        $ref: '#/definitions/long'
      total:
        $ref: '#/definitions/long'
      failures:
        type: array
        items:
          $ref: '#/definitions/BulkIndexByScrollFailure'
  MultiGetOperation:
    type: object
    properties:
      _index:
        $ref: '#/definitions/IndexName'
      _type:
        $ref: '#/definitions/TypeName'
      _id:
        $ref: '#/definitions/Id'
      stored_fields:
        type: array
        items:
          $ref: '#/definitions/Field'
      routing:
        type: string
      _source:
        description: 'Not an array but: union<boolean, SourceFilter>'
        type: array
        items:
          - type: boolean
          - $ref: '#/definitions/SourceFilter'
      version:
        $ref: '#/definitions/long'
      version_type:
        $ref: '#/definitions/VersionType'
      can_be_flattened:
        type: boolean
  MultiGetRequest:
    type: object
    properties:
      stored_fields:
        type: array
        items:
          $ref: '#/definitions/Field'
      docs:
        type: array
        items:
          $ref: '#/definitions/MultiGetOperation'
      preference:
        type: string
      realtime:
        type: boolean
      refresh:
        type: boolean
      routing:
        $ref: '#/definitions/Routing'
      source_enabled:
        type: boolean
      source_exclude:
        type: array
        items:
          $ref: '#/definitions/Field'
      source_include:
        type: array
        items:
          $ref: '#/definitions/Field'
  MultiGetHit:
    type: object
    properties:
      source:
        $ref: '#/definitions/TDocument'
      index:
        type: string
      found:
        type: boolean
      type:
        type: string
      version:
        $ref: '#/definitions/long'
      id:
        type: string
      parent:
        type: string
      routing:
        type: string
      error:
        $ref: '#/definitions/MainError'
  MultiGetResponse:
    type: object
    properties:
      is_valid:
        type: boolean
      hits:
        type: array
        items:
          $ref: '#/definitions/MultiGetHit<any>'
  MultiTermVectorOperation:
    type: object
    properties:
      _index:
        $ref: '#/definitions/IndexName'
      _type:
        $ref: '#/definitions/TypeName'
      _id:
        $ref: '#/definitions/Id'
      doc:
        $ref: '#/definitions/object'
      fields:
        type: array
        items:
          $ref: '#/definitions/Field'
      offsets:
        type: boolean
      payloads:
        type: boolean
      positions:
        type: boolean
      term_statistics:
        type: boolean
      field_statistics:
        type: boolean
      filter:
        $ref: '#/definitions/TermVectorFilter'
      version:
        $ref: '#/definitions/long'
      version_type:
        $ref: '#/definitions/VersionType'
      routing:
        $ref: '#/definitions/Routing'
  MultiTermVectorsRequest:
    type: object
    properties:
      docs:
        type: array
        items:
          $ref: '#/definitions/MultiTermVectorOperation'
      term_statistics:
        type: boolean
      field_statistics:
        type: boolean
      fields:
        type: array
        items:
          $ref: '#/definitions/Field'
      offsets:
        type: boolean
      positions:
        type: boolean
      payloads:
        type: boolean
      preference:
        type: string
      routing:
        $ref: '#/definitions/Routing'
      parent:
        type: string
      realtime:
        type: boolean
      version:
        $ref: '#/definitions/long'
      version_type:
        $ref: '#/definitions/VersionType'
  MultiTermVectorsResponse:
    type: object
    properties:
      docs:
        type: array
        items:
          $ref: '#/definitions/TermVectors'
  ReindexDestination:
    type: object
    properties:
      index:
        $ref: '#/definitions/IndexName'
      type:
        $ref: '#/definitions/TypeName'
      routing:
        $ref: '#/definitions/ReindexRouting'
      op_type:
        $ref: '#/definitions/OpType'
      version_type:
        $ref: '#/definitions/VersionType'
  ReindexOnServerRequest:
    type: object
    properties:
      source:
        $ref: '#/definitions/ReindexSource'
      dest:
        $ref: '#/definitions/ReindexDestination'
      script:
        $ref: '#/definitions/Script'
      size:
        $ref: '#/definitions/long'
      conflicts:
        $ref: '#/definitions/Conflicts'
      refresh:
        type: boolean
      timeout:
        $ref: '#/definitions/Time'
      wait_for_active_shards:
        type: string
      wait_for_completion:
        type: boolean
      requests_per_second:
        $ref: '#/definitions/long'
      slices:
        $ref: '#/definitions/long'
  ReindexOnServerResponse:
    type: object
    properties:
      is_valid:
        type: boolean
      took:
        $ref: '#/definitions/Time'
      task:
        $ref: '#/definitions/TaskId'
      timed_out:
        type: boolean
      total:
        $ref: '#/definitions/long'
      created:
        $ref: '#/definitions/long'
      updated:
        $ref: '#/definitions/long'
      batches:
        $ref: '#/definitions/long'
      version_conflicts:
        $ref: '#/definitions/long'
      noops:
        $ref: '#/definitions/long'
      retries:
        $ref: '#/definitions/Retries'
      failures:
        type: array
        items:
          $ref: '#/definitions/BulkIndexByScrollFailure'
  ReindexRouting:
    type: object
    properties: {}
  ReindexSource:
    type: object
    properties:
      query:
        $ref: '#/definitions/QueryContainer'
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      index:
        $ref: '#/definitions/Indices'
      type:
        $ref: '#/definitions/Types'
      size:
        $ref: '#/definitions/integer'
      remote:
        $ref: '#/definitions/RemoteSource'
  RemoteSource:
    type: object
    properties:
      host:
        $ref: '#/definitions/Uri'
      username:
        type: string
      password:
        type: string
  ReindexNode:
    type: object
    properties:
      name:
        type: string
      transport_address:
        type: string
      host:
        type: string
      ip:
        type: string
      roles:
        type: array
        items:
          type: string
      attributes:
        type: object
        additionalProperties:
          type: string
      tasks:
        type: object
        additionalProperties:
          $ref: '#/definitions/ReindexTask'
  ReindexRethrottleRequest:
    type: object
    properties:
      requests_per_second:
        $ref: '#/definitions/long'
  ReindexRethrottleResponse:
    type: object
    properties:
      nodes:
        type: object
        additionalProperties:
          $ref: '#/definitions/ReindexNode'
  ReindexStatus:
    type: object
    properties:
      total:
        $ref: '#/definitions/long'
      updated:
        $ref: '#/definitions/long'
      created:
        $ref: '#/definitions/long'
      deleted:
        $ref: '#/definitions/long'
      batches:
        $ref: '#/definitions/long'
      version_conflicts:
        $ref: '#/definitions/long'
      noops:
        $ref: '#/definitions/long'
      retries:
        $ref: '#/definitions/Retries'
      throttled_millis:
        $ref: '#/definitions/long'
      requests_per_second:
        $ref: '#/definitions/float'
      throttled_until_millis:
        $ref: '#/definitions/long'
  ReindexTask:
    type: object
    properties:
      node:
        type: string
      id:
        $ref: '#/definitions/long'
      type:
        type: string
      action:
        type: string
      status:
        $ref: '#/definitions/ReindexStatus'
      description:
        type: string
      start_time_in_millis:
        $ref: '#/definitions/long'
      running_time_in_nanos:
        $ref: '#/definitions/long'
      cancellable:
        type: boolean
  UpdateByQueryRequest:
    type: object
    properties:
      query:
        $ref: '#/definitions/QueryContainer'
      script:
        $ref: '#/definitions/Script'
      analyzer:
        type: string
      analyze_wildcard:
        type: boolean
      default_operator:
        $ref: '#/definitions/DefaultOperator'
      df:
        type: string
      from:
        $ref: '#/definitions/long'
      ignore_unavailable:
        type: boolean
      allow_no_indices:
        type: boolean
      conflicts:
        $ref: '#/definitions/Conflicts'
      expand_wildcards:
        $ref: '#/definitions/ExpandWildcards'
      lenient:
        type: boolean
      pipeline:
        type: string
      preference:
        type: string
      query_on_query_string:
        type: string
      routing:
        $ref: '#/definitions/Routing'
      scroll:
        $ref: '#/definitions/Time'
      search_type:
        $ref: '#/definitions/SearchType'
      search_timeout:
        $ref: '#/definitions/Time'
      size:
        $ref: '#/definitions/long'
      sort:
        type: array
        items:
          type: string
      source_enabled:
        type: boolean
      source_exclude:
        type: array
        items:
          $ref: '#/definitions/Field'
      source_include:
        type: array
        items:
          $ref: '#/definitions/Field'
      terminate_after:
        $ref: '#/definitions/long'
      stats:
        type: array
        items:
          type: string
      version:
        type: boolean
      version_type:
        type: boolean
      request_cache:
        type: boolean
      refresh:
        type: boolean
      timeout:
        $ref: '#/definitions/Time'
      wait_for_active_shards:
        type: string
      scroll_size:
        $ref: '#/definitions/long'
      wait_for_completion:
        type: boolean
      requests_per_second:
        $ref: '#/definitions/long'
      slices:
        $ref: '#/definitions/long'
  UpdateByQueryResponse:
    type: object
    properties:
      is_valid:
        type: boolean
      took:
        $ref: '#/definitions/long'
      task:
        $ref: '#/definitions/TaskId'
      timed_out:
        type: boolean
      total:
        $ref: '#/definitions/long'
      updated:
        $ref: '#/definitions/long'
      batches:
        $ref: '#/definitions/long'
      version_conflicts:
        $ref: '#/definitions/long'
      noops:
        $ref: '#/definitions/long'
      retries:
        $ref: '#/definitions/Retries'
      failures:
        type: array
        items:
          $ref: '#/definitions/BulkIndexByScrollFailure'
      requests_per_second:
        $ref: '#/definitions/float'
  CreateRequest:
    type: object
    properties:
      document:
        $ref: '#/definitions/TDocument'
      wait_for_active_shards:
        type: string
      parent:
        type: string
      refresh:
        $ref: '#/definitions/Refresh'
      routing:
        $ref: '#/definitions/Routing'
      timeout:
        $ref: '#/definitions/Time'
      version:
        $ref: '#/definitions/long'
      version_type:
        $ref: '#/definitions/VersionType'
      pipeline:
        type: string
  CreateResponse:
    type: object
    properties:
      _index:
        type: string
      _type:
        type: string
      _id:
        type: string
      _version:
        $ref: '#/definitions/long'
      result:
        $ref: '#/definitions/Result'
      _shards:
        $ref: '#/definitions/ShardStatistics'
      _seq_no:
        $ref: '#/definitions/long'
      _primary_term:
        $ref: '#/definitions/long'
  DeleteRequest:
    type: object
    properties:
      wait_for_active_shards:
        type: string
      parent:
        type: string
      refresh:
        $ref: '#/definitions/Refresh'
      routing:
        $ref: '#/definitions/Routing'
      timeout:
        $ref: '#/definitions/Time'
      version:
        $ref: '#/definitions/long'
      version_type:
        $ref: '#/definitions/VersionType'
  DeleteResponse:
    type: object
    properties:
      _index:
        type: string
      _type:
        type: string
      _id:
        type: string
      _version:
        $ref: '#/definitions/long'
      result:
        $ref: '#/definitions/Result'
      _shards:
        $ref: '#/definitions/ShardStatistics'
      _seq_no:
        $ref: '#/definitions/long'
      _primary_term:
        $ref: '#/definitions/long'
  DocumentExistsRequest:
    type: object
    properties:
      stored_fields:
        type: array
        items:
          $ref: '#/definitions/Field'
      parent:
        type: string
      preference:
        type: string
      realtime:
        type: boolean
      refresh:
        type: boolean
      routing:
        $ref: '#/definitions/Routing'
      source_enabled:
        type: boolean
      source_exclude:
        type: array
        items:
          $ref: '#/definitions/Field'
      source_include:
        type: array
        items:
          $ref: '#/definitions/Field'
      version:
        $ref: '#/definitions/long'
      version_type:
        $ref: '#/definitions/VersionType'
  GetRequest:
    type: object
    properties:
      stored_fields:
        type: array
        items:
          $ref: '#/definitions/Field'
      parent:
        type: string
      preference:
        type: string
      realtime:
        type: boolean
      refresh:
        type: boolean
      routing:
        $ref: '#/definitions/Routing'
      source_enabled:
        type: boolean
      source_exclude:
        type: array
        items:
          $ref: '#/definitions/Field'
      source_include:
        type: array
        items:
          $ref: '#/definitions/Field'
      version:
        $ref: '#/definitions/long'
      version_type:
        $ref: '#/definitions/VersionType'
  GetResponse:
    type: object
    properties:
      _index:
        type: string
      _type:
        type: string
      _id:
        type: string
      _version:
        $ref: '#/definitions/long'
      found:
        type: boolean
      _source:
        $ref: '#/definitions/TDocument'
      fields:
        type: object
        additionalProperties:
          $ref: '#/definitions/LazyDocument'
      _parent:
        type: string
      _routing:
        type: string
  IndexRequest:
    type: object
    properties:
      document:
        $ref: '#/definitions/TDocument'
      wait_for_active_shards:
        type: string
      op_type:
        $ref: '#/definitions/OpType'
      parent:
        type: string
      refresh:
        $ref: '#/definitions/Refresh'
      routing:
        $ref: '#/definitions/Routing'
      timeout:
        $ref: '#/definitions/Time'
      version:
        $ref: '#/definitions/long'
      version_type:
        $ref: '#/definitions/VersionType'
      pipeline:
        type: string
  IndexResponse:
    type: object
    properties:
      _index:
        type: string
      _type:
        type: string
      _id:
        type: string
      _version:
        $ref: '#/definitions/long'
      result:
        $ref: '#/definitions/Result'
      _shards:
        $ref: '#/definitions/ShardStatistics'
      _seq_no:
        $ref: '#/definitions/long'
      _primary_term:
        $ref: '#/definitions/long'
  SourceRequest:
    type: object
    properties:
      parent:
        type: string
      preference:
        type: string
      realtime:
        type: boolean
      refresh:
        type: boolean
      routing:
        $ref: '#/definitions/Routing'
      source_enabled:
        type: boolean
      source_exclude:
        type: array
        items:
          $ref: '#/definitions/Field'
      source_include:
        type: array
        items:
          $ref: '#/definitions/Field'
      version:
        $ref: '#/definitions/long'
      version_type:
        $ref: '#/definitions/VersionType'
  SourceResponse:
    type: object
    properties:
      body:
        $ref: '#/definitions/T'
  SourceExistsRequest:
    type: object
    properties:
      parent:
        type: string
      preference:
        type: string
      realtime:
        type: boolean
      refresh:
        type: boolean
      routing:
        $ref: '#/definitions/Routing'
      source_enabled:
        type: boolean
      source_exclude:
        type: array
        items:
          $ref: '#/definitions/Field'
      source_include:
        type: array
        items:
          $ref: '#/definitions/Field'
      version:
        $ref: '#/definitions/long'
      version_type:
        $ref: '#/definitions/VersionType'
  FieldStatistics:
    type: object
    properties:
      doc_count:
        $ref: '#/definitions/integer'
      sum_doc_freq:
        $ref: '#/definitions/integer'
      sum_ttf:
        $ref: '#/definitions/integer'
  TermVector:
    type: object
    properties:
      field_statistics:
        $ref: '#/definitions/FieldStatistics'
      terms:
        type: object
        additionalProperties:
          $ref: '#/definitions/TermVectorTerm'
  TermVectorFilter:
    type: object
    properties:
      max_num_terms:
        $ref: '#/definitions/integer'
      min_term_freq:
        $ref: '#/definitions/integer'
      max_term_freq:
        $ref: '#/definitions/integer'
      min_doc_freq:
        $ref: '#/definitions/integer'
      max_doc_freq:
        $ref: '#/definitions/integer'
      min_word_length:
        $ref: '#/definitions/integer'
      max_word_length:
        $ref: '#/definitions/integer'
  TermVectorTerm:
    type: object
    properties:
      doc_freq:
        $ref: '#/definitions/integer'
      term_freq:
        $ref: '#/definitions/integer'
      tokens:
        type: array
        items:
          $ref: '#/definitions/Token'
      ttf:
        $ref: '#/definitions/integer'
  TermVectors:
    type: object
    properties:
      index:
        type: string
      type:
        type: string
      id:
        type: string
      version:
        $ref: '#/definitions/long'
      found:
        type: boolean
      took:
        $ref: '#/definitions/long'
      term_vectors:
        type: object
        additionalProperties:
          $ref: '#/definitions/TermVector'
  TermVectorsRequest:
    type: object
    properties:
      doc:
        $ref: '#/definitions/TDocument'
      per_field_analyzer:
        type: object
        additionalProperties:
          type: string
      filter:
        $ref: '#/definitions/TermVectorFilter'
      term_statistics:
        type: boolean
      field_statistics:
        type: boolean
      fields:
        type: array
        items:
          $ref: '#/definitions/Field'
      offsets:
        type: boolean
      positions:
        type: boolean
      payloads:
        type: boolean
      preference:
        type: string
      routing:
        $ref: '#/definitions/Routing'
      parent:
        type: string
      realtime:
        type: boolean
      version:
        $ref: '#/definitions/long'
      version_type:
        $ref: '#/definitions/VersionType'
  TermVectorsResponse:
    type: object
    properties:
      _index:
        type: string
      _type:
        type: string
      _id:
        type: string
      _version:
        $ref: '#/definitions/long'
      found:
        type: boolean
      took:
        $ref: '#/definitions/long'
      term_vectors:
        type: object
        additionalProperties:
          $ref: '#/definitions/TermVector'
  Token:
    type: object
    properties:
      end_offset:
        $ref: '#/definitions/integer'
      payload:
        type: string
      position:
        $ref: '#/definitions/integer'
      start_offset:
        $ref: '#/definitions/integer'
  UpdateRequest:
    type: object
    properties:
      script:
        $ref: '#/definitions/Script'
      upsert:
        $ref: '#/definitions/TDocument'
      doc_as_upsert:
        type: boolean
      doc:
        $ref: '#/definitions/TPartialDocument'
      detect_noop:
        type: boolean
      scripted_upsert:
        type: boolean
      _source:
        description: 'Not an array but: union<boolean, SourceFilter>'
        type: array
        items:
          - type: boolean
          - $ref: '#/definitions/SourceFilter'
      fields:
        type: array
        items:
          $ref: '#/definitions/Field'
      wait_for_active_shards:
        type: string
      source_enabled:
        type: boolean
      lang:
        type: string
      parent:
        type: string
      refresh:
        $ref: '#/definitions/Refresh'
      retry_on_conflict:
        $ref: '#/definitions/long'
      routing:
        $ref: '#/definitions/Routing'
      timeout:
        $ref: '#/definitions/Time'
      version:
        $ref: '#/definitions/long'
      version_type:
        $ref: '#/definitions/VersionType'
  UpdateResponse:
    type: object
    properties:
      _shards:
        $ref: '#/definitions/ShardStatistics'
      _index:
        type: string
      _type:
        type: string
      _id:
        type: string
      _version:
        $ref: '#/definitions/long'
      get:
        $ref: '#/definitions/InstantGet<TDocument>'
      result:
        $ref: '#/definitions/Result'
  IndexState:
    type: object
    properties:
      settings:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
      aliases:
        type: object
        additionalProperties:
          $ref: '#/definitions/Alias'
      mappings:
        type: object
        additionalProperties:
          $ref: '#/definitions/TypeMapping'
  Alias:
    type: object
    properties:
      filter:
        $ref: '#/definitions/QueryContainer'
      routing:
        $ref: '#/definitions/Routing'
      index_routing:
        $ref: '#/definitions/Routing'
      search_routing:
        $ref: '#/definitions/Routing'
  AliasDefinition:
    type: object
    properties:
      filter:
        $ref: '#/definitions/QueryContainer'
      routing:
        type: string
      index_routing:
        type: string
      search_routing:
        type: string
  BulkAliasRequest:
    type: object
    properties:
      actions:
        type: array
        items:
          $ref: '#/definitions/AliasAction'
      timeout:
        $ref: '#/definitions/Time'
      master_timeout:
        $ref: '#/definitions/Time'
  BulkAliasResponse:
    type: object
    properties: {}
  AliasAction:
    type: object
    properties: {}
  AliasExistsRequest:
    type: object
    properties:
      ignore_unavailable:
        type: boolean
      allow_no_indices:
        type: boolean
      expand_wildcards:
        $ref: '#/definitions/ExpandWildcards'
      local:
        type: boolean
  DeleteAliasRequest:
    type: object
    properties:
      timeout:
        $ref: '#/definitions/Time'
      master_timeout:
        $ref: '#/definitions/Time'
  DeleteAliasResponse:
    type: object
    properties: {}
  GetAliasRequest:
    type: object
    properties:
      ignore_unavailable:
        type: boolean
      allow_no_indices:
        type: boolean
      expand_wildcards:
        $ref: '#/definitions/ExpandWildcards'
      local:
        type: boolean
  GetAliasResponse:
    type: object
    properties:
      indices:
        type: object
        additionalProperties:
          $ref: '#/definitions/IndexAliases'
      is_valid:
        type: boolean
  IndexAliases:
    type: object
    properties:
      aliases:
        type: object
        additionalProperties:
          $ref: '#/definitions/AliasDefinition'
  PutAliasRequest:
    type: object
    properties:
      routing:
        $ref: '#/definitions/Routing'
      filter:
        $ref: '#/definitions/QueryContainer'
      timeout:
        $ref: '#/definitions/Time'
      master_timeout:
        $ref: '#/definitions/Time'
  PutAliasResponse:
    type: object
    properties: {}
  AnalyzeDetail:
    type: object
    properties:
      custom_analyzer:
        type: boolean
      charfilters:
        type: array
        items:
          $ref: '#/definitions/CharFilterDetail'
      tokenfilters:
        type: array
        items:
          $ref: '#/definitions/TokenDetail'
      tokenizer:
        $ref: '#/definitions/TokenDetail'
  AnalyzeRequest:
    type: object
    properties:
      tokenizer:
        description: 'Not an array but: union<string, ITokenizer>'
        type: array
        items:
          - type: string
          - $ref: '#/definitions/ITokenizer'
      analyzer:
        type: string
      explain:
        type: boolean
      attributes:
        type: array
        items:
          type: string
      char_filter:
        type: array
        items:
          description: 'Not an array but: union<string, ICharFilter>'
          type: array
          items:
            - type: string
            - $ref: '#/definitions/ICharFilter'
      filter:
        type: array
        items:
          description: 'Not an array but: union<string, ITokenFilter>'
          type: array
          items:
            - type: string
            - $ref: '#/definitions/ITokenFilter'
      normalizer:
        type: string
      field:
        $ref: '#/definitions/Field'
      text:
        type: array
        items:
          type: string
      prefer_local:
        type: boolean
      format:
        $ref: '#/definitions/Format'
  AnalyzeResponse:
    type: object
    properties:
      tokens:
        type: array
        items:
          $ref: '#/definitions/AnalyzeToken'
      detail:
        $ref: '#/definitions/AnalyzeDetail'
  AnalyzeToken:
    type: object
    properties:
      token:
        type: string
      type:
        type: string
      start_offset:
        $ref: '#/definitions/long'
      end_offset:
        $ref: '#/definitions/long'
      position:
        $ref: '#/definitions/long'
      position_length:
        $ref: '#/definitions/long'
  CharFilterDetail:
    type: object
    properties:
      name:
        type: string
      filtered_text:
        type: array
        items:
          type: string
  ExplainAnalyzeToken:
    type: object
    properties:
      token:
        type: string
      type:
        type: string
      start_offset:
        $ref: '#/definitions/long'
      end_offset:
        $ref: '#/definitions/long'
      position:
        $ref: '#/definitions/long'
      positionLength:
        $ref: '#/definitions/long'
      termFrequency:
        $ref: '#/definitions/long'
      keyword:
        type: boolean
      bytes:
        type: string
  TokenDetail:
    type: object
    properties:
      name:
        type: string
      tokens:
        type: array
        items:
          $ref: '#/definitions/ExplainAnalyzeToken'
  CreateIndexRequest:
    type: object
    properties:
      settings:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
      mappings:
        type: object
        additionalProperties:
          $ref: '#/definitions/TypeMapping'
      aliases:
        type: object
        additionalProperties:
          $ref: '#/definitions/Alias'
      wait_for_active_shards:
        type: string
      timeout:
        $ref: '#/definitions/Time'
      master_timeout:
        $ref: '#/definitions/Time'
      update_all_types:
        type: boolean
  CreateIndexResponse:
    type: object
    properties:
      shards_acknowledged:
        type: boolean
  DeleteIndexRequest:
    type: object
    properties:
      timeout:
        $ref: '#/definitions/Time'
      master_timeout:
        $ref: '#/definitions/Time'
      ignore_unavailable:
        type: boolean
      allow_no_indices:
        type: boolean
      expand_wildcards:
        $ref: '#/definitions/ExpandWildcards'
  DeleteIndexResponse:
    type: object
    properties: {}
  GetIndexRequest:
    type: object
    properties:
      local:
        type: boolean
      ignore_unavailable:
        type: boolean
      allow_no_indices:
        type: boolean
      expand_wildcards:
        $ref: '#/definitions/ExpandWildcards'
      flat_settings:
        type: boolean
      include_defaults:
        type: boolean
  GetIndexResponse:
    type: object
    properties:
      indices:
        type: object
        additionalProperties:
          $ref: '#/definitions/IndexState'
  ExistsResponse:
    type: object
    properties:
      exists:
        type: boolean
  IndexExistsRequest:
    type: object
    properties:
      local:
        type: boolean
      ignore_unavailable:
        type: boolean
      allow_no_indices:
        type: boolean
      expand_wildcards:
        $ref: '#/definitions/ExpandWildcards'
      flat_settings:
        type: boolean
      include_defaults:
        type: boolean
  CloseIndexRequest:
    type: object
    properties:
      timeout:
        $ref: '#/definitions/Time'
      master_timeout:
        $ref: '#/definitions/Time'
      ignore_unavailable:
        type: boolean
      allow_no_indices:
        type: boolean
      expand_wildcards:
        $ref: '#/definitions/ExpandWildcards'
  CloseIndexResponse:
    type: object
    properties: {}
  OpenIndexRequest:
    type: object
    properties:
      timeout:
        $ref: '#/definitions/Time'
      master_timeout:
        $ref: '#/definitions/Time'
      ignore_unavailable:
        type: boolean
      allow_no_indices:
        type: boolean
      expand_wildcards:
        $ref: '#/definitions/ExpandWildcards'
  OpenIndexResponse:
    type: object
    properties: {}
  RolloverConditions:
    type: object
    properties:
      max_age:
        $ref: '#/definitions/Time'
      max_docs:
        $ref: '#/definitions/long'
  RolloverIndexRequest:
    type: object
    properties:
      conditions:
        $ref: '#/definitions/RolloverConditions'
      settings:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
      aliases:
        type: object
        additionalProperties:
          $ref: '#/definitions/Alias'
      mappings:
        type: object
        additionalProperties:
          $ref: '#/definitions/TypeMapping'
      timeout:
        $ref: '#/definitions/Time'
      dry_run:
        type: boolean
      master_timeout:
        $ref: '#/definitions/Time'
      wait_for_active_shards:
        type: string
  RolloverIndexResponse:
    type: object
    properties:
      dry_run:
        type: boolean
      new_index:
        type: string
      old_index:
        type: string
      rolled_over:
        type: boolean
      conditions:
        type: object
        additionalProperties:
          type: boolean
      shards_acknowledged:
        type: boolean
  ShrinkIndexRequest:
    type: object
    properties:
      settings:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
      aliases:
        type: object
        additionalProperties:
          $ref: '#/definitions/Alias'
      timeout:
        $ref: '#/definitions/Time'
      master_timeout:
        $ref: '#/definitions/Time'
      wait_for_active_shards:
        type: string
  ShrinkIndexResponse:
    type: object
    properties:
      shards_acknowledged:
        type: boolean
  TypeExistsRequest:
    type: object
    properties:
      ignore_unavailable:
        type: boolean
      allow_no_indices:
        type: boolean
      expand_wildcards:
        $ref: '#/definitions/ExpandWildcards'
      local:
        type: boolean
  GetIndexSettingsRequest:
    type: object
    properties:
      ignore_unavailable:
        type: boolean
      allow_no_indices:
        type: boolean
      expand_wildcards:
        $ref: '#/definitions/ExpandWildcards'
      flat_settings:
        type: boolean
      local:
        type: boolean
      include_defaults:
        type: boolean
  GetIndexSettingsResponse:
    type: object
    properties:
      indices:
        type: object
        additionalProperties:
          $ref: '#/definitions/IndexState'
  DeleteIndexTemplateRequest:
    type: object
    properties:
      timeout:
        $ref: '#/definitions/Time'
      master_timeout:
        $ref: '#/definitions/Time'
  DeleteIndexTemplateResponse:
    type: object
    properties: {}
  GetIndexTemplateRequest:
    type: object
    properties:
      flat_settings:
        type: boolean
      master_timeout:
        $ref: '#/definitions/Time'
      local:
        type: boolean
  GetIndexTemplateResponse:
    type: object
    properties:
      template_mappings:
        type: object
        additionalProperties:
          $ref: '#/definitions/TemplateMapping'
  TemplateMapping:
    type: object
    properties:
      index_patterns:
        type: array
        items:
          type: string
      order:
        $ref: '#/definitions/integer'
      settings:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
      mappings:
        type: object
        additionalProperties:
          $ref: '#/definitions/TypeMapping'
      aliases:
        type: object
        additionalProperties:
          $ref: '#/definitions/Alias'
      version:
        $ref: '#/definitions/integer'
  IndexTemplateExistsRequest:
    type: object
    properties:
      flat_settings:
        type: boolean
      master_timeout:
        $ref: '#/definitions/Time'
      local:
        type: boolean
  PutIndexTemplateRequest:
    type: object
    properties:
      index_patterns:
        type: array
        items:
          type: string
      order:
        $ref: '#/definitions/integer'
      version:
        $ref: '#/definitions/integer'
      settings:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
      mappings:
        type: object
        additionalProperties:
          $ref: '#/definitions/TypeMapping'
      aliases:
        type: object
        additionalProperties:
          $ref: '#/definitions/Alias'
      create:
        type: boolean
      timeout:
        $ref: '#/definitions/Time'
      master_timeout:
        $ref: '#/definitions/Time'
      flat_settings:
        type: boolean
  PutIndexTemplateResponse:
    type: object
    properties: {}
  UpdateIndexSettingsRequest:
    type: object
    properties:
      index_settings:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
      master_timeout:
        $ref: '#/definitions/Time'
      preserve_existing:
        type: boolean
      ignore_unavailable:
        type: boolean
      allow_no_indices:
        type: boolean
      expand_wildcards:
        $ref: '#/definitions/ExpandWildcards'
      flat_settings:
        type: boolean
  UpdateIndexSettingsResponse:
    type: object
    properties: {}
  GetFieldMappingRequest:
    type: object
    properties:
      include_defaults:
        type: boolean
      ignore_unavailable:
        type: boolean
      allow_no_indices:
        type: boolean
      expand_wildcards:
        $ref: '#/definitions/ExpandWildcards'
      local:
        type: boolean
  GetFieldMappingResponse:
    type: object
    properties:
      indices:
        type: object
        additionalProperties:
          $ref: '#/definitions/TypeFieldMappings'
      is_valid:
        type: boolean
  TypeFieldMappings:
    type: object
    properties:
      mappings:
        type: object
        additionalProperties:
          type: object
          additionalProperties:
            $ref: '#/definitions/FieldMapping'
  GetMappingRequest:
    type: object
    properties:
      ignore_unavailable:
        type: boolean
      allow_no_indices:
        type: boolean
      expand_wildcards:
        $ref: '#/definitions/ExpandWildcards'
      local:
        type: boolean
  GetMappingResponse:
    type: object
    properties:
      indices:
        type: object
        additionalProperties:
          $ref: '#/definitions/IndexMappings'
      mappings:
        type: object
        additionalProperties:
          $ref: '#/definitions/IndexMappings'
      mapping:
        $ref: '#/definitions/TypeMapping'
  IndexMappings:
    type: object
    properties:
      mappings:
        type: object
        additionalProperties:
          $ref: '#/definitions/TypeMapping'
      item:
        $ref: '#/definitions/TypeMapping'
  PutMappingRequest:
    type: object
    properties:
      all_field:
        $ref: '#/definitions/AllField'
      date_detection:
        type: boolean
      dynamic_date_formats:
        type: array
        items:
          type: string
      dynamic_templates:
        type: object
        additionalProperties:
          $ref: '#/definitions/DynamicTemplate'
      dynamic:
        description: 'Not an array but: union<boolean, DynamicMapping>'
        type: array
        items:
          - type: boolean
          - $ref: '#/definitions/DynamicMapping'
      field_names_field:
        $ref: '#/definitions/FieldNamesField'
      index_field:
        $ref: '#/definitions/IndexField'
      meta:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
      numeric_detection:
        type: boolean
      properties:
        type: object
        additionalProperties:
          $ref: '#/definitions/IProperty'
      routing_field:
        $ref: '#/definitions/RoutingField'
      size_field:
        $ref: '#/definitions/SizeField'
      source_field:
        $ref: '#/definitions/SourceField'
      timeout:
        $ref: '#/definitions/Time'
      master_timeout:
        $ref: '#/definitions/Time'
      ignore_unavailable:
        type: boolean
      allow_no_indices:
        type: boolean
      expand_wildcards:
        $ref: '#/definitions/ExpandWildcards'
      update_all_types:
        type: boolean
  PutMappingResponse:
    type: object
    properties: {}
  RecoveryBytes:
    type: object
    properties:
      total:
        $ref: '#/definitions/long'
      reused:
        $ref: '#/definitions/long'
      recovered:
        $ref: '#/definitions/long'
      percent:
        type: string
  RecoveryFileDetails:
    type: object
    properties:
      name:
        type: string
      length:
        $ref: '#/definitions/long'
      recovered:
        $ref: '#/definitions/long'
  RecoveryFiles:
    type: object
    properties:
      total:
        $ref: '#/definitions/long'
      reused:
        $ref: '#/definitions/long'
      recovered:
        $ref: '#/definitions/long'
      percent:
        type: string
      details:
        type: array
        items:
          $ref: '#/definitions/RecoveryFileDetails'
  RecoveryIndexStatus:
    type: object
    properties:
      total_time_in_millis:
        $ref: '#/definitions/long'
      bytes:
        $ref: '#/definitions/RecoveryBytes'
      files:
        $ref: '#/definitions/RecoveryFiles'
  RecoveryOrigin:
    type: object
    properties:
      id:
        type: string
      hostname:
        type: string
      ip:
        type: string
      name:
        type: string
  RecoveryStartStatus:
    type: object
    properties:
      check_index_time:
        $ref: '#/definitions/long'
      total_time_in_millis:
        type: string
  RecoveryStatus:
    type: object
    properties:
      shards:
        type: array
        items:
          $ref: '#/definitions/ShardRecovery'
  RecoveryStatusRequest:
    type: object
    properties:
      detailed:
        type: boolean
      active_only:
        type: boolean
  RecoveryStatusResponse:
    type: object
    properties:
      indices:
        type: object
        additionalProperties:
          $ref: '#/definitions/RecoveryStatus'
  RecoveryTranslogStatus:
    type: object
    properties:
      recovered:
        $ref: '#/definitions/long'
      total:
        $ref: '#/definitions/long'
      percent:
        type: string
      total_on_start:
        $ref: '#/definitions/long'
      total_time:
        type: string
      total_time_in_millis:
        $ref: '#/definitions/long'
  ShardRecovery:
    type: object
    properties:
      id:
        $ref: '#/definitions/long'
      type:
        type: string
      stage:
        type: string
      primary:
        type: boolean
      start_time:
        $ref: '#/definitions/Date'
      stop_time:
        $ref: '#/definitions/Date'
      total_time_in_millis:
        $ref: '#/definitions/long'
      source:
        $ref: '#/definitions/RecoveryOrigin'
      target:
        $ref: '#/definitions/RecoveryOrigin'
      index:
        $ref: '#/definitions/RecoveryIndexStatus'
      translog:
        $ref: '#/definitions/RecoveryTranslogStatus'
      start:
        $ref: '#/definitions/RecoveryStartStatus'
  IndexSegment:
    type: object
    properties:
      shards:
        type: object
        additionalProperties:
          $ref: '#/definitions/ShardsSegment'
  Segment:
    type: object
    properties:
      generation:
        $ref: '#/definitions/integer'
      num_docs:
        $ref: '#/definitions/long'
      deleted_docs:
        $ref: '#/definitions/long'
      size:
        type: string
      size_in_bytes:
        $ref: '#/definitions/double'
      committed:
        type: boolean
      Search:
        type: boolean
  SegmentsRequest:
    type: object
    properties:
      ignore_unavailable:
        type: boolean
      allow_no_indices:
        type: boolean
      expand_wildcards:
        $ref: '#/definitions/ExpandWildcards'
      operation_threading:
        type: string
      verbose:
        type: boolean
  SegmentsResponse:
    type: object
    properties:
      _shards:
        $ref: '#/definitions/ShardStatistics'
      indices:
        type: object
        additionalProperties:
          $ref: '#/definitions/IndexSegment'
  ShardSegmentRouting:
    type: object
    properties:
      state:
        type: string
      primary:
        type: boolean
      node:
        type: string
  ShardsSegment:
    type: object
    properties:
      num_committed_segments:
        $ref: '#/definitions/integer'
      num_search_segments:
        $ref: '#/definitions/integer'
      routing:
        $ref: '#/definitions/ShardSegmentRouting'
      segments:
        type: object
        additionalProperties:
          $ref: '#/definitions/Segment'
  IndicesShardStores:
    type: object
    properties:
      shards:
        type: object
        additionalProperties:
          $ref: '#/definitions/ShardStoreWrapper'
  IndicesShardStoresRequest:
    type: object
    properties:
      types:
        type: array
        items:
          $ref: '#/definitions/TypeName'
      status:
        type: array
        items:
          type: string
      ignore_unavailable:
        type: boolean
      allow_no_indices:
        type: boolean
      expand_wildcards:
        $ref: '#/definitions/ExpandWildcards'
      operation_threading:
        type: string
  IndicesShardStoresResponse:
    type: object
    properties:
      indices:
        type: object
        additionalProperties:
          $ref: '#/definitions/IndicesShardStores'
  ShardStore:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      transport_address:
        type: string
      legacy_version:
        $ref: '#/definitions/long'
      allocation_id:
        type: string
      store_exception:
        $ref: '#/definitions/ShardStoreException'
      allocation:
        $ref: '#/definitions/ShardStoreAllocation'
      attributes:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
  ShardStoreException:
    type: object
    properties:
      type:
        type: string
      reason:
        type: string
  ShardStoreWrapper:
    type: object
    properties:
      stores:
        type: array
        items:
          $ref: '#/definitions/ShardStore'
  IndexStats:
    type: object
    properties:
      docs:
        $ref: '#/definitions/DocStats'
      store:
        $ref: '#/definitions/StoreStats'
      indexing:
        $ref: '#/definitions/IndexingStats'
      get:
        $ref: '#/definitions/GetStats'
      search:
        $ref: '#/definitions/SearchStats'
      merges:
        $ref: '#/definitions/MergesStats'
      refresh:
        $ref: '#/definitions/RefreshStats'
      flush:
        $ref: '#/definitions/FlushStats'
      warmer:
        $ref: '#/definitions/WarmerStats'
      query_cache:
        $ref: '#/definitions/QueryCacheStats'
      fielddata:
        $ref: '#/definitions/FielddataStats'
      completion:
        $ref: '#/definitions/CompletionStats'
      segments:
        $ref: '#/definitions/SegmentsStats'
      translog:
        $ref: '#/definitions/TranslogStats'
      request_cache:
        $ref: '#/definitions/RequestCacheStats'
      recovery:
        $ref: '#/definitions/RecoveryStats'
  IndicesStats:
    type: object
    properties:
      primaries:
        $ref: '#/definitions/IndexStats'
      total:
        $ref: '#/definitions/IndexStats'
  IndicesStatsRequest:
    type: object
    properties:
      types:
        type: array
        items:
          $ref: '#/definitions/TypeName'
      completion_fields:
        type: array
        items:
          $ref: '#/definitions/Field'
      fielddata_fields:
        type: array
        items:
          $ref: '#/definitions/Field'
      fields:
        type: array
        items:
          $ref: '#/definitions/Field'
      groups:
        type: array
        items:
          type: string
      level:
        $ref: '#/definitions/Level'
      include_segment_file_sizes:
        type: boolean
  IndicesStatsResponse:
    type: object
    properties:
      _shards:
        $ref: '#/definitions/ShardStatistics'
      _all:
        $ref: '#/definitions/IndicesStats'
      indices:
        type: object
        additionalProperties:
          $ref: '#/definitions/IndicesStats'
  ClearCacheRequest:
    type: object
    properties:
      fielddata:
        type: boolean
      fields:
        type: array
        items:
          $ref: '#/definitions/Field'
      query:
        type: boolean
      ignore_unavailable:
        type: boolean
      allow_no_indices:
        type: boolean
      expand_wildcards:
        $ref: '#/definitions/ExpandWildcards'
      recycler:
        type: boolean
      request_cache:
        type: boolean
      request:
        type: boolean
  ClearCacheResponse:
    type: object
    properties: {}
  FlushRequest:
    type: object
    properties:
      force:
        type: boolean
      wait_if_ongoing:
        type: boolean
      ignore_unavailable:
        type: boolean
      allow_no_indices:
        type: boolean
      expand_wildcards:
        $ref: '#/definitions/ExpandWildcards'
  FlushResponse:
    type: object
    properties: {}
  ForceMergeRequest:
    type: object
    properties:
      flush:
        type: boolean
      ignore_unavailable:
        type: boolean
      allow_no_indices:
        type: boolean
      expand_wildcards:
        $ref: '#/definitions/ExpandWildcards'
      max_num_segments:
        $ref: '#/definitions/long'
      only_expunge_deletes:
        type: boolean
      operation_threading:
        type: string
      wait_for_merge:
        type: boolean
  ForceMergeResponse:
    type: object
    properties: {}
  RefreshRequest:
    type: object
    properties:
      ignore_unavailable:
        type: boolean
      allow_no_indices:
        type: boolean
      expand_wildcards:
        $ref: '#/definitions/ExpandWildcards'
  RefreshResponse:
    type: object
    properties: {}
  SyncedFlushRequest:
    type: object
    properties:
      ignore_unavailable:
        type: boolean
      allow_no_indices:
        type: boolean
      expand_wildcards:
        $ref: '#/definitions/ExpandWildcards'
  SyncedFlushResponse:
    type: object
    properties: {}
  UpgradeRequest:
    type: object
    properties:
      allow_no_indices:
        type: boolean
      expand_wildcards:
        $ref: '#/definitions/ExpandWildcards'
      ignore_unavailable:
        type: boolean
      wait_for_completion:
        type: boolean
      only_ancient_segments:
        type: boolean
  UpgradeResponse:
    type: object
    properties:
      _shards:
        $ref: '#/definitions/ShardStatistics'
  UpgradeStatus:
    type: object
    properties:
      size:
        type: string
      size_in_bytes:
        $ref: '#/definitions/long'
      size_to_upgrade:
        type: string
      size_to_upgrade_in_bytes:
        type: string
      size_to_upgrade_ancient_in_bytes:
        type: string
  UpgradeStatusRequest:
    type: object
    properties:
      ignore_unavailable:
        type: boolean
      allow_no_indices:
        type: boolean
      expand_wildcards:
        $ref: '#/definitions/ExpandWildcards'
  UpgradeStatusResponse:
    type: object
    properties:
      upgrades:
        type: object
        additionalProperties:
          $ref: '#/definitions/UpgradeStatus'
      size_in_bytes:
        $ref: '#/definitions/long'
      size_to_upgrade_in_bytes:
        type: string
      size_to_upgrade_ancient_in_bytes:
        type: string
  Pipeline:
    type: object
    properties:
      description:
        type: string
      processors:
        type: array
        items:
          $ref: '#/definitions/Processor'
      on_failure:
        type: array
        items:
          $ref: '#/definitions/Processor'
  Processor:
    type: object
    properties:
      name:
        type: string
      on_failure:
        type: array
        items:
          $ref: '#/definitions/Processor'
  DeletePipelineRequest:
    type: object
    properties:
      master_timeout:
        $ref: '#/definitions/Time'
      timeout:
        $ref: '#/definitions/Time'
  DeletePipelineResponse:
    type: object
    properties: {}
  GetPipelineRequest:
    type: object
    properties:
      master_timeout:
        $ref: '#/definitions/Time'
  GetPipelineResponse:
    type: object
    properties:
      pipelines:
        type: object
        additionalProperties:
          $ref: '#/definitions/Pipeline'
  GrokProcessorPatternsRequest:
    type: object
    properties: {}
  GrokProcessorPatternsResponse:
    type: object
    properties:
      patterns:
        type: object
        additionalProperties:
          type: string
  PutPipelineRequest:
    type: object
    properties:
      description:
        type: string
      processors:
        type: array
        items:
          $ref: '#/definitions/Processor'
      on_failure:
        type: array
        items:
          $ref: '#/definitions/Processor'
      master_timeout:
        $ref: '#/definitions/Time'
      timeout:
        $ref: '#/definitions/Time'
  PutPipelineResponse:
    type: object
    properties: {}
  DocumentSimulation:
    type: object
    properties:
      _index:
        type: string
      _type:
        type: string
      _id:
        type: string
      _parent:
        type: string
      _routing:
        type: string
      _source:
        $ref: '#/definitions/LazyDocument'
      _ingest:
        $ref: '#/definitions/Ingest'
  Ingest:
    type: object
    properties:
      timestamp:
        $ref: '#/definitions/Date'
  PipelineSimulation:
    type: object
    properties:
      processor_results:
        type: array
        items:
          $ref: '#/definitions/PipelineSimulation'
      tag:
        type: string
      doc:
        $ref: '#/definitions/DocumentSimulation'
  SimulatePipelineDocument:
    type: object
    properties:
      _index:
        $ref: '#/definitions/IndexName'
      _type:
        $ref: '#/definitions/TypeName'
      _id:
        $ref: '#/definitions/Id'
      _source:
        $ref: '#/definitions/object'
  SimulatePipelineRequest:
    type: object
    properties:
      pipeline:
        $ref: '#/definitions/Pipeline'
      docs:
        type: array
        items:
          $ref: '#/definitions/SimulatePipelineDocument'
      verbose:
        type: boolean
  SimulatePipelineResponse:
    type: object
    properties:
      docs:
        type: array
        items:
          $ref: '#/definitions/PipelineSimulation'
  TypeMapping:
    type: object
    properties:
      dynamic_date_formats:
        type: array
        items:
          type: string
      date_detection:
        type: boolean
      numeric_detection:
        type: boolean
      _source:
        $ref: '#/definitions/SourceField'
      _all:
        $ref: '#/definitions/AllField'
      _routing:
        $ref: '#/definitions/RoutingField'
      _index:
        $ref: '#/definitions/IndexField'
      _size:
        $ref: '#/definitions/SizeField'
      _field_names:
        $ref: '#/definitions/FieldNamesField'
      _meta:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
      dynamic_templates:
        type: object
        additionalProperties:
          $ref: '#/definitions/DynamicTemplate'
      dynamic:
        description: 'Not an array but: union<boolean, DynamicMapping>'
        type: array
        items:
          - type: boolean
          - $ref: '#/definitions/DynamicMapping'
      properties:
        type: object
        additionalProperties:
          $ref: '#/definitions/IProperty'
  DynamicTemplate:
    type: object
    properties:
      match:
        type: string
      unmatch:
        type: string
      match_mapping_type:
        type: string
      path_match:
        type: string
      path_unmatch:
        type: string
      mapping:
        $ref: '#/definitions/IProperty'
  FieldMapping:
    type: object
    properties: {}
  AllField:
    type: object
    properties:
      enabled:
        type: boolean
      store:
        type: boolean
      store_term_vectors:
        type: boolean
      store_term_vector_offsets:
        type: boolean
      store_term_vector_positions:
        type: boolean
      store_term_vector_payloads:
        type: boolean
      omit_norms:
        type: boolean
      analyzer:
        type: string
      search_analyzer:
        type: string
      similarity:
        type: string
  FieldNamesField:
    type: object
    properties:
      enabled:
        type: boolean
  IndexField:
    type: object
    properties:
      enabled:
        type: boolean
  RoutingField:
    type: object
    properties:
      required:
        type: boolean
  SizeField:
    type: object
    properties:
      enabled:
        type: boolean
  SourceField:
    type: object
    properties:
      enabled:
        type: boolean
      compress:
        type: boolean
      compress_threshold:
        type: string
      includes:
        type: array
        items:
          type: string
      excludes:
        type: array
        items:
          type: string
  CorePropertyBase:
    type: object
    properties:
      copy_to:
        type: array
        items:
          $ref: '#/definitions/Field'
      fields:
        type: object
        additionalProperties:
          $ref: '#/definitions/IProperty'
      similarity:
        description: 'Not an array but: union<SimilarityOption, string>'
        type: array
        items:
          - $ref: '#/definitions/SimilarityOption'
          - type: string
      store:
        type: boolean
  DocValuesPropertyBase:
    type: object
    properties:
      doc_values:
        type: boolean
  IProperty:
    type: object
    properties:
      name:
        $ref: '#/definitions/PropertyName'
      type:
        type: string
      local_metadata:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
  PropertyBase:
    type: object
    properties:
      name:
        $ref: '#/definitions/PropertyName'
      local_metadata:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
      type:
        type: string
  PropertyWithClrOrigin:
    type: object
    properties: {}
  NestedProperty:
    type: object
    properties:
      include_in_parent:
        type: boolean
      include_in_root:
        type: boolean
  ObjectProperty:
    type: object
    properties:
      dynamic:
        description: 'Not an array but: union<boolean, DynamicMapping>'
        type: array
        items:
          - type: boolean
          - $ref: '#/definitions/DynamicMapping'
      enabled:
        type: boolean
      properties:
        type: object
        additionalProperties:
          $ref: '#/definitions/IProperty'
  BinaryProperty:
    type: object
    properties: {}
  BooleanProperty:
    type: object
    properties:
      index:
        type: boolean
      boost:
        $ref: '#/definitions/double'
      null_value:
        type: boolean
      fielddata:
        $ref: '#/definitions/NumericFielddata'
  DateProperty:
    type: object
    properties:
      index:
        type: boolean
      boost:
        $ref: '#/definitions/double'
      null_value:
        $ref: '#/definitions/Date'
      precision_step:
        $ref: '#/definitions/integer'
      ignore_malformed:
        type: boolean
      format:
        type: string
      fielddata:
        $ref: '#/definitions/NumericFielddata'
  JoinProperty:
    type: object
    properties:
      relations:
        type: object
        additionalProperties:
          type: array
          items:
            $ref: '#/definitions/RelationName'
  KeywordProperty:
    type: object
    properties:
      boost:
        $ref: '#/definitions/double'
      eager_global_ordinals:
        type: boolean
      ignore_above:
        $ref: '#/definitions/integer'
      index:
        type: boolean
      index_options:
        $ref: '#/definitions/IndexOptions'
      norms:
        type: boolean
      null_value:
        type: string
      normalizer:
        type: string
  NumberProperty:
    type: object
    properties:
      index:
        type: boolean
      boost:
        $ref: '#/definitions/double'
      null_value:
        $ref: '#/definitions/double'
      ignore_malformed:
        type: boolean
      coerce:
        type: boolean
      fielddata:
        $ref: '#/definitions/NumericFielddata'
      scaling_factor:
        $ref: '#/definitions/double'
  PercolatorProperty:
    type: object
    properties: {}
  RangePropertyBase:
    type: object
    properties:
      coerce:
        type: boolean
      boost:
        $ref: '#/definitions/double'
      index:
        type: boolean
  DateRangeProperty:
    type: object
    properties:
      format:
        type: string
  DoubleRangeProperty:
    type: object
    properties: {}
  FloatRangeProperty:
    type: object
    properties: {}
  IntegerRangeProperty:
    type: object
    properties: {}
  LongRangeProperty:
    type: object
    properties: {}
  TextProperty:
    type: object
    properties:
      boost:
        $ref: '#/definitions/double'
      eager_global_ordinals:
        type: boolean
      fielddata:
        type: boolean
      fielddata_frequency_filter:
        $ref: '#/definitions/FielddataFrequencyFilter'
      index:
        type: boolean
      index_options:
        $ref: '#/definitions/IndexOptions'
      norms:
        type: boolean
      position_increment_gap:
        $ref: '#/definitions/integer'
      analyzer:
        type: string
      search_analyzer:
        type: string
      search_quote_analyzer:
        type: string
      term_vector:
        $ref: '#/definitions/TermVectorOption'
  GeoPointProperty:
    type: object
    properties:
      ignore_malformed:
        type: boolean
  GeoShapeProperty:
    type: object
    properties:
      tree:
        $ref: '#/definitions/GeoTree'
      precision:
        $ref: '#/definitions/Distance'
      orientation:
        $ref: '#/definitions/GeoOrientation'
      tree_levels:
        $ref: '#/definitions/integer'
      strategy:
        $ref: '#/definitions/GeoStrategy'
      distance_error_pct:
        $ref: '#/definitions/double'
      points_only:
        type: boolean
  CompletionProperty:
    type: object
    properties:
      search_analyzer:
        type: string
      analyzer:
        type: string
      preserve_separators:
        type: boolean
      preserve_position_increments:
        type: boolean
      max_input_length:
        $ref: '#/definitions/integer'
      contexts:
        type: array
        items:
          $ref: '#/definitions/SuggestContext'
  GenericProperty:
    type: object
    properties:
      term_vector:
        $ref: '#/definitions/TermVectorOption'
      boost:
        $ref: '#/definitions/double'
      search_analyzer:
        type: string
      ignore_above:
        $ref: '#/definitions/integer'
      position_increment_gap:
        $ref: '#/definitions/integer'
      fielddata:
        $ref: '#/definitions/StringFielddata'
      index:
        $ref: '#/definitions/FieldIndexOption'
      null_value:
        type: string
      norms:
        type: boolean
      index_options:
        $ref: '#/definitions/IndexOptions'
      analyzer:
        type: string
      type:
        type: string
  IpProperty:
    type: object
    properties:
      boost:
        $ref: '#/definitions/double'
      index:
        type: boolean
      null_value:
        type: string
  Murmur3HashProperty:
    type: object
    properties: {}
  TokenCountProperty:
    type: object
    properties:
      analyzer:
        type: string
      index:
        type: boolean
      boost:
        $ref: '#/definitions/double'
      null_value:
        $ref: '#/definitions/double'
  IndicesModuleSettings:
    type: object
    properties:
      qeueries_cache_size:
        type: string
      circuit_breaker_settings:
        $ref: '#/definitions/CircuitBreakerSettings'
      fielddata_settings:
        $ref: '#/definitions/FielddataSettings'
      recovery_settings:
        $ref: '#/definitions/IndicesRecoverySettings'
  CircuitBreakerSettings:
    type: object
    properties:
      total_limit:
        type: string
      fielddata_limit:
        type: string
      fielddata_overhead:
        $ref: '#/definitions/float'
      request_limit:
        type: string
      request_overhead:
        $ref: '#/definitions/float'
  Fielddata:
    type: object
    properties:
      loading:
        $ref: '#/definitions/FielddataLoading'
      filter:
        $ref: '#/definitions/FielddataFilter'
  FielddataFilter:
    type: object
    properties:
      frequency:
        $ref: '#/definitions/FielddataFrequencyFilter'
      regex:
        $ref: '#/definitions/FielddataRegexFilter'
  FielddataFrequencyFilter:
    type: object
    properties:
      min:
        $ref: '#/definitions/double'
      max:
        $ref: '#/definitions/double'
      min_segment_size:
        $ref: '#/definitions/integer'
  FielddataRegexFilter:
    type: object
    properties:
      pattern:
        type: string
  FielddataSettings:
    type: object
    properties:
      cache_size:
        type: string
      cache_expire:
        $ref: '#/definitions/Time'
  NumericFielddata:
    type: object
    properties:
      format:
        $ref: '#/definitions/NumericFielddataFormat'
  StringFielddata:
    type: object
    properties:
      format:
        $ref: '#/definitions/StringFielddataFormat'
  IndicesRecoverySettings:
    type: object
    properties:
      concurrent_streams:
        $ref: '#/definitions/integer'
      concurrent_small_file_streams:
        $ref: '#/definitions/integer'
      file_chunk_size:
        type: string
      translog_operations:
        $ref: '#/definitions/integer'
      translog_size:
        type: string
      compress:
        type: boolean
      max_bytes_per_second:
        type: string
  StoredScript:
    type: object
    properties:
      lang:
        type: string
      source:
        type: string
  DeleteScriptRequest:
    type: object
    properties:
      timeout:
        $ref: '#/definitions/Time'
      master_timeout:
        $ref: '#/definitions/Time'
  DeleteScriptResponse:
    type: object
    properties: {}
  GetScriptRequest:
    type: object
    properties: {}
  GetScriptResponse:
    type: object
    properties:
      script:
        $ref: '#/definitions/StoredScript'
  PutScriptRequest:
    type: object
    properties:
      script:
        $ref: '#/definitions/StoredScript'
      timeout:
        $ref: '#/definitions/Time'
      master_timeout:
        $ref: '#/definitions/Time'
  PutScriptResponse:
    type: object
    properties: {}
  SnapshotRepository:
    type: object
    properties:
      type:
        type: string
  CreateRepositoryRequest:
    type: object
    properties:
      repository:
        $ref: '#/definitions/SnapshotRepository'
      master_timeout:
        $ref: '#/definitions/Time'
      timeout:
        $ref: '#/definitions/Time'
      verify:
        type: boolean
  CreateRepositoryResponse:
    type: object
    properties: {}
  DeleteRepositoryRequest:
    type: object
    properties:
      master_timeout:
        $ref: '#/definitions/Time'
      timeout:
        $ref: '#/definitions/Time'
  DeleteRepositoryResponse:
    type: object
    properties: {}
  GetRepositoryRequest:
    type: object
    properties:
      master_timeout:
        $ref: '#/definitions/Time'
      local:
        type: boolean
  GetRepositoryResponse:
    type: object
    properties:
      repositories:
        type: object
        additionalProperties:
          $ref: '#/definitions/SnapshotRepository'
  CompactNodeInfo:
    type: object
    properties:
      name:
        type: string
  VerifyRepositoryRequest:
    type: object
    properties:
      master_timeout:
        $ref: '#/definitions/Time'
      timeout:
        $ref: '#/definitions/Time'
  VerifyRepositoryResponse:
    type: object
    properties:
      nodes:
        type: object
        additionalProperties:
          $ref: '#/definitions/CompactNodeInfo'
  RestoreRequest:
    type: object
    properties:
      indices:
        $ref: '#/definitions/Indices'
      ignore_unavailable:
        type: boolean
      include_global_state:
        type: boolean
      rename_pattern:
        type: string
      rename_replacement:
        type: string
      index_settings:
        $ref: '#/definitions/UpdateIndexSettingsRequest'
      ignore_index_settings:
        type: array
        items:
          type: string
      master_timeout:
        $ref: '#/definitions/Time'
      wait_for_completion:
        type: boolean
  RestoreResponse:
    type: object
    properties:
      snapshot:
        $ref: '#/definitions/SnapshotRestore'
  SnapshotRestore:
    type: object
    properties:
      snapshot:
        type: string
      indices:
        type: array
        items:
          $ref: '#/definitions/IndexName'
      shards:
        $ref: '#/definitions/ShardStatistics'
  Snapshot:
    type: object
    properties:
      snapshot:
        type: string
      indices:
        type: array
        items:
          $ref: '#/definitions/IndexName'
      state:
        type: string
      start_time:
        $ref: '#/definitions/Date'
      start_time_in_millis:
        $ref: '#/definitions/long'
      end_time:
        $ref: '#/definitions/Date'
      end_time_in_millis:
        $ref: '#/definitions/long'
      duration_in_millis:
        $ref: '#/definitions/long'
      shards:
        $ref: '#/definitions/ShardStatistics'
      failures:
        type: array
        items:
          $ref: '#/definitions/SnapshotShardFailure'
  SnapshotShardFailure:
    type: object
    properties:
      node_id:
        type: string
      index:
        type: string
      shard_id:
        type: string
      reason:
        type: string
      status:
        type: string
  DeleteSnapshotRequest:
    type: object
    properties:
      master_timeout:
        $ref: '#/definitions/Time'
  DeleteSnapshotResponse:
    type: object
    properties: {}
  GetSnapshotRequest:
    type: object
    properties:
      master_timeout:
        $ref: '#/definitions/Time'
      ignore_unavailable:
        type: boolean
      verbose:
        type: boolean
  GetSnapshotResponse:
    type: object
    properties:
      snapshots:
        type: array
        items:
          $ref: '#/definitions/Snapshot'
  SnapshotRequest:
    type: object
    properties:
      indices:
        $ref: '#/definitions/Indices'
      ignore_unavailable:
        type: boolean
      include_global_state:
        type: boolean
      partial:
        type: boolean
      master_timeout:
        $ref: '#/definitions/Time'
      wait_for_completion:
        type: boolean
  SnapshotResponse:
    type: object
    properties:
      accepted:
        type: boolean
      snapshot:
        $ref: '#/definitions/Snapshot'
  SnapshotIndexStats:
    type: object
    properties:
      shards_stats:
        $ref: '#/definitions/SnapshotShardsStats'
      stats:
        $ref: '#/definitions/SnapshotStats'
      shards:
        type: object
        additionalProperties:
          $ref: '#/definitions/SnapshotShardsStats'
  SnapshotShardsStats:
    type: object
    properties:
      initializing:
        $ref: '#/definitions/long'
      started:
        $ref: '#/definitions/long'
      finalizing:
        $ref: '#/definitions/long'
      done:
        $ref: '#/definitions/long'
      failed:
        $ref: '#/definitions/long'
      total:
        $ref: '#/definitions/long'
  SnapshotStats:
    type: object
    properties:
      number_of_files:
        $ref: '#/definitions/long'
      processed_files:
        $ref: '#/definitions/long'
      total_size_in_bytes:
        $ref: '#/definitions/long'
      processed_size_in_bytes:
        $ref: '#/definitions/long'
      start_time_in_millis:
        $ref: '#/definitions/long'
      time_in_millis:
        $ref: '#/definitions/long'
  SnapshotStatus:
    type: object
    properties:
      snapshot:
        type: string
      repository:
        type: string
      state:
        type: string
      shards_stats:
        $ref: '#/definitions/SnapshotShardsStats'
      stats:
        $ref: '#/definitions/SnapshotStats'
      indices:
        type: object
        additionalProperties:
          $ref: '#/definitions/SnapshotIndexStats'
  SnapshotStatusRequest:
    type: object
    properties:
      master_timeout:
        $ref: '#/definitions/Time'
      ignore_unavailable:
        type: boolean
  SnapshotStatusResponse:
    type: object
    properties:
      snapshots:
        type: array
        items:
          $ref: '#/definitions/SnapshotStatus'
  MatchAllQuery:
    type: object
    properties:
      norm_field:
        type: string
  MatchNoneQuery:
    type: object
    properties: {}
  QueryContainer:
    type: object
    properties:
      is_conditionless:
        type: boolean
      is_strict:
        type: boolean
      is_verbatim:
        type: boolean
      is_writable:
        type: boolean
      raw_query:
        $ref: '#/definitions/RawQuery'
      bool:
        $ref: '#/definitions/BoolQuery'
      match_all:
        $ref: '#/definitions/MatchAllQuery'
      match_none:
        $ref: '#/definitions/MatchNoneQuery'
      term:
        $ref: '#/definitions/TermQuery'
      wildcard:
        $ref: '#/definitions/WildcardQuery'
      prefix:
        $ref: '#/definitions/PrefixQuery'
      boosting:
        $ref: '#/definitions/BoostingQuery'
      ids:
        $ref: '#/definitions/IdsQuery'
      constant_score:
        $ref: '#/definitions/ConstantScoreQuery'
      dis_max:
        $ref: '#/definitions/DisMaxQuery'
      multi_match:
        $ref: '#/definitions/MultiMatchQuery'
      match:
        $ref: '#/definitions/MatchQuery'
      match_phrase:
        $ref: '#/definitions/MatchPhraseQuery'
      match_phrase_prefix:
        $ref: '#/definitions/MatchPhrasePrefixQuery'
      fuzzy:
        $ref: '#/definitions/FuzzyQuery'
      geo_shape:
        $ref: '#/definitions/GeoShapeQuery'
      common:
        $ref: '#/definitions/CommonTermsQuery'
      terms:
        $ref: '#/definitions/TermsQuery'
      range:
        $ref: '#/definitions/RangeQuery'
      regexp:
        $ref: '#/definitions/RegexpQuery'
      has_child:
        $ref: '#/definitions/HasChildQuery'
      has_parent:
        $ref: '#/definitions/HasParentQuery'
      parent_id:
        $ref: '#/definitions/ParentIdQuery'
      span_term:
        $ref: '#/definitions/SpanTermQuery'
      simple_query_string:
        $ref: '#/definitions/SimpleQueryStringQuery'
      query_string:
        $ref: '#/definitions/QueryStringQuery'
      more_like_this:
        $ref: '#/definitions/MoreLikeThisQuery'
      span_first:
        $ref: '#/definitions/SpanFirstQuery'
      span_or:
        $ref: '#/definitions/SpanOrQuery'
      span_near:
        $ref: '#/definitions/SpanNearQuery'
      span_not:
        $ref: '#/definitions/SpanNotQuery'
      span_containing:
        $ref: '#/definitions/SpanContainingQuery'
      span_within:
        $ref: '#/definitions/SpanWithinQuery'
      span_multi:
        $ref: '#/definitions/SpanMultiTermQuery'
      field_masking_span:
        $ref: '#/definitions/SpanFieldMaskingQuery'
      nested:
        $ref: '#/definitions/NestedQuery'
      function_score:
        $ref: '#/definitions/FunctionScoreQuery'
      geo_bounding_box:
        $ref: '#/definitions/GeoBoundingBoxQuery'
      geo_distance:
        $ref: '#/definitions/GeoDistanceQuery'
      geo_polygon:
        $ref: '#/definitions/GeoPolygonQuery'
      script:
        $ref: '#/definitions/ScriptQuery'
      exists:
        $ref: '#/definitions/ExistsQuery'
      type:
        $ref: '#/definitions/TypeQuery'
      percolate:
        $ref: '#/definitions/PercolateQuery'
  FieldLookup:
    type: object
    properties:
      index:
        $ref: '#/definitions/IndexName'
      type:
        $ref: '#/definitions/TypeName'
      id:
        $ref: '#/definitions/Id'
      path:
        $ref: '#/definitions/Field'
      routing:
        $ref: '#/definitions/Routing'
  FieldNameQuery:
    type: object
    properties:
      field:
        $ref: '#/definitions/Field'
  Query:
    type: object
    properties:
      _name:
        type: string
      boost:
        $ref: '#/definitions/double'
      conditionless:
        type: boolean
      is_verbatim:
        type: boolean
      is_strict:
        type: boolean
      is_writable:
        type: boolean
  BoolQuery:
    type: object
    properties:
      must:
        type: array
        items:
          $ref: '#/definitions/QueryContainer'
      must_not:
        type: array
        items:
          $ref: '#/definitions/QueryContainer'
      should:
        type: array
        items:
          $ref: '#/definitions/QueryContainer'
      filter:
        type: array
        items:
          $ref: '#/definitions/QueryContainer'
      minimum_should_match:
        $ref: '#/definitions/MinimumShouldMatch'
      locked:
        type: boolean
  BoostingQuery:
    type: object
    properties:
      positive:
        $ref: '#/definitions/QueryContainer'
      negative:
        $ref: '#/definitions/QueryContainer'
      negative_boost:
        $ref: '#/definitions/double'
  ConstantScoreQuery:
    type: object
    properties:
      filter:
        $ref: '#/definitions/QueryContainer'
  DisMaxQuery:
    type: object
    properties:
      tie_breaker:
        $ref: '#/definitions/double'
      queries:
        type: array
        items:
          $ref: '#/definitions/QueryContainer'
  FunctionScoreQuery:
    type: object
    properties:
      query:
        $ref: '#/definitions/QueryContainer'
      functions:
        type: array
        items:
          $ref: '#/definitions/ScoreFunction'
      max_boost:
        $ref: '#/definitions/double'
      score_mode:
        $ref: '#/definitions/FunctionScoreMode'
      boost_mode:
        $ref: '#/definitions/FunctionBoostMode'
      min_score:
        $ref: '#/definitions/double'
  ScoreFunction:
    type: object
    properties:
      filter:
        $ref: '#/definitions/QueryContainer'
      weight:
        $ref: '#/definitions/double'
  CommonTermsQuery:
    type: object
    properties:
      query:
        type: string
      cutoff_frequency:
        $ref: '#/definitions/double'
      low_freq_operator:
        $ref: '#/definitions/Operator'
      high_freq_operator:
        $ref: '#/definitions/Operator'
      minimum_should_match:
        $ref: '#/definitions/MinimumShouldMatch'
      analyzer:
        type: string
  MatchQuery:
    type: object
    properties:
      query:
        type: string
      analyzer:
        type: string
      fuzzy_rewrite:
        $ref: '#/definitions/MultiTermQueryRewrite'
      fuzziness:
        $ref: '#/definitions/Fuzziness'
      fuzzy_transpositions:
        type: boolean
      cutoff_frequency:
        $ref: '#/definitions/double'
      prefix_length:
        $ref: '#/definitions/integer'
      max_expansions:
        $ref: '#/definitions/integer'
      lenient:
        type: boolean
      minimum_should_match:
        $ref: '#/definitions/MinimumShouldMatch'
      operator:
        $ref: '#/definitions/Operator'
      zero_terms_query:
        $ref: '#/definitions/ZeroTermsQuery'
  MatchPhraseQuery:
    type: object
    properties:
      query:
        type: string
      analyzer:
        type: string
      slop:
        $ref: '#/definitions/integer'
  MatchPhrasePrefixQuery:
    type: object
    properties:
      query:
        type: string
      analyzer:
        type: string
      max_expansions:
        $ref: '#/definitions/integer'
      slop:
        $ref: '#/definitions/integer'
  MultiMatchQuery:
    type: object
    properties:
      type:
        $ref: '#/definitions/TextQueryType'
      query:
        type: string
      analyzer:
        type: string
      fuzzy_rewrite:
        $ref: '#/definitions/MultiTermQueryRewrite'
      fuzziness:
        $ref: '#/definitions/Fuzziness'
      cutoff_frequency:
        $ref: '#/definitions/double'
      prefix_length:
        $ref: '#/definitions/integer'
      max_expansions:
        $ref: '#/definitions/integer'
      slop:
        $ref: '#/definitions/integer'
      lenient:
        type: boolean
      use_dis_max:
        type: boolean
      tie_breaker:
        $ref: '#/definitions/double'
      minimum_should_match:
        $ref: '#/definitions/MinimumShouldMatch'
      operator:
        $ref: '#/definitions/Operator'
      fields:
        type: array
        items:
          $ref: '#/definitions/Field'
      zero_terms_query:
        $ref: '#/definitions/ZeroTermsQuery'
  QueryStringQuery:
    type: object
    properties:
      type:
        $ref: '#/definitions/TextQueryType'
      query:
        type: string
      default_field:
        $ref: '#/definitions/Field'
      default_operator:
        $ref: '#/definitions/Operator'
      analyzer:
        type: string
      quote_analyzer:
        type: string
      allow_leading_wildcard:
        type: boolean
      fuzzy_max_expansions:
        $ref: '#/definitions/integer'
      fuzziness:
        $ref: '#/definitions/Fuzziness'
      fuzzy_prefix_length:
        $ref: '#/definitions/integer'
      phrase_slop:
        $ref: '#/definitions/double'
      analyze_wildcard:
        type: boolean
      max_determinized_states:
        $ref: '#/definitions/integer'
      minimum_should_match:
        $ref: '#/definitions/MinimumShouldMatch'
      lenient:
        type: boolean
      fields:
        type: array
        items:
          $ref: '#/definitions/Field'
      tie_breaker:
        $ref: '#/definitions/double'
      rewrite:
        $ref: '#/definitions/MultiTermQueryRewrite'
      fuzzy_rewrite:
        $ref: '#/definitions/MultiTermQueryRewrite'
      quote_field_suffix:
        type: string
      escape:
        type: boolean
  SimpleQueryStringQuery:
    type: object
    properties:
      fields:
        type: array
        items:
          $ref: '#/definitions/Field'
      query:
        type: string
      analyzer:
        type: string
      default_operator:
        $ref: '#/definitions/Operator'
      flags:
        $ref: '#/definitions/SimpleQueryStringFlags'
      lenient:
        type: boolean
      analyze_wildcard:
        type: boolean
      minimum_should_match:
        $ref: '#/definitions/MinimumShouldMatch'
      quote_field_suffix:
        type: string
  GeoLocation:
    type: object
    properties:
      lat:
        $ref: '#/definitions/double'
      lon:
        $ref: '#/definitions/double'
  BoundingBox:
    type: object
    properties:
      top_left:
        $ref: '#/definitions/GeoLocation'
      bottom_right:
        $ref: '#/definitions/GeoLocation'
  GeoBoundingBoxQuery:
    type: object
    properties:
      bounding_box:
        $ref: '#/definitions/BoundingBox'
      type:
        $ref: '#/definitions/GeoExecution'
      validation_method:
        $ref: '#/definitions/GeoValidationMethod'
  GeoDistanceQuery:
    type: object
    properties:
      location:
        $ref: '#/definitions/GeoLocation'
      distance:
        $ref: '#/definitions/Distance'
      distance_type:
        $ref: '#/definitions/GeoDistanceType'
      validation_method:
        $ref: '#/definitions/GeoValidationMethod'
  GeoPolygonQuery:
    type: object
    properties:
      points:
        type: array
        items:
          $ref: '#/definitions/GeoLocation'
      validation_method:
        $ref: '#/definitions/GeoValidationMethod'
  GeoShapeQuery:
    type: object
    properties:
      relation:
        $ref: '#/definitions/GeoShapeRelation'
  HasChildQuery:
    type: object
    properties:
      type:
        $ref: '#/definitions/TypeName'
      score_mode:
        $ref: '#/definitions/ChildScoreMode'
      min_children:
        $ref: '#/definitions/integer'
      max_children:
        $ref: '#/definitions/integer'
      query:
        $ref: '#/definitions/QueryContainer'
      inner_hits:
        $ref: '#/definitions/InnerHits'
      ignore_unmapped:
        type: boolean
  HasParentQuery:
    type: object
    properties:
      parent_type:
        $ref: '#/definitions/TypeName'
      score:
        type: boolean
      query:
        $ref: '#/definitions/QueryContainer'
      inner_hits:
        $ref: '#/definitions/InnerHits'
      ignore_unmapped:
        type: boolean
  NestedQuery:
    type: object
    properties:
      score_mode:
        $ref: '#/definitions/NestedScoreMode'
      query:
        $ref: '#/definitions/QueryContainer'
      path:
        $ref: '#/definitions/Field'
      inner_hits:
        $ref: '#/definitions/InnerHits'
      ignore_unmapped:
        type: boolean
  ParentIdQuery:
    type: object
    properties:
      type:
        $ref: '#/definitions/RelationName'
      id:
        $ref: '#/definitions/Id'
      ignore_unmapped:
        type: boolean
  MultiTermQueryRewrite:
    type: object
    properties:
      rewrite:
        $ref: '#/definitions/RewriteMultiTerm'
      size:
        $ref: '#/definitions/integer'
      constant_score:
        $ref: '#/definitions/MultiTermQueryRewrite'
      scoring_boolean:
        $ref: '#/definitions/MultiTermQueryRewrite'
      constant_score_boolean:
        $ref: '#/definitions/MultiTermQueryRewrite'
  RawQuery:
    type: object
    properties:
      raw:
        type: string
  SpanQuery:
    type: object
    properties:
      span_term:
        $ref: '#/definitions/SpanTermQuery'
      span_first:
        $ref: '#/definitions/SpanFirstQuery'
      span_near:
        $ref: '#/definitions/SpanNearQuery'
      span_or:
        $ref: '#/definitions/SpanOrQuery'
      span_not:
        $ref: '#/definitions/SpanNotQuery'
      span_containing:
        $ref: '#/definitions/SpanContainingQuery'
      span_within:
        $ref: '#/definitions/SpanWithinQuery'
      span_multi:
        $ref: '#/definitions/SpanMultiTermQuery'
      field_masking_span:
        $ref: '#/definitions/SpanFieldMaskingQuery'
  SpanSubQuery:
    type: object
    properties: {}
  SpanContainingQuery:
    type: object
    properties:
      little:
        $ref: '#/definitions/SpanQuery'
      big:
        $ref: '#/definitions/SpanQuery'
  SpanFieldMaskingQuery:
    type: object
    properties:
      field:
        $ref: '#/definitions/Field'
      query:
        $ref: '#/definitions/SpanQuery'
  SpanFirstQuery:
    type: object
    properties:
      match:
        $ref: '#/definitions/SpanQuery'
      end:
        $ref: '#/definitions/integer'
  SpanMultiTermQuery:
    type: object
    properties:
      match:
        $ref: '#/definitions/QueryContainer'
  SpanNearQuery:
    type: object
    properties:
      clauses:
        type: array
        items:
          $ref: '#/definitions/SpanQuery'
      slop:
        $ref: '#/definitions/integer'
      in_order:
        type: boolean
  SpanNotQuery:
    type: object
    properties:
      include:
        $ref: '#/definitions/SpanQuery'
      exclude:
        $ref: '#/definitions/SpanQuery'
      pre:
        $ref: '#/definitions/integer'
      post:
        $ref: '#/definitions/integer'
      dist:
        $ref: '#/definitions/integer'
  SpanOrQuery:
    type: object
    properties:
      clauses:
        type: array
        items:
          $ref: '#/definitions/SpanQuery'
  SpanTermQuery:
    type: object
    properties: {}
  SpanWithinQuery:
    type: object
    properties:
      little:
        $ref: '#/definitions/SpanQuery'
      big:
        $ref: '#/definitions/SpanQuery'
  MoreLikeThisQuery:
    type: object
    properties:
      fields:
        type: array
        items:
          $ref: '#/definitions/Field'
      like:
        type: array
        items:
          $ref: '#/definitions/Like'
      unlike:
        type: array
        items:
          $ref: '#/definitions/Like'
      max_query_terms:
        $ref: '#/definitions/integer'
      min_term_freq:
        $ref: '#/definitions/integer'
      min_doc_freq:
        $ref: '#/definitions/integer'
      max_doc_freq:
        $ref: '#/definitions/integer'
      min_word_length:
        $ref: '#/definitions/integer'
      max_word_length:
        $ref: '#/definitions/integer'
      stop_words:
        $ref: '#/definitions/StopWords'
      analyzer:
        type: string
      minimum_should_match:
        $ref: '#/definitions/MinimumShouldMatch'
      boost_terms:
        $ref: '#/definitions/double'
      include:
        type: boolean
      per_field_analyzer:
        type: object
        additionalProperties:
          type: string
      version:
        $ref: '#/definitions/long'
      version_type:
        $ref: '#/definitions/VersionType'
      routing:
        $ref: '#/definitions/Routing'
  Like:
    type: object
    properties: {}
  LikeDocument:
    type: object
    properties:
      _index:
        $ref: '#/definitions/IndexName'
      _type:
        $ref: '#/definitions/TypeName'
      _id:
        $ref: '#/definitions/Id'
      fields:
        type: array
        items:
          $ref: '#/definitions/Field'
      _routing:
        $ref: '#/definitions/Routing'
      doc:
        $ref: '#/definitions/object'
      per_field_analyzer:
        type: object
        additionalProperties:
          type: string
  PercolateQuery:
    type: object
    properties:
      field:
        $ref: '#/definitions/Field'
      document_type:
        $ref: '#/definitions/TypeName'
      document:
        $ref: '#/definitions/object'
      id:
        $ref: '#/definitions/Id'
      index:
        $ref: '#/definitions/IndexName'
      type:
        $ref: '#/definitions/TypeName'
      routing:
        $ref: '#/definitions/Routing'
      preference:
        type: string
      version:
        $ref: '#/definitions/long'
  ScriptQuery:
    type: object
    properties:
      source:
        type: string
      inline:
        type: string
      id:
        $ref: '#/definitions/Id'
      params:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
      lang:
        type: string
  ExistsQuery:
    type: object
    properties:
      field:
        $ref: '#/definitions/Field'
  FuzzyQuery:
    type: object
    properties:
      prefix_length:
        $ref: '#/definitions/integer'
      rewrite:
        $ref: '#/definitions/MultiTermQueryRewrite'
      max_expansions:
        $ref: '#/definitions/integer'
      transpositions:
        type: boolean
  IdsQuery:
    type: object
    properties:
      type:
        $ref: '#/definitions/Types'
      values:
        type: array
        items:
          $ref: '#/definitions/Id'
  PrefixQuery:
    type: object
    properties:
      rewrite:
        $ref: '#/definitions/MultiTermQueryRewrite'
  RangeQuery:
    type: object
    properties: {}
  RegexpQuery:
    type: object
    properties:
      value:
        type: string
      flags:
        type: string
      max_determinized_states:
        $ref: '#/definitions/integer'
  TermQuery:
    type: object
    properties:
      value:
        $ref: '#/definitions/object'
  TermsQuery:
    type: object
    properties:
      terms:
        type: array
        items:
          $ref: '#/definitions/object'
      terms_lookup:
        $ref: '#/definitions/FieldLookup'
  TypeQuery:
    type: object
    properties:
      value:
        $ref: '#/definitions/TypeName'
  WildcardQuery:
    type: object
    properties:
      rewrite:
        $ref: '#/definitions/MultiTermQueryRewrite'
  CovariantSearchRequest:
    type: object
    properties: {}
  CountRequest:
    type: object
    properties:
      query:
        $ref: '#/definitions/QueryContainer'
      ignore_unavailable:
        type: boolean
      allow_no_indices:
        type: boolean
      expand_wildcards:
        $ref: '#/definitions/ExpandWildcards'
      min_score:
        $ref: '#/definitions/double'
      preference:
        type: string
      routing:
        $ref: '#/definitions/Routing'
      query_on_query_string:
        type: string
      analyzer:
        type: string
      analyze_wildcard:
        type: boolean
      default_operator:
        $ref: '#/definitions/DefaultOperator'
      df:
        type: string
      lenient:
        type: boolean
      terminate_after:
        $ref: '#/definitions/long'
  CountResponse:
    type: object
    properties:
      count:
        $ref: '#/definitions/long'
      _shards:
        $ref: '#/definitions/ShardStatistics'
  ExplainRequest:
    type: object
    properties:
      stored_fields:
        type: array
        items:
          $ref: '#/definitions/Field'
      query:
        $ref: '#/definitions/QueryContainer'
      analyze_wildcard:
        type: boolean
      analyzer:
        type: string
      default_operator:
        $ref: '#/definitions/DefaultOperator'
      df:
        type: string
      lenient:
        type: boolean
      parent:
        type: string
      preference:
        type: string
      query_on_query_string:
        type: string
      routing:
        $ref: '#/definitions/Routing'
      source_enabled:
        type: boolean
      source_exclude:
        type: array
        items:
          $ref: '#/definitions/Field'
      source_include:
        type: array
        items:
          $ref: '#/definitions/Field'
  ExplainResponse:
    type: object
    properties:
      matched:
        type: boolean
      explanation:
        $ref: '#/definitions/ExplanationDetail'
      get:
        $ref: '#/definitions/InstantGet<TDocument>'
  Explanation:
    type: object
    properties:
      value:
        $ref: '#/definitions/float'
      description:
        type: string
      details:
        type: array
        items:
          $ref: '#/definitions/ExplanationDetail'
  ExplanationDetail:
    type: object
    properties:
      value:
        $ref: '#/definitions/float'
      description:
        type: string
      details:
        type: array
        items:
          $ref: '#/definitions/ExplanationDetail'
  InstantGet:
    type: object
    properties:
      found:
        type: boolean
      _source:
        $ref: '#/definitions/TDocument'
      fields:
        type: object
        additionalProperties:
          $ref: '#/definitions/LazyDocument'
  FieldCapabilities:
    type: object
    properties:
      searchable:
        type: boolean
      aggregatable:
        type: boolean
      indices:
        $ref: '#/definitions/Indices'
      non_searchable_indices:
        $ref: '#/definitions/Indices'
      non_aggregatable_indices:
        $ref: '#/definitions/Indices'
  FieldCapabilitiesRequest:
    type: object
    properties:
      fields:
        type: array
        items:
          $ref: '#/definitions/Field'
      ignore_unavailable:
        type: boolean
      allow_no_indices:
        type: boolean
      expand_wildcards:
        $ref: '#/definitions/ExpandWildcards'
  FieldCapabilitiesResponse:
    type: object
    properties:
      shards:
        $ref: '#/definitions/ShardStatistics'
      fields:
        type: object
        additionalProperties:
          type: object
          additionalProperties:
            $ref: '#/definitions/FieldCapabilities'
  MultiSearchRequest:
    type: object
    properties:
      operations:
        type: object
        additionalProperties:
          $ref: '#/definitions/SearchRequest'
      search_type:
        $ref: '#/definitions/SearchType'
      max_concurrent_searches:
        $ref: '#/definitions/long'
      typed_keys:
        type: boolean
      pre_filter_shard_size:
        $ref: '#/definitions/long'
  MultiSearchResponse:
    type: object
    properties:
      is_valid:
        type: boolean
      total_responses:
        $ref: '#/definitions/integer'
      all_responses:
        type: array
        items:
          $ref: '#/definitions/IResponse'
  MultiSearchTemplateRequest:
    type: object
    properties:
      operations:
        type: object
        additionalProperties:
          $ref: '#/definitions/SearchTemplateRequest'
      search_type:
        $ref: '#/definitions/SearchType'
      typed_keys:
        type: boolean
      max_concurrent_searches:
        $ref: '#/definitions/long'
  ClearScrollRequest:
    type: object
    properties:
      scroll_id:
        type: array
        items:
          type: string
  ClearScrollResponse:
    type: object
    properties: {}
  ScrollRequest:
    type: object
    properties:
      scroll:
        $ref: '#/definitions/Time'
      scroll_id:
        type: string
  SlicedScroll:
    type: object
    properties:
      id:
        $ref: '#/definitions/integer'
      max:
        $ref: '#/definitions/integer'
      field:
        $ref: '#/definitions/Field'
  SearchRequest:
    type: object
    properties:
      timeout:
        type: string
      from:
        $ref: '#/definitions/integer'
      size:
        $ref: '#/definitions/integer'
      explain:
        type: boolean
      version:
        type: boolean
      track_scores:
        type: boolean
      profile:
        type: boolean
      min_score:
        $ref: '#/definitions/double'
      terminate_after:
        $ref: '#/definitions/long'
      docvalue_fields:
        type: array
        items:
          $ref: '#/definitions/Field'
      stored_fields:
        type: array
        items:
          $ref: '#/definitions/Field'
      script_fields:
        type: object
        additionalProperties:
          $ref: '#/definitions/ScriptField'
      _source:
        description: 'Not an array but: union<boolean, SourceFilter>'
        type: array
        items:
          - type: boolean
          - $ref: '#/definitions/SourceFilter'
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      search_after:
        type: array
        items:
          $ref: '#/definitions/object'
      indices_boost:
        type: object
        additionalProperties:
          $ref: '#/definitions/double'
      post_filter:
        $ref: '#/definitions/QueryContainer'
      slice:
        $ref: '#/definitions/SlicedScroll'
      query:
        $ref: '#/definitions/QueryContainer'
      rescore:
        type: array
        items:
          $ref: '#/definitions/Rescore'
      suggest:
        type: object
        additionalProperties:
          $ref: '#/definitions/SuggestBucket'
      highlight:
        $ref: '#/definitions/Highlight'
      collapse:
        $ref: '#/definitions/FieldCollapse'
      aggs:
        type: object
        additionalProperties:
          $ref: '#/definitions/AggregationContainer'
      analyzer:
        type: string
      analyze_wildcard:
        type: boolean
      default_operator:
        $ref: '#/definitions/DefaultOperator'
      df:
        type: string
      ignore_unavailable:
        type: boolean
      allow_no_indices:
        type: boolean
      expand_wildcards:
        $ref: '#/definitions/ExpandWildcards'
      lenient:
        type: boolean
      preference:
        type: string
      routing:
        $ref: '#/definitions/Routing'
      scroll:
        $ref: '#/definitions/Time'
      search_type:
        $ref: '#/definitions/SearchType'
      stats:
        type: array
        items:
          type: string
      suggest_field:
        $ref: '#/definitions/Field'
      suggest_mode:
        $ref: '#/definitions/SuggestMode'
      suggest_size:
        $ref: '#/definitions/long'
      suggest_text:
        type: string
      track_total_hits:
        type: boolean
      typed_keys:
        type: boolean
      request_cache:
        type: boolean
      batched_reduce_size:
        $ref: '#/definitions/long'
      max_concurrent_shard_requests:
        $ref: '#/definitions/long'
      pre_filter_shard_size:
        $ref: '#/definitions/long'
  SearchResponse:
    type: object
    properties:
      _shards:
        $ref: '#/definitions/ShardStatistics'
      aggregations:
        type: object
        additionalProperties:
          $ref: '#/definitions/Aggregate'
      aggs:
        type: object
        additionalProperties:
          $ref: '#/definitions/Aggregate'
      profile:
        $ref: '#/definitions/Profile'
      suggest:
        type: object
        additionalProperties:
          type: array
          items:
            $ref: '#/definitions/Suggest<T>'
      took:
        $ref: '#/definitions/long'
      timed_out:
        type: boolean
      terminated_early:
        type: boolean
      _scroll_id:
        type: string
      hits:
        $ref: '#/definitions/HitsMetadata<T>'
      num_reduce_phases:
        $ref: '#/definitions/long'
      total:
        $ref: '#/definitions/long'
      max_score:
        $ref: '#/definitions/double'
      documents:
        type: array
        items:
          $ref: '#/definitions/T'
      fields:
        type: object
        additionalProperties:
          $ref: '#/definitions/LazyDocument'
  FieldCollapse:
    type: object
    properties:
      field:
        $ref: '#/definitions/Field'
      inner_hits:
        $ref: '#/definitions/InnerHits'
      max_concurrent_group_searches:
        $ref: '#/definitions/integer'
  Highlight:
    type: object
    properties:
      pre_tags:
        type: array
        items:
          type: string
      post_tags:
        type: array
        items:
          type: string
      fragment_size:
        $ref: '#/definitions/integer'
      no_match_size:
        $ref: '#/definitions/integer'
      number_of_fragments:
        $ref: '#/definitions/integer'
      fragment_offset:
        $ref: '#/definitions/integer'
      boundary_max_scan:
        $ref: '#/definitions/integer'
      encoder:
        $ref: '#/definitions/HighlighterEncoder'
      order:
        $ref: '#/definitions/HighlighterOrder'
      tags_schema:
        $ref: '#/definitions/HighlighterTagsSchema'
      fields:
        type: object
        additionalProperties:
          $ref: '#/definitions/HighlightField'
      require_field_match:
        type: boolean
      boundary_chars:
        type: string
      max_fragment_length:
        $ref: '#/definitions/integer'
      boundary_scanner:
        $ref: '#/definitions/BoundaryScanner'
      boundary_scanner_locale:
        type: string
      fragmenter:
        $ref: '#/definitions/HighlighterFragmenter'
  HighlightField:
    type: object
    properties:
      field:
        $ref: '#/definitions/Field'
      pre_tags:
        type: array
        items:
          type: string
      post_tags:
        type: array
        items:
          type: string
      fragment_size:
        $ref: '#/definitions/integer'
      no_match_size:
        $ref: '#/definitions/integer'
      number_of_fragments:
        $ref: '#/definitions/integer'
      fragment_offset:
        $ref: '#/definitions/integer'
      boundary_max_scan:
        $ref: '#/definitions/integer'
      order:
        $ref: '#/definitions/HighlighterOrder'
      tags_schema:
        $ref: '#/definitions/HighlighterTagsSchema'
      require_field_match:
        type: boolean
      boundary_chars:
        type: string
      max_fragment_length:
        $ref: '#/definitions/integer'
      boundary_scanner:
        $ref: '#/definitions/BoundaryScanner'
      boundary_scanner_locale:
        type: string
      fragmenter:
        $ref: '#/definitions/HighlighterFragmenter'
      type:
        description: 'Not an array but: union<HighlighterType, string>'
        type: array
        items:
          - $ref: '#/definitions/HighlighterType'
          - type: string
      force_source:
        type: boolean
      matched_fields:
        type: array
        items:
          $ref: '#/definitions/Field'
      highlight_query:
        $ref: '#/definitions/QueryContainer'
      phrase_limit:
        $ref: '#/definitions/integer'
  HighlightHit:
    type: object
    properties:
      document_id:
        type: string
      field:
        type: string
      highlights:
        type: array
        items:
          type: string
  Hit:
    type: object
    properties:
      score:
        $ref: '#/definitions/double'
      fields:
        type: object
        additionalProperties:
          $ref: '#/definitions/LazyDocument'
      sorts:
        type: array
        items:
          $ref: '#/definitions/object'
      highlights:
        type: object
        additionalProperties:
          $ref: '#/definitions/HighlightHit'
      explanation:
        $ref: '#/definitions/Explanation'
      matched_queries:
        type: array
        items:
          type: string
      inner_hits:
        type: object
        additionalProperties:
          $ref: '#/definitions/InnerHitsResult'
  HitMetadata:
    type: object
    properties:
      index:
        type: string
      type:
        type: string
      version:
        $ref: '#/definitions/long'
      routing:
        type: string
      id:
        type: string
      parent:
        type: string
      source:
        $ref: '#/definitions/TDocument'
  HitsMetadata:
    type: object
    properties:
      total:
        $ref: '#/definitions/long'
      max_score:
        $ref: '#/definitions/double'
      hits:
        type: array
        items:
          $ref: '#/definitions/Hit<T>'
  InnerHitsMetadata:
    type: object
    properties:
      total:
        $ref: '#/definitions/long'
      max_score:
        $ref: '#/definitions/double'
      hits:
        type: array
        items:
          $ref: '#/definitions/Hit<LazyDocument>'
  InnerHitsResult:
    type: object
    properties:
      hits:
        $ref: '#/definitions/InnerHitsMetadata'
  NestedIdentity:
    type: object
    properties:
      field:
        $ref: '#/definitions/Field'
      offset:
        $ref: '#/definitions/integer'
      _nested:
        $ref: '#/definitions/NestedIdentity'
  InnerHits:
    type: object
    properties:
      name:
        type: string
      from:
        $ref: '#/definitions/integer'
      size:
        $ref: '#/definitions/integer'
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      highlight:
        $ref: '#/definitions/Highlight'
      explain:
        type: boolean
      _source:
        description: 'Not an array but: union<boolean, SourceFilter>'
        type: array
        items:
          - type: boolean
          - $ref: '#/definitions/SourceFilter'
      version:
        type: boolean
      script_fields:
        type: object
        additionalProperties:
          $ref: '#/definitions/ScriptField'
      docvalue_fields:
        type: array
        items:
          $ref: '#/definitions/Field'
  AggregationBreakdown:
    type: object
    properties:
      reduce:
        $ref: '#/definitions/long'
      build_aggregation:
        $ref: '#/definitions/long'
      build_aggregation_count:
        $ref: '#/definitions/long'
      initialize:
        $ref: '#/definitions/long'
      intialize_count:
        $ref: '#/definitions/long'
      reduce_count:
        $ref: '#/definitions/long'
      collect:
        $ref: '#/definitions/long'
      collect_count:
        $ref: '#/definitions/long'
  AggregationProfile:
    type: object
    properties:
      type:
        type: string
      description:
        type: string
      time_in_nanos:
        $ref: '#/definitions/long'
      breakdown:
        $ref: '#/definitions/AggregationBreakdown'
  Collector:
    type: object
    properties:
      name:
        type: string
      reason:
        type: string
      time_in_nanos:
        $ref: '#/definitions/long'
      children:
        type: array
        items:
          $ref: '#/definitions/Collector'
  Profile:
    type: object
    properties:
      shards:
        type: array
        items:
          $ref: '#/definitions/ShardProfile'
  QueryBreakdown:
    type: object
    properties:
      score:
        $ref: '#/definitions/long'
      next_doc:
        $ref: '#/definitions/long'
      create_weight:
        $ref: '#/definitions/long'
      build_scorer:
        $ref: '#/definitions/long'
      advance:
        $ref: '#/definitions/long'
      match:
        $ref: '#/definitions/long'
  QueryProfile:
    type: object
    properties:
      type:
        type: string
      description:
        type: string
      time_in_nanos:
        $ref: '#/definitions/long'
      breakdown:
        $ref: '#/definitions/QueryBreakdown'
      children:
        type: array
        items:
          $ref: '#/definitions/QueryProfile'
  SearchProfile:
    type: object
    properties:
      rewrite_time:
        $ref: '#/definitions/long'
      query:
        type: array
        items:
          $ref: '#/definitions/QueryProfile'
      collector:
        type: array
        items:
          $ref: '#/definitions/Collector'
  ShardProfile:
    type: object
    properties:
      id:
        type: string
      searches:
        type: array
        items:
          $ref: '#/definitions/SearchProfile'
      aggregations:
        type: array
        items:
          $ref: '#/definitions/AggregationProfile'
  Rescore:
    type: object
    properties:
      window_size:
        $ref: '#/definitions/integer'
      query:
        $ref: '#/definitions/RescoreQuery'
  RescoreQuery:
    type: object
    properties:
      rescore_query:
        $ref: '#/definitions/QueryContainer'
      query_weight:
        $ref: '#/definitions/double'
      rescore_query_weight:
        $ref: '#/definitions/double'
      score_mode:
        $ref: '#/definitions/ScoreMode'
  Sort:
    type: object
    properties:
      sort_key:
        $ref: '#/definitions/Field'
      missing:
        $ref: '#/definitions/object'
      order:
        $ref: '#/definitions/SortOrder'
      mode:
        $ref: '#/definitions/SortMode'
      nested_filter:
        $ref: '#/definitions/QueryContainer'
      nested_path:
        $ref: '#/definitions/Field'
  SourceFilter:
    type: object
    properties:
      includes:
        type: array
        items:
          $ref: '#/definitions/Field'
      excludes:
        type: array
        items:
          $ref: '#/definitions/Field'
  SearchNode:
    type: object
    properties:
      name:
        type: string
      transport_address:
        type: string
  SearchShard:
    type: object
    properties:
      state:
        type: string
      primary:
        type: boolean
      node:
        type: string
      relocating_node:
        type: string
      shard:
        $ref: '#/definitions/integer'
      index:
        type: string
  SearchShardsRequest:
    type: object
    properties:
      preference:
        type: string
      routing:
        $ref: '#/definitions/Routing'
      local:
        type: boolean
      ignore_unavailable:
        type: boolean
      allow_no_indices:
        type: boolean
      expand_wildcards:
        $ref: '#/definitions/ExpandWildcards'
  SearchShardsResponse:
    type: object
    properties:
      shards:
        type: array
        items:
          type: array
          items:
            $ref: '#/definitions/SearchShard'
      nodes:
        type: object
        additionalProperties:
          $ref: '#/definitions/SearchNode'
  SearchTemplateRequest:
    type: object
    properties:
      source:
        type: string
      inline:
        type: string
      id:
        type: string
      params:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
      ignore_unavailable:
        type: boolean
      allow_no_indices:
        type: boolean
      expand_wildcards:
        $ref: '#/definitions/ExpandWildcards'
      preference:
        type: string
      routing:
        $ref: '#/definitions/Routing'
      scroll:
        $ref: '#/definitions/Time'
      search_type:
        $ref: '#/definitions/SearchType'
      explain:
        type: boolean
      profile:
        type: boolean
      typed_keys:
        type: boolean
  RenderSearchTemplateRequest:
    type: object
    properties:
      source:
        type: string
      inline:
        type: string
      file:
        type: string
      params:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
  RenderSearchTemplateResponse:
    type: object
    properties:
      template_output:
        $ref: '#/definitions/LazyDocument'
  Suggest:
    type: object
    properties:
      length:
        $ref: '#/definitions/integer'
      offset:
        $ref: '#/definitions/integer'
      text:
        type: string
      options:
        type: array
        items:
          $ref: '#/definitions/SuggestOption<T>'
  SuggestBucket:
    type: object
    properties:
      text:
        type: string
      prefix:
        type: string
      regex:
        type: string
      term:
        $ref: '#/definitions/TermSuggester'
      phrase:
        $ref: '#/definitions/PhraseSuggester'
      completion:
        $ref: '#/definitions/CompletionSuggester'
  SuggestOption:
    type: object
    properties:
      text:
        type: string
      score:
        $ref: '#/definitions/double'
      freq:
        $ref: '#/definitions/long'
      _index:
        $ref: '#/definitions/IndexName'
      _type:
        $ref: '#/definitions/TypeName'
      _id:
        $ref: '#/definitions/Id'
      _source:
        $ref: '#/definitions/TDocument'
      contexts:
        type: object
        additionalProperties:
          type: array
          items:
            $ref: '#/definitions/Context'
      highlighted:
        type: string
      collate_match:
        type: boolean
  Suggester:
    type: object
    properties:
      field:
        $ref: '#/definitions/Field'
      analyzer:
        type: string
      size:
        $ref: '#/definitions/integer'
  CompletionSuggester:
    type: object
    properties:
      prefix:
        type: string
      regex:
        type: string
      fuzzy:
        $ref: '#/definitions/FuzzySuggester'
      contexts:
        type: object
        additionalProperties:
          type: array
          items:
            $ref: '#/definitions/SuggestContextQuery'
  FuzzySuggester:
    type: object
    properties:
      transpositions:
        type: boolean
      min_length:
        $ref: '#/definitions/integer'
      prefix_length:
        $ref: '#/definitions/integer'
      fuzziness:
        $ref: '#/definitions/Fuzziness'
      unicode_aware:
        type: boolean
  Context:
    type: object
    properties:
      category:
        type: string
      geo:
        $ref: '#/definitions/GeoLocation'
  SuggestContext:
    type: object
    properties:
      name:
        type: string
      type:
        type: string
      path:
        $ref: '#/definitions/Field'
  SuggestContextQuery:
    type: object
    properties:
      context:
        $ref: '#/definitions/Context'
      boost:
        $ref: '#/definitions/double'
      prefix:
        type: boolean
      precision:
        description: 'Not an array but: union<Distance, integer>'
        type: array
        items:
          - $ref: '#/definitions/Distance'
          - $ref: '#/definitions/integer'
      neighbours:
        description: 'Not an array but: union<Distance[], integer[]>'
        type: array
        items:
          - type: array
            items:
              $ref: '#/definitions/Distance'
          - type: array
            items:
              $ref: '#/definitions/integer'
  DirectGenerator:
    type: object
    properties:
      field:
        $ref: '#/definitions/Field'
      size:
        $ref: '#/definitions/integer'
      prefix_length:
        $ref: '#/definitions/integer'
      suggest_mode:
        $ref: '#/definitions/SuggestMode'
      min_word_length:
        $ref: '#/definitions/integer'
      max_edits:
        $ref: '#/definitions/integer'
      max_inspections:
        $ref: '#/definitions/double'
      min_doc_freq:
        $ref: '#/definitions/double'
      max_term_freq:
        $ref: '#/definitions/double'
      pre_filter:
        type: string
      post_filter:
        type: string
  PhraseSuggestCollate:
    type: object
    properties:
      query:
        $ref: '#/definitions/PhraseSuggestCollateQuery'
      prune:
        type: boolean
      params:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
  PhraseSuggestCollateQuery:
    type: object
    properties:
      source:
        type: string
      id:
        $ref: '#/definitions/Id'
  PhraseSuggestHighlight:
    type: object
    properties:
      pre_tag:
        type: string
      post_tag:
        type: string
  PhraseSuggester:
    type: object
    properties:
      text:
        type: string
      shard_size:
        $ref: '#/definitions/integer'
      gram_size:
        $ref: '#/definitions/integer'
      real_word_error_likelihood:
        $ref: '#/definitions/double'
      confidence:
        $ref: '#/definitions/double'
      max_errors:
        $ref: '#/definitions/double'
      separator:
        type: string
      direct_generator:
        type: array
        items:
          $ref: '#/definitions/DirectGenerator'
      highlight:
        $ref: '#/definitions/PhraseSuggestHighlight'
      collate:
        $ref: '#/definitions/PhraseSuggestCollate'
      smoothing:
        $ref: '#/definitions/SmoothingModelContainer'
  LaplaceSmoothingModel:
    type: object
    properties:
      alpha:
        $ref: '#/definitions/double'
  LinearInterpolationSmoothingModel:
    type: object
    properties:
      trigram_lambda:
        $ref: '#/definitions/double'
      bigram_lambda:
        $ref: '#/definitions/double'
      unigram_lambda:
        $ref: '#/definitions/double'
  SmoothingModel:
    type: object
    properties: {}
  SmoothingModelContainer:
    type: object
    properties:
      stupid_backoff:
        $ref: '#/definitions/StupidBackoffSmoothingModel'
      laplace:
        $ref: '#/definitions/LaplaceSmoothingModel'
      linear_interpolation:
        $ref: '#/definitions/LinearInterpolationSmoothingModel'
  StupidBackoffSmoothingModel:
    type: object
    properties:
      discount:
        $ref: '#/definitions/double'
  TermSuggester:
    type: object
    properties:
      text:
        type: string
      shard_size:
        $ref: '#/definitions/integer'
      prefix_length:
        $ref: '#/definitions/integer'
      suggest_mode:
        $ref: '#/definitions/SuggestMode'
      min_word_length:
        $ref: '#/definitions/integer'
      max_edits:
        $ref: '#/definitions/integer'
      max_inspections:
        $ref: '#/definitions/integer'
      min_doc_freq:
        $ref: '#/definitions/double'
      max_term_freq:
        $ref: '#/definitions/double'
      sort:
        $ref: '#/definitions/SuggestSort'
      lowercase_terms:
        type: boolean
      string_distance:
        $ref: '#/definitions/StringDistance'
  ValidateQueryRequest:
    type: object
    properties:
      query:
        $ref: '#/definitions/QueryContainer'
      explain:
        type: boolean
      ignore_unavailable:
        type: boolean
      allow_no_indices:
        type: boolean
      expand_wildcards:
        $ref: '#/definitions/ExpandWildcards'
      operation_threading:
        type: string
      query_on_query_string:
        type: string
      analyzer:
        type: string
      analyze_wildcard:
        type: boolean
      default_operator:
        $ref: '#/definitions/DefaultOperator'
      df:
        type: string
      lenient:
        type: boolean
      rewrite:
        type: boolean
      all_shards:
        type: boolean
  ValidateQueryResponse:
    type: object
    properties:
      valid:
        type: boolean
      _shards:
        $ref: '#/definitions/ShardStatistics'
      explanations:
        type: array
        items:
          $ref: '#/definitions/ValidationExplanation'
  ValidationExplanation:
    type: object
    properties:
      index:
        type: string
      valid:
        type: boolean
      error:
        type: string
      explanation:
        type: string
  GraphExploreRequest:
    type: object
    properties:
      query:
        $ref: '#/definitions/QueryContainer'
      vertices:
        type: array
        items:
          $ref: '#/definitions/GraphVertexDefinition'
      connections:
        $ref: '#/definitions/Hop'
      controls:
        $ref: '#/definitions/GraphExploreControls'
      routing:
        $ref: '#/definitions/Routing'
      timeout:
        $ref: '#/definitions/Time'
  GraphExploreResponse:
    type: object
    properties:
      took:
        $ref: '#/definitions/long'
      timed_out:
        type: boolean
      connections:
        type: array
        items:
          $ref: '#/definitions/GraphConnection'
      vertices:
        type: array
        items:
          $ref: '#/definitions/GraphVertex'
      failures:
        type: array
        items:
          $ref: '#/definitions/ShardFailure'
  GraphExploreControls:
    type: object
    properties:
      use_significance:
        type: boolean
      sample_size:
        $ref: '#/definitions/integer'
      timeout:
        $ref: '#/definitions/Time'
      sample_diversity:
        $ref: '#/definitions/SampleDiversity'
  GraphVertexDefinition:
    type: object
    properties:
      field:
        $ref: '#/definitions/Field'
      size:
        $ref: '#/definitions/integer'
      min_doc_count:
        $ref: '#/definitions/long'
      shard_min_doc_count:
        $ref: '#/definitions/long'
      exclude:
        type: array
        items:
          type: string
      include:
        type: array
        items:
          $ref: '#/definitions/GraphVertexInclude'
  GraphVertexInclude:
    type: object
    properties:
      term:
        type: string
      boost:
        $ref: '#/definitions/double'
  Hop:
    type: object
    properties:
      query:
        $ref: '#/definitions/QueryContainer'
      vertices:
        type: array
        items:
          $ref: '#/definitions/GraphVertexDefinition'
      connections:
        $ref: '#/definitions/Hop'
  SampleDiversity:
    type: object
    properties:
      field:
        $ref: '#/definitions/Field'
      max_docs_per_value:
        $ref: '#/definitions/integer'
  GraphConnection:
    type: object
    properties:
      doc_count:
        $ref: '#/definitions/long'
      source:
        $ref: '#/definitions/long'
      target:
        $ref: '#/definitions/long'
      weight:
        $ref: '#/definitions/double'
  GraphVertex:
    type: object
    properties:
      depth:
        $ref: '#/definitions/long'
      field:
        type: string
      term:
        type: string
      weight:
        $ref: '#/definitions/double'
  MinimalLicenseInformation:
    type: object
    properties:
      uid:
        type: string
      type:
        $ref: '#/definitions/LicenseType'
      mode:
        $ref: '#/definitions/LicenseType'
      status:
        $ref: '#/definitions/LicenseStatus'
      expiry_date_in_millis:
        $ref: '#/definitions/long'
  NativeCodeInformation:
    type: object
    properties:
      version:
        type: string
      build_hash:
        type: string
  XPackBuildInformation:
    type: object
    properties:
      date:
        $ref: '#/definitions/Date'
      hash:
        type: string
  XPackFeature:
    type: object
    properties:
      description:
        type: string
      available:
        type: boolean
      enabled:
        type: boolean
      native_code_info:
        $ref: '#/definitions/NativeCodeInformation'
  XPackFeatures:
    type: object
    properties:
      watcher:
        $ref: '#/definitions/XPackFeature'
      graph:
        $ref: '#/definitions/XPackFeature'
      ml:
        $ref: '#/definitions/XPackFeature'
      monitoring:
        $ref: '#/definitions/XPackFeature'
      security:
        $ref: '#/definitions/XPackFeature'
  XPackInfoRequest:
    type: object
    properties:
      categories:
        type: array
        items:
          type: string
  XPackInfoResponse:
    type: object
    properties:
      build:
        $ref: '#/definitions/XPackBuildInformation'
      license:
        $ref: '#/definitions/MinimalLicenseInformation'
      features:
        $ref: '#/definitions/XPackFeatures'
      tagline:
        type: string
  AlertingCount:
    type: object
    properties:
      total:
        $ref: '#/definitions/long'
      active:
        $ref: '#/definitions/long'
  AlertingExecution:
    type: object
    properties:
      actions:
        type: object
        additionalProperties:
          $ref: '#/definitions/ExecutionAction'
  AlertingUsage:
    type: object
    properties:
      execution:
        $ref: '#/definitions/AlertingExecution'
      count:
        $ref: '#/definitions/AlertingCount'
  AuditUsage:
    type: object
    properties:
      outputs:
        type: array
        items:
          type: string
  DataFeed:
    type: object
    properties:
      count:
        $ref: '#/definitions/long'
  ExecutionAction:
    type: object
    properties:
      total:
        $ref: '#/definitions/long'
      total_in_ms:
        $ref: '#/definitions/long'
  IpFilterUsage:
    type: object
    properties:
      http:
        type: boolean
      transport:
        type: boolean
  Job:
    type: object
    properties:
      job_id:
        type: string
      job_type:
        type: string
      description:
        type: string
      create_time:
        $ref: '#/definitions/Date'
      finished_time:
        $ref: '#/definitions/Date'
      analysis_config:
        $ref: '#/definitions/AnalysisConfig'
      analysis_limits:
        $ref: '#/definitions/AnalysisLimits'
      background_persist_interval:
        $ref: '#/definitions/Time'
      data_description:
        $ref: '#/definitions/DataDescription'
      model_snapshot_retention_days:
        $ref: '#/definitions/long'
      model_snapshot_id:
        type: string
      results_index_name:
        type: string
      model_plot:
        $ref: '#/definitions/ModelPlotConfig'
      renormalization_window_days:
        $ref: '#/definitions/long'
      results_retention_days:
        $ref: '#/definitions/long'
  JobStatistics:
    type: object
    properties:
      total:
        $ref: '#/definitions/double'
      min:
        $ref: '#/definitions/double'
      max:
        $ref: '#/definitions/double'
      avg:
        $ref: '#/definitions/double'
  MachineLearningUsage:
    type: object
    properties:
      jobs:
        type: object
        additionalProperties:
          $ref: '#/definitions/Job'
      datafeeds:
        type: object
        additionalProperties:
          $ref: '#/definitions/DataFeed'
  MonitoringUsage:
    type: object
    properties:
      enabled_exporters:
        type: object
        additionalProperties:
          $ref: '#/definitions/long'
  RealmUsage:
    type: object
    properties:
      name:
        type: array
        items:
          type: string
      size:
        type: array
        items:
          $ref: '#/definitions/long'
      order:
        type: array
        items:
          $ref: '#/definitions/long'
  RoleUsage:
    type: object
    properties:
      dls:
        type: boolean
      fls:
        type: boolean
      size:
        $ref: '#/definitions/long'
  SecurityFeatureToggle:
    type: object
    properties:
      enabled:
        type: boolean
  SecurityUsage:
    type: object
    properties:
      system_key:
        $ref: '#/definitions/SecurityFeatureToggle'
      anonymous:
        $ref: '#/definitions/SecurityFeatureToggle'
      ssl:
        $ref: '#/definitions/SslUsage'
      ipfilter:
        $ref: '#/definitions/IpFilterUsage'
      audit:
        $ref: '#/definitions/AuditUsage'
      roles:
        type: object
        additionalProperties:
          $ref: '#/definitions/RoleUsage'
      realms:
        type: object
        additionalProperties:
          $ref: '#/definitions/RealmUsage'
  SslUsage:
    type: object
    properties:
      http:
        $ref: '#/definitions/SecurityFeatureToggle'
      transport:
        $ref: '#/definitions/SecurityFeatureToggle'
  XPackUsage:
    type: object
    properties:
      available:
        type: boolean
      enabled:
        type: boolean
  XPackUsageRequest:
    type: object
    properties:
      master_timeout:
        $ref: '#/definitions/Time'
  XPackUsageResponse:
    type: object
    properties:
      graph:
        $ref: '#/definitions/XPackUsage'
      monitoring:
        $ref: '#/definitions/MonitoringUsage'
      ml:
        $ref: '#/definitions/MachineLearningUsage'
      watcher:
        $ref: '#/definitions/AlertingUsage'
      security:
        $ref: '#/definitions/SecurityUsage'
  DeleteLicenseRequest:
    type: object
    properties: {}
  DeleteLicenseResponse:
    type: object
    properties: {}
  GetLicenseRequest:
    type: object
    properties:
      local:
        type: boolean
  GetLicenseResponse:
    type: object
    properties:
      is_valid:
        type: boolean
      license:
        $ref: '#/definitions/LicenseInformation'
  License:
    type: object
    properties:
      uid:
        type: string
      signature:
        type: string
      type:
        $ref: '#/definitions/LicenseType'
      issue_date_in_millis:
        $ref: '#/definitions/long'
      expiry_date_in_millis:
        $ref: '#/definitions/long'
      max_nodes:
        $ref: '#/definitions/long'
      issued_to:
        type: string
      issuer:
        type: string
  LicenseInformation:
    type: object
    properties:
      status:
        $ref: '#/definitions/LicenseStatus'
      uid:
        type: string
      type:
        $ref: '#/definitions/LicenseType'
      issue_date:
        $ref: '#/definitions/Date'
      issue_date_in_millis:
        $ref: '#/definitions/long'
      expiry_date:
        $ref: '#/definitions/Date'
      expiry_date_in_millis:
        $ref: '#/definitions/long'
      max_nodes:
        $ref: '#/definitions/long'
      issued_to:
        type: string
      issuer:
        type: string
  LicenseAcknowledgement:
    type: object
    properties:
      message:
        type: string
      license:
        type: array
        items:
          type: string
  PostLicenseRequest:
    type: object
    properties:
      license:
        $ref: '#/definitions/License'
      acknowledge:
        type: boolean
  PostLicenseResponse:
    type: object
    properties:
      acknowledged:
        type: boolean
      license_status:
        $ref: '#/definitions/LicenseStatus'
      acknowledge:
        $ref: '#/definitions/LicenseAcknowledgement'
  CloseJobRequest:
    type: object
    properties:
      force:
        type: boolean
      timeout:
        $ref: '#/definitions/Time'
  CloseJobResponse:
    type: object
    properties:
      closed:
        type: boolean
  ChunkingConfig:
    type: object
    properties:
      mode:
        $ref: '#/definitions/ChunkingMode'
      time_span:
        $ref: '#/definitions/Time'
  DatafeedConfig:
    type: object
    properties:
      datafeed_id:
        type: string
      aggregations:
        type: object
        additionalProperties:
          $ref: '#/definitions/AggregationContainer'
      chunking_config:
        $ref: '#/definitions/ChunkingConfig'
      frequency:
        $ref: '#/definitions/Time'
      indices:
        $ref: '#/definitions/Indices'
      job_id:
        type: string
      query:
        $ref: '#/definitions/QueryContainer'
      query_delay:
        $ref: '#/definitions/Time'
      script_fields:
        type: object
        additionalProperties:
          $ref: '#/definitions/ScriptField'
      scroll_size:
        $ref: '#/definitions/integer'
      types:
        $ref: '#/definitions/Types'
  DatafeedStats:
    type: object
    properties:
      datafeed_id:
        type: string
      state:
        $ref: '#/definitions/DatafeedState'
      node:
        $ref: '#/definitions/DiscoveryNode'
      assignment_explanation:
        type: string
  DiscoveryNode:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      ephemeral_id:
        type: string
      transport_address:
        type: string
      attributes:
        type: object
        additionalProperties:
          type: string
  DeleteDatafeedRequest:
    type: object
    properties:
      force:
        type: boolean
  DeleteDatafeedResponse:
    type: object
    properties: {}
  DeleteExpiredDataRequest:
    type: object
    properties: {}
  DeleteExpiredDataResponse:
    type: object
    properties:
      deleted:
        type: boolean
  DeleteJobRequest:
    type: object
    properties:
      force:
        type: boolean
  DeleteJobResponse:
    type: object
    properties: {}
  DeleteModelSnapshotRequest:
    type: object
    properties: {}
  DeleteModelSnapshotResponse:
    type: object
    properties: {}
  FlushJobRequest:
    type: object
    properties:
      advance_time:
        $ref: '#/definitions/Date'
      calc_interim:
        type: boolean
      end:
        $ref: '#/definitions/Date'
      start:
        $ref: '#/definitions/Date'
      skip_time:
        type: string
  FlushJobResponse:
    type: object
    properties:
      flushed:
        type: boolean
  GetAnomalyRecordsRequest:
    type: object
    properties:
      desc:
        type: boolean
      exclude_interim:
        type: boolean
      end:
        $ref: '#/definitions/Date'
      page:
        $ref: '#/definitions/Page'
      record_score:
        $ref: '#/definitions/double'
      sort:
        $ref: '#/definitions/Field'
      start:
        $ref: '#/definitions/Date'
  GetAnomalyRecordsResponse:
    type: object
    properties:
      count:
        $ref: '#/definitions/long'
      records:
        type: array
        items:
          $ref: '#/definitions/AnomalyRecord'
  GetBucketsRequest:
    type: object
    properties:
      anomaly_score:
        $ref: '#/definitions/double'
      desc:
        type: boolean
      end:
        $ref: '#/definitions/Date'
      exclude_interim:
        type: boolean
      expand:
        type: boolean
      page:
        $ref: '#/definitions/Page'
      sort:
        $ref: '#/definitions/Field'
      start:
        $ref: '#/definitions/Date'
      timestamp:
        $ref: '#/definitions/Date'
  GetBucketsResponse:
    type: object
    properties:
      count:
        $ref: '#/definitions/long'
      buckets:
        type: array
        items:
          $ref: '#/definitions/Bucket'
  GetCategoriesRequest:
    type: object
    properties:
      page:
        $ref: '#/definitions/Page'
  GetCategoriesResponse:
    type: object
    properties:
      count:
        $ref: '#/definitions/long'
      categories:
        type: array
        items:
          $ref: '#/definitions/CategoryDefinition'
  GetDatafeedStatsRequest:
    type: object
    properties: {}
  GetDatafeedStatsResponse:
    type: object
    properties:
      count:
        $ref: '#/definitions/long'
      datafeeds:
        type: array
        items:
          $ref: '#/definitions/DatafeedStats'
  GetDatafeedsRequest:
    type: object
    properties: {}
  GetDatafeedsResponse:
    type: object
    properties:
      count:
        $ref: '#/definitions/long'
      datafeeds:
        type: array
        items:
          $ref: '#/definitions/DatafeedConfig'
  GetInfluencersRequest:
    type: object
    properties:
      descending:
        type: boolean
      end:
        $ref: '#/definitions/Date'
      exclude_interim:
        type: boolean
      influencer_score:
        $ref: '#/definitions/double'
      page:
        $ref: '#/definitions/Page'
      sort:
        $ref: '#/definitions/Field'
      start:
        $ref: '#/definitions/Date'
  GetInfluencersResponse:
    type: object
    properties:
      count:
        $ref: '#/definitions/long'
      influencers:
        type: array
        items:
          $ref: '#/definitions/BucketInfluencer'
  GetJobStatsRequest:
    type: object
    properties: {}
  GetJobStatsResponse:
    type: object
    properties:
      count:
        $ref: '#/definitions/long'
      jobs:
        type: array
        items:
          $ref: '#/definitions/JobStats'
  GetJobsRequest:
    type: object
    properties: {}
  GetJobsResponse:
    type: object
    properties:
      count:
        $ref: '#/definitions/long'
      jobs:
        type: array
        items:
          $ref: '#/definitions/Job'
  GetModelSnapshotsRequest:
    type: object
    properties:
      desc:
        type: boolean
      end:
        $ref: '#/definitions/Date'
      page:
        $ref: '#/definitions/Page'
      sort:
        $ref: '#/definitions/Field'
      start:
        $ref: '#/definitions/Date'
  GetModelSnapshotsResponse:
    type: object
    properties:
      count:
        $ref: '#/definitions/long'
      model_snapshots:
        type: array
        items:
          $ref: '#/definitions/ModelSnapshot'
  Page:
    type: object
    properties:
      from:
        $ref: '#/definitions/integer'
      size:
        $ref: '#/definitions/integer'
  AnalysisConfig:
    type: object
    properties:
      bucket_span:
        $ref: '#/definitions/Time'
      categorization_field_name:
        $ref: '#/definitions/Field'
      categorization_filters:
        type: array
        items:
          type: string
      detectors:
        type: array
        items:
          $ref: '#/definitions/Detector'
      influencers:
        type: array
        items:
          $ref: '#/definitions/Field'
      latency:
        $ref: '#/definitions/Time'
      multivariate_by_fields:
        type: boolean
      summary_count_field_name:
        $ref: '#/definitions/Field'
  AnalysisLimits:
    type: object
    properties:
      categorization_examples_limit:
        $ref: '#/definitions/long'
      model_memory_limit:
        type: string
  AnalysisMemoryLimit:
    type: object
    properties:
      model_memory_limit:
        type: string
  DataDescription:
    type: object
    properties:
      format:
        type: string
      time_field:
        $ref: '#/definitions/Field'
      time_format:
        type: string
  JobStats:
    type: object
    properties:
      assignment_explanation:
        type: string
      job_id:
        type: string
      data_counts:
        $ref: '#/definitions/DataCounts'
      model_size_stats:
        $ref: '#/definitions/ModelSizeStats'
      state:
        $ref: '#/definitions/JobState'
      node:
        $ref: '#/definitions/DiscoveryNode'
      open_time:
        $ref: '#/definitions/Time'
  ModelPlotConfig:
    type: object
    properties:
      terms:
        type: array
        items:
          $ref: '#/definitions/Field'
  ModelPlotConfigEnabled:
    type: object
    properties:
      enabled:
        type: boolean
  Detector:
    type: object
    properties:
      detector_description:
        type: string
      exclude_frequent:
        $ref: '#/definitions/ExcludeFrequent'
      function:
        type: string
      use_null:
        type: boolean
      detector_index:
        $ref: '#/definitions/integer'
  DataCounts:
    type: object
    properties:
      job_id:
        type: string
      processed_record_count:
        $ref: '#/definitions/long'
      processed_field_count:
        $ref: '#/definitions/long'
      input_bytes:
        $ref: '#/definitions/long'
      input_field_count:
        $ref: '#/definitions/long'
      invalid_date_count:
        $ref: '#/definitions/long'
      missing_field_count:
        $ref: '#/definitions/long'
      out_of_order_timestamp_count:
        $ref: '#/definitions/long'
      empty_bucket_count:
        $ref: '#/definitions/long'
      sparse_bucket_count:
        $ref: '#/definitions/long'
      bucket_count:
        $ref: '#/definitions/long'
      earliest_record_timestamp:
        $ref: '#/definitions/Date'
      latest_record_timestamp:
        $ref: '#/definitions/Date'
      latest_empty_bucket_timestamp:
        $ref: '#/definitions/Date'
      last_data_time:
        $ref: '#/definitions/Date'
      latest_sparse_bucket_timestamp:
        $ref: '#/definitions/Date'
      input_record_count:
        $ref: '#/definitions/long'
  ModelSizeStats:
    type: object
    properties:
      job_id:
        type: string
      result_type:
        type: string
      model_bytes:
        $ref: '#/definitions/long'
      total_by_field_count:
        $ref: '#/definitions/long'
      total_over_field_count:
        $ref: '#/definitions/long'
      total_partition_field_count:
        $ref: '#/definitions/long'
      bucket_allocation_failures_count:
        $ref: '#/definitions/long'
      memory_status:
        $ref: '#/definitions/MemoryStatus'
      log_time:
        $ref: '#/definitions/Date'
      timestamp:
        $ref: '#/definitions/Date'
  ModelSnapshot:
    type: object
    properties:
      job_id:
        type: string
      timestamp:
        $ref: '#/definitions/Date'
      description:
        type: string
      snapshot_id:
        type: string
      snapshot_doc_count:
        $ref: '#/definitions/long'
      model_size_stats:
        $ref: '#/definitions/ModelSizeStats'
      latest_record_time_stamp:
        $ref: '#/definitions/Date'
      latest_result_time_stamp:
        $ref: '#/definitions/Date'
      retain:
        type: boolean
  AnomalyCause:
    type: object
    properties:
      probability:
        $ref: '#/definitions/double'
      over_field_name:
        type: string
      over_field_value:
        type: string
      by_field_name:
        type: string
      by_field_value:
        type: string
      correlated_by_field_value:
        type: string
      partition_field_name:
        type: string
      partition_field_value:
        type: string
      function:
        type: string
      function_description:
        type: string
      typical:
        type: array
        items:
          $ref: '#/definitions/double'
      actual:
        type: array
        items:
          $ref: '#/definitions/double'
      influencers:
        type: array
        items:
          $ref: '#/definitions/Influence'
      field_name:
        type: string
  AnomalyRecord:
    type: object
    properties:
      job_id:
        type: string
      result_type:
        type: string
      probability:
        $ref: '#/definitions/double'
      record_score:
        $ref: '#/definitions/double'
      initial_record_score:
        $ref: '#/definitions/double'
      bucket_span:
        $ref: '#/definitions/Time'
      detector_index:
        $ref: '#/definitions/integer'
      is_interim:
        type: boolean
      timestamp:
        $ref: '#/definitions/Date'
      function:
        type: string
      function_description:
        type: string
      typical:
        type: array
        items:
          $ref: '#/definitions/double'
      actual:
        type: array
        items:
          $ref: '#/definitions/double'
      field_name:
        type: string
      by_field_name:
        type: string
      by_field_value:
        type: string
      causes:
        type: array
        items:
          $ref: '#/definitions/AnomalyCause'
      influencers:
        type: array
        items:
          $ref: '#/definitions/Influence'
      over_field_name:
        type: string
      over_field_value:
        type: string
      partition_field_name:
        type: string
      partition_field_value:
        type: string
  Bucket:
    type: object
    properties:
      job_id:
        type: string
      timestamp:
        $ref: '#/definitions/Date'
      anomaly_score:
        $ref: '#/definitions/double'
      bucket_span:
        $ref: '#/definitions/Time'
      initial_anomaly_score:
        $ref: '#/definitions/double'
      event_count:
        $ref: '#/definitions/long'
      is_interim:
        type: boolean
      bucket_influencers:
        type: array
        items:
          $ref: '#/definitions/BucketInfluencer'
      processing_time_ms:
        $ref: '#/definitions/double'
      partition_scores:
        type: array
        items:
          $ref: '#/definitions/PartitionScore'
      result_type:
        type: string
  BucketInfluencer:
    type: object
    properties:
      job_id:
        type: string
      result_type:
        type: string
      influencer_field_name:
        type: string
      influencer_field_value:
        type: string
      initial_influencer_score:
        $ref: '#/definitions/double'
      influencer_score:
        $ref: '#/definitions/double'
      probability:
        $ref: '#/definitions/double'
      bucket_span:
        $ref: '#/definitions/long'
      is_interim:
        type: boolean
      timestamp:
        $ref: '#/definitions/Date'
  CategoryDefinition:
    type: object
    properties:
      job_id:
        type: string
      category_id:
        $ref: '#/definitions/long'
      terms:
        type: string
      regex:
        type: string
      max_matching_length:
        $ref: '#/definitions/long'
      examples:
        type: array
        items:
          type: string
  Influence:
    type: object
    properties:
      influencer_field_name:
        type: string
      influencer_field_values:
        type: array
        items:
          type: string
  PartitionScore:
    type: object
    properties:
      partition_field_name:
        type: string
      partition_field_value:
        type: string
      initial_record_score:
        $ref: '#/definitions/double'
      record_score:
        $ref: '#/definitions/double'
      probability:
        $ref: '#/definitions/double'
  OpenJobRequest:
    type: object
    properties:
      timeout:
        $ref: '#/definitions/Time'
  OpenJobResponse:
    type: object
    properties:
      opened:
        type: boolean
  PostJobDataRequest:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/object'
      reset_start:
        $ref: '#/definitions/Date'
      reset_end:
        $ref: '#/definitions/Date'
  PostJobDataResponse:
    type: object
    properties:
      job_id:
        type: string
      processed_record_count:
        $ref: '#/definitions/long'
      processed_field_count:
        $ref: '#/definitions/long'
      input_bytes:
        $ref: '#/definitions/long'
      input_field_count:
        $ref: '#/definitions/long'
      invalid_date_count:
        $ref: '#/definitions/long'
      missing_field_count:
        $ref: '#/definitions/long'
      out_of_order_timestamp_count:
        $ref: '#/definitions/long'
      empty_bucket_count:
        $ref: '#/definitions/long'
      sparse_bucket_count:
        $ref: '#/definitions/long'
      bucket_count:
        $ref: '#/definitions/long'
      last_data_time:
        $ref: '#/definitions/Date'
      input_record_count:
        $ref: '#/definitions/long'
  PreviewDatafeedRequest:
    type: object
    properties: {}
  PreviewDatafeedResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/T'
  PutDatafeedRequest:
    type: object
    properties:
      aggregations:
        type: object
        additionalProperties:
          $ref: '#/definitions/AggregationContainer'
      chunking_config:
        $ref: '#/definitions/ChunkingConfig'
      frequency:
        $ref: '#/definitions/Time'
      indices:
        $ref: '#/definitions/Indices'
      job_id:
        $ref: '#/definitions/Id'
      query:
        $ref: '#/definitions/QueryContainer'
      query_delay:
        $ref: '#/definitions/Time'
      script_fields:
        type: object
        additionalProperties:
          $ref: '#/definitions/ScriptField'
      scroll_size:
        $ref: '#/definitions/integer'
      types:
        $ref: '#/definitions/Types'
  PutDatafeedResponse:
    type: object
    properties:
      datafeed_id:
        type: string
      aggregations:
        type: object
        additionalProperties:
          $ref: '#/definitions/AggregationContainer'
      chunking_config:
        $ref: '#/definitions/ChunkingConfig'
      frequency:
        $ref: '#/definitions/Time'
      indices:
        $ref: '#/definitions/Indices'
      job_id:
        type: string
      query:
        $ref: '#/definitions/QueryContainer'
      query_delay:
        $ref: '#/definitions/Time'
      script_fields:
        type: object
        additionalProperties:
          $ref: '#/definitions/ScriptField'
      scroll_size:
        $ref: '#/definitions/integer'
      types:
        $ref: '#/definitions/Types'
  PutJobRequest:
    type: object
    properties:
      analysis_config:
        $ref: '#/definitions/AnalysisConfig'
      analysis_limits:
        $ref: '#/definitions/AnalysisLimits'
      data_description:
        $ref: '#/definitions/DataDescription'
      description:
        type: string
      model_plot:
        $ref: '#/definitions/ModelPlotConfig'
      model_snapshot_retention_days:
        $ref: '#/definitions/long'
      results_index_name:
        $ref: '#/definitions/IndexName'
  PutJobResponse:
    type: object
    properties:
      job_id:
        type: string
      job_type:
        type: string
      description:
        type: string
      create_time:
        $ref: '#/definitions/Date'
      analysis_config:
        $ref: '#/definitions/AnalysisConfig'
      analysis_limits:
        $ref: '#/definitions/AnalysisLimits'
      background_persist_interval:
        $ref: '#/definitions/Time'
      data_description:
        $ref: '#/definitions/DataDescription'
      model_snapshot_retention_days:
        $ref: '#/definitions/long'
      model_snapshot_id:
        type: string
      results_index_name:
        type: string
      model_plot:
        $ref: '#/definitions/ModelPlotConfig'
      renormalization_window_days:
        $ref: '#/definitions/long'
      results_retention_days:
        $ref: '#/definitions/long'
  RevertModelSnapshotRequest:
    type: object
    properties:
      delete_intervening_results:
        type: boolean
  RevertModelSnapshotResponse:
    type: object
    properties:
      model:
        $ref: '#/definitions/ModelSnapshot'
  StartDatafeedRequest:
    type: object
    properties:
      timeout:
        $ref: '#/definitions/Time'
      start:
        $ref: '#/definitions/Date'
      end:
        $ref: '#/definitions/Date'
  StartDatafeedResponse:
    type: object
    properties:
      started:
        type: boolean
  StopDatafeedRequest:
    type: object
    properties:
      timeout:
        $ref: '#/definitions/Time'
      force:
        type: boolean
  StopDatafeedResponse:
    type: object
    properties:
      stopped:
        type: boolean
  UpdateDatafeedRequest:
    type: object
    properties:
      aggregations:
        type: object
        additionalProperties:
          $ref: '#/definitions/AggregationContainer'
      chunking_config:
        $ref: '#/definitions/ChunkingConfig'
      frequency:
        $ref: '#/definitions/Time'
      indices:
        $ref: '#/definitions/Indices'
      job_id:
        $ref: '#/definitions/Id'
      query:
        $ref: '#/definitions/QueryContainer'
      query_delay:
        $ref: '#/definitions/Time'
      script_fields:
        type: object
        additionalProperties:
          $ref: '#/definitions/ScriptField'
      scroll_size:
        $ref: '#/definitions/integer'
      types:
        $ref: '#/definitions/Types'
  UpdateDatafeedResponse:
    type: object
    properties:
      datafeed_id:
        type: string
      aggregations:
        type: object
        additionalProperties:
          $ref: '#/definitions/AggregationContainer'
      chunking_config:
        $ref: '#/definitions/ChunkingConfig'
      frequency:
        $ref: '#/definitions/Time'
      indices:
        $ref: '#/definitions/Indices'
      job_id:
        type: string
      query:
        $ref: '#/definitions/QueryContainer'
      query_delay:
        $ref: '#/definitions/Time'
      script_fields:
        type: object
        additionalProperties:
          $ref: '#/definitions/ScriptField'
      scroll_size:
        $ref: '#/definitions/integer'
      types:
        $ref: '#/definitions/Types'
  UpdateJobRequest:
    type: object
    properties:
      analysis_limits:
        $ref: '#/definitions/AnalysisMemoryLimit'
      background_persist_interval:
        $ref: '#/definitions/Time'
      custom_settings:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
      description:
        type: string
      model_plot_config:
        $ref: '#/definitions/ModelPlotConfigEnabled'
      model_snapshot_retention_days:
        $ref: '#/definitions/long'
      renormalization_window_days:
        $ref: '#/definitions/long'
      results_retention_days:
        $ref: '#/definitions/long'
  UpdateJobResponse:
    type: object
    properties: {}
  UpdateModelSnapshotRequest:
    type: object
    properties:
      description:
        type: string
      retain:
        type: boolean
  UpdateModelSnapshotResponse:
    type: object
    properties:
      model:
        $ref: '#/definitions/ModelSnapshot'
  ValidateDetectorRequest:
    type: object
    properties:
      detector:
        $ref: '#/definitions/Detector'
  ValidateDetectorResponse:
    type: object
    properties: {}
  ValidateJobRequest:
    type: object
    properties:
      analysis_config:
        $ref: '#/definitions/AnalysisConfig'
      analysis_limits:
        $ref: '#/definitions/AnalysisLimits'
      data_description:
        $ref: '#/definitions/DataDescription'
      description:
        type: string
      model_plot:
        $ref: '#/definitions/ModelPlotConfig'
      model_snapshot_retention_days:
        $ref: '#/definitions/long'
      results_index_name:
        $ref: '#/definitions/IndexName'
  ValidateJobResponse:
    type: object
    properties: {}
  DeprecationInfo:
    type: object
    properties:
      level:
        $ref: '#/definitions/DeprecationWarningLevel'
      message:
        type: string
      url:
        type: string
      details:
        type: string
  DeprecationInfoRequest:
    type: object
    properties: {}
  DeprecationInfoResponse:
    type: object
    properties:
      cluster_settings:
        type: array
        items:
          $ref: '#/definitions/DeprecationInfo'
      node_settings:
        type: array
        items:
          $ref: '#/definitions/DeprecationInfo'
      index_settings:
        type: object
        additionalProperties:
          type: array
          items:
            $ref: '#/definitions/DeprecationInfo'
  SecurityNode:
    type: object
    properties:
      name:
        type: string
  AuthenticateRequest:
    type: object
    properties: {}
  AuthenticateResponse:
    type: object
    properties:
      username:
        type: string
      roles:
        type: array
        items:
          type: string
      full_name:
        type: string
      email:
        type: string
      metadata:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
  ClearCachedRealmsRequest:
    type: object
    properties:
      usernames:
        type: array
        items:
          type: string
  ClearCachedRealmsResponse:
    type: object
    properties:
      cluster_name:
        type: string
      nodes:
        type: object
        additionalProperties:
          $ref: '#/definitions/SecurityNode'
  FieldSecurity:
    type: object
    properties:
      grant:
        type: array
        items:
          $ref: '#/definitions/Field'
      except:
        type: array
        items:
          $ref: '#/definitions/Field'
  ClearCachedRolesRequest:
    type: object
    properties: {}
  ClearCachedRolesResponse:
    type: object
    properties:
      cluster_name:
        type: string
      nodes:
        type: object
        additionalProperties:
          $ref: '#/definitions/SecurityNode'
  DeleteRoleRequest:
    type: object
    properties:
      refresh:
        $ref: '#/definitions/Refresh'
  DeleteRoleResponse:
    type: object
    properties:
      found:
        type: boolean
  GetRoleRequest:
    type: object
    properties: {}
  GetRoleResponse:
    type: object
    properties:
      roles:
        type: object
        additionalProperties:
          $ref: '#/definitions/XPackRole'
  XPackRole:
    type: object
    properties:
      cluster:
        type: array
        items:
          type: string
      run_as:
        type: array
        items:
          type: string
      indices:
        type: array
        items:
          $ref: '#/definitions/IndicesPrivileges'
      metadata:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
  IndicesPrivileges:
    type: object
    properties:
      names:
        $ref: '#/definitions/Indices'
      privileges:
        type: array
        items:
          type: string
      field_security:
        $ref: '#/definitions/FieldSecurity'
      query:
        $ref: '#/definitions/QueryContainer'
  PutRoleRequest:
    type: object
    properties:
      cluster:
        type: array
        items:
          type: string
      run_as:
        type: array
        items:
          type: string
      indices:
        type: array
        items:
          $ref: '#/definitions/IndicesPrivileges'
      metadata:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
      refresh:
        $ref: '#/definitions/Refresh'
  PutRoleResponse:
    type: object
    properties:
      role:
        $ref: '#/definitions/PutRoleStatus'
  PutRoleStatus:
    type: object
    properties:
      created:
        type: boolean
  DeleteRoleMappingRequest:
    type: object
    properties:
      refresh:
        $ref: '#/definitions/Refresh'
  DeleteRoleMappingResponse:
    type: object
    properties:
      found:
        type: boolean
  GetRoleMappingRequest:
    type: object
    properties: {}
  GetRoleMappingResponse:
    type: object
    properties:
      role_mappings:
        type: object
        additionalProperties:
          $ref: '#/definitions/XPackRoleMapping'
  XPackRoleMapping:
    type: object
    properties:
      metadata:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
      enabled:
        type: boolean
      roles:
        type: array
        items:
          type: string
      rules:
        $ref: '#/definitions/RoleMappingRuleBase'
  PutRoleMappingRequest:
    type: object
    properties:
      run_as:
        type: array
        items:
          type: string
      metadata:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
      enabled:
        type: boolean
      roles:
        type: array
        items:
          type: string
      rules:
        $ref: '#/definitions/RoleMappingRuleBase'
      refresh:
        $ref: '#/definitions/Refresh'
  PutRoleMappingResponse:
    type: object
    properties:
      role_mapping:
        $ref: '#/definitions/PutRoleMappingStatus'
      created:
        type: boolean
  PutRoleMappingStatus:
    type: object
    properties:
      created:
        type: boolean
  RoleMappingRuleBase:
    type: object
    properties: {}
  ChangePasswordRequest:
    type: object
    properties:
      password:
        type: string
      refresh:
        $ref: '#/definitions/Refresh'
  ChangePasswordResponse:
    type: object
    properties: {}
  DeleteUserRequest:
    type: object
    properties:
      refresh:
        $ref: '#/definitions/Refresh'
  DeleteUserResponse:
    type: object
    properties:
      found:
        type: boolean
  DisableUserRequest:
    type: object
    properties:
      refresh:
        $ref: '#/definitions/Refresh'
  DisableUserResponse:
    type: object
    properties: {}
  EnableUserRequest:
    type: object
    properties:
      refresh:
        $ref: '#/definitions/Refresh'
  EnableUserResponse:
    type: object
    properties: {}
  GetUserRequest:
    type: object
    properties: {}
  GetUserResponse:
    type: object
    properties:
      users:
        type: object
        additionalProperties:
          $ref: '#/definitions/XPackUser'
  XPackUser:
    type: object
    properties:
      username:
        type: string
      roles:
        type: array
        items:
          type: string
      full_name:
        type: string
      email:
        type: string
      metadata:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
  GetUserAccessTokenRequest:
    type: object
    properties:
      grant_type:
        $ref: '#/definitions/AccessTokenGrantType'
      scope:
        type: string
  GetUserAccessTokenResponse:
    type: object
    properties:
      access_token:
        type: string
      type:
        type: string
      expires_in:
        $ref: '#/definitions/long'
      scope:
        type: string
  InvalidateUserAccessTokenRequest:
    type: object
    properties: {}
  InvalidateUserAccessTokenResponse:
    type: object
    properties:
      created:
        type: boolean
  PutUserRequest:
    type: object
    properties:
      password:
        type: string
      roles:
        type: array
        items:
          type: string
      full_name:
        type: string
      email:
        type: string
      metadata:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
      refresh:
        $ref: '#/definitions/Refresh'
  PutUserResponse:
    type: object
    properties:
      user:
        $ref: '#/definitions/PutUserStatus'
  PutUserStatus:
    type: object
    properties:
      created:
        type: boolean
  Watch:
    type: object
    properties:
      metadata:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
      input:
        $ref: '#/definitions/InputContainer'
      condition:
        $ref: '#/definitions/ConditionContainer'
      trigger:
        $ref: '#/definitions/TriggerContainer'
      transform:
        $ref: '#/definitions/TransformContainer'
      actions:
        type: object
        additionalProperties:
          $ref: '#/definitions/Action'
      status:
        $ref: '#/definitions/WatchStatus'
      throttle_period:
        type: string
  AcknowledgeState:
    type: object
    properties:
      timestamp:
        $ref: '#/definitions/Date'
      state:
        $ref: '#/definitions/AcknowledgementState'
  AcknowledgeWatchRequest:
    type: object
    properties:
      master_timeout:
        $ref: '#/definitions/Time'
  AcknowledgeWatchResponse:
    type: object
    properties:
      status:
        $ref: '#/definitions/WatchStatus'
  ActionStatus:
    type: object
    properties:
      ack:
        $ref: '#/definitions/AcknowledgeState'
      last_execution:
        $ref: '#/definitions/ExecutionState'
      last_successful_execution:
        $ref: '#/definitions/ExecutionState'
      last_throttle:
        $ref: '#/definitions/ThrottleState'
  ActivationState:
    type: object
    properties:
      timestamp:
        $ref: '#/definitions/Date'
      active:
        type: boolean
  ExecutionState:
    type: object
    properties:
      timestamp:
        $ref: '#/definitions/Date'
      successful:
        type: boolean
  ThrottleState:
    type: object
    properties:
      timestamp:
        $ref: '#/definitions/Date'
      reason:
        type: string
  WatchStatus:
    type: object
    properties:
      version:
        $ref: '#/definitions/integer'
      state:
        $ref: '#/definitions/ActivationState'
      last_checked:
        $ref: '#/definitions/Date'
      last_met_condition:
        $ref: '#/definitions/Date'
      actions:
        type: object
        additionalProperties:
          $ref: '#/definitions/ActionStatus'
  Action:
    type: object
    properties:
      name:
        type: string
      action_type:
        $ref: '#/definitions/ActionType'
      transform:
        $ref: '#/definitions/TransformContainer'
      throttle_period:
        $ref: '#/definitions/Time'
  EmailBody:
    type: object
    properties:
      text:
        type: string
      html:
        type: string
  HipChatMessage:
    type: object
    properties:
      body:
        type: string
      format:
        $ref: '#/definitions/HipChatMessageFormat'
      color:
        $ref: '#/definitions/HipChatMessageColor'
      notify:
        type: boolean
      from:
        type: string
      room:
        type: object
        description: Unknown InstanceOf
      user:
        type: object
        description: Unknown InstanceOf
  PagerDutyContext:
    type: object
    properties:
      type:
        $ref: '#/definitions/PagerDutyContextType'
      href:
        type: string
      src:
        type: string
  PagerDutyEvent:
    type: object
    properties:
      account:
        type: string
      description:
        type: string
      event_type:
        $ref: '#/definitions/PagerDutyEventType'
      incident_key:
        type: string
      client:
        type: string
      client_url:
        type: string
      attach_payload:
        type: boolean
      context:
        type: array
        items:
          $ref: '#/definitions/PagerDutyContext'
  SlackAttachment:
    type: object
    properties:
      fallback:
        type: string
      color:
        type: string
      pretext:
        type: string
      author_name:
        type: string
      author_link:
        type: string
      author_icon:
        type: string
      title:
        type: string
      title_link:
        type: string
      text:
        type: string
      fields:
        type: array
        items:
          $ref: '#/definitions/SlackAttachmentField'
      image_url:
        type: string
      thumb_url:
        type: string
      footer:
        type: string
      footer_icon:
        type: string
      ts:
        $ref: '#/definitions/Date'
  SlackAttachmentField:
    type: object
    properties:
      title:
        type: string
      value:
        type: string
      short:
        type: boolean
  SlackDynamicAttachment:
    type: object
    properties:
      list_path:
        type: string
      attachment_template:
        $ref: '#/definitions/SlackAttachment'
  SlackMessage:
    type: object
    properties:
      from:
        type: string
      to:
        type: array
        items:
          type: string
      icon:
        type: string
      text:
        type: string
      attachments:
        type: array
        items:
          $ref: '#/definitions/SlackAttachment'
      dynamic_attachments:
        $ref: '#/definitions/SlackDynamicAttachment'
  ActivateWatchRequest:
    type: object
    properties:
      master_timeout:
        $ref: '#/definitions/Time'
  ActivateWatchResponse:
    type: object
    properties:
      status:
        $ref: '#/definitions/ActivationStatus'
  ActivationStatus:
    type: object
    properties:
      state:
        $ref: '#/definitions/ActivationState'
      actions:
        type: object
        additionalProperties:
          $ref: '#/definitions/ActionStatus'
  AlwaysCondition:
    type: object
    properties: {}
  ArrayCompareCondition:
    type: object
    properties:
      array_path:
        type: string
      path:
        type: string
      comparison:
        type: string
      value:
        $ref: '#/definitions/object'
      quantifier:
        $ref: '#/definitions/Quantifier'
  CompareCondition:
    type: object
    properties:
      path:
        type: string
      comparison:
        type: string
      value:
        $ref: '#/definitions/object'
  Condition:
    type: object
    properties: {}
  ConditionContainer:
    type: object
    properties:
      always:
        $ref: '#/definitions/AlwaysCondition'
      never:
        $ref: '#/definitions/NeverCondition'
      compare:
        $ref: '#/definitions/CompareCondition'
      array_compare:
        $ref: '#/definitions/ArrayCompareCondition'
      script:
        $ref: '#/definitions/ScriptCondition'
  NeverCondition:
    type: object
    properties: {}
  ScriptCondition:
    type: object
    properties:
      lang:
        type: string
      params:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
  DeactivateWatchRequest:
    type: object
    properties:
      master_timeout:
        $ref: '#/definitions/Time'
  DeactivateWatchResponse:
    type: object
    properties:
      status:
        $ref: '#/definitions/ActivationStatus'
  DeleteWatchRequest:
    type: object
    properties:
      master_timeout:
        $ref: '#/definitions/Time'
  DeleteWatchResponse:
    type: object
    properties:
      _id:
        type: string
      _version:
        $ref: '#/definitions/integer'
      found:
        type: boolean
  ExecuteWatchRequest:
    type: object
    properties:
      trigger_data:
        $ref: '#/definitions/ScheduleTriggerEvent'
      ignore_condition:
        type: boolean
      record_execution:
        type: boolean
      alternative_input:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
      action_modes:
        type: object
        additionalProperties:
          $ref: '#/definitions/ActionExecutionMode'
      simulated_actions:
        $ref: '#/definitions/SimulatedActions'
      watch:
        $ref: '#/definitions/PutWatchRequest'
      debug:
        type: boolean
  ExecuteWatchResponse:
    type: object
    properties:
      _id:
        type: string
      watch_record:
        $ref: '#/definitions/WatchRecord'
  ExecutionResult:
    type: object
    properties:
      execution_time:
        $ref: '#/definitions/Date'
      execution_duration:
        $ref: '#/definitions/integer'
      input:
        $ref: '#/definitions/ExecutionResultInput'
      condition:
        $ref: '#/definitions/ExecutionResultCondition'
      actions:
        type: array
        items:
          $ref: '#/definitions/ExecutionResultAction'
  ExecutionResultAction:
    type: object
    properties:
      id:
        type: string
      type:
        $ref: '#/definitions/ActionType'
      status:
        $ref: '#/definitions/Status'
      email:
        $ref: '#/definitions/EmailActionResult'
      index:
        $ref: '#/definitions/IndexActionResult'
      webhook:
        $ref: '#/definitions/WebhookActionResult'
      logging:
        $ref: '#/definitions/LoggingActionResult'
      pagerduty:
        $ref: '#/definitions/PagerDutyActionResult'
      hipchat:
        $ref: '#/definitions/HipChatActionResult'
      slack:
        $ref: '#/definitions/SlackActionResult'
      reason:
        type: string
  ExecutionResultCondition:
    type: object
    properties:
      type:
        $ref: '#/definitions/ConditionType'
      status:
        $ref: '#/definitions/Status'
      met:
        type: boolean
  ExecutionResultInput:
    type: object
    properties:
      type:
        $ref: '#/definitions/InputType'
      status:
        $ref: '#/definitions/Status'
      payload:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
  TriggerEventResult:
    type: object
    properties:
      type:
        type: string
      triggered_time:
        $ref: '#/definitions/Date'
      manual:
        $ref: '#/definitions/TriggerEventContainer'
  WatchRecord:
    type: object
    properties:
      watch_id:
        type: string
      messages:
        type: array
        items:
          type: string
      state:
        $ref: '#/definitions/ActionExecutionState'
      trigger_event:
        $ref: '#/definitions/TriggerEventResult'
      condition:
        $ref: '#/definitions/ConditionContainer'
      input:
        $ref: '#/definitions/InputContainer'
      metadata:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
      result:
        $ref: '#/definitions/ExecutionResult'
  HttpInputRequestResult:
    type: object
    properties: {}
  HttpInputResponseResult:
    type: object
    properties:
      status:
        $ref: '#/definitions/integer'
      headers:
        type: object
        additionalProperties:
          type: array
          items:
            type: string
      body:
        type: string
  SimulatedActions:
    type: object
    properties:
      use_all:
        type: boolean
      actions:
        type: array
        items:
          type: string
      all:
        $ref: '#/definitions/SimulatedActions'
  EmailActionResult:
    type: object
    properties:
      reason:
        type: string
      account:
        type: string
      message:
        $ref: '#/definitions/EmailResult'
  EmailResult:
    type: object
    properties:
      id:
        type: string
      sent_date:
        $ref: '#/definitions/Date'
      from:
        type: string
      to:
        type: array
        items:
          type: string
      cc:
        type: array
        items:
          type: string
      bcc:
        type: array
        items:
          type: string
      reply_to:
        type: array
        items:
          type: string
      subject:
        type: string
      body:
        $ref: '#/definitions/EmailBody'
      priority:
        $ref: '#/definitions/EmailPriority'
  HipChatActionMessageResult:
    type: object
    properties:
      status:
        $ref: '#/definitions/Status'
      reason:
        type: string
      request:
        $ref: '#/definitions/HttpInputRequestResult'
      response:
        $ref: '#/definitions/HttpInputResponseResult'
      room:
        type: string
      user:
        type: string
      message:
        $ref: '#/definitions/HipChatMessage'
  HipChatActionResult:
    type: object
    properties:
      account:
        type: string
      sent_messages:
        type: array
        items:
          $ref: '#/definitions/HipChatActionMessageResult'
  IndexActionResult:
    type: object
    properties:
      id:
        type: string
      response:
        $ref: '#/definitions/IndexActionResultIndexResponse'
  IndexActionResultIndexResponse:
    type: object
    properties:
      index:
        $ref: '#/definitions/IndexName'
      type:
        $ref: '#/definitions/TypeName'
      version:
        $ref: '#/definitions/integer'
      created:
        type: boolean
      result:
        $ref: '#/definitions/Result'
      id:
        type: string
  LoggingActionResult:
    type: object
    properties:
      logged_text:
        type: string
  PagerDutyActionEventResult:
    type: object
    properties:
      event:
        $ref: '#/definitions/PagerDutyEvent'
      reason:
        type: string
      request:
        $ref: '#/definitions/HttpInputRequestResult'
      response:
        $ref: '#/definitions/HttpInputResponseResult'
  PagerDutyActionResult:
    type: object
    properties:
      sent_event:
        $ref: '#/definitions/PagerDutyActionEventResult'
  SlackActionMessageResult:
    type: object
    properties:
      status:
        $ref: '#/definitions/Status'
      reason:
        type: string
      request:
        $ref: '#/definitions/HttpInputRequestResult'
      response:
        $ref: '#/definitions/HttpInputResponseResult'
      to:
        type: string
      message:
        $ref: '#/definitions/SlackMessage'
  SlackActionResult:
    type: object
    properties:
      account:
        type: string
      sent_messages:
        type: array
        items:
          $ref: '#/definitions/SlackActionMessageResult'
  WebhookActionResult:
    type: object
    properties:
      request:
        $ref: '#/definitions/HttpInputRequestResult'
      response:
        $ref: '#/definitions/HttpInputResponseResult'
  GetWatchRequest:
    type: object
    properties: {}
  GetWatchResponse:
    type: object
    properties:
      found:
        type: boolean
      _id:
        type: string
      status:
        $ref: '#/definitions/WatchStatus'
      watch:
        $ref: '#/definitions/Watch'
  ChainInput:
    type: object
    properties:
      inputs:
        type: object
        additionalProperties:
          $ref: '#/definitions/InputContainer'
  HttpInput:
    type: object
    properties:
      extract:
        type: array
        items:
          type: string
      request:
        $ref: '#/definitions/HttpInputRequest'
      response_content_type:
        $ref: '#/definitions/ResponseContentType'
  HttpInputAuthentication:
    type: object
    properties:
      basic:
        $ref: '#/definitions/HttpInputBasicAuthentication'
  HttpInputBasicAuthentication:
    type: object
    properties:
      username:
        type: string
      password:
        type: string
  HttpInputProxy:
    type: object
    properties:
      host:
        type: string
      port:
        $ref: '#/definitions/integer'
  HttpInputRequest:
    type: object
    properties:
      scheme:
        $ref: '#/definitions/ConnectionScheme'
      port:
        $ref: '#/definitions/integer'
      host:
        type: string
      path:
        type: string
      method:
        $ref: '#/definitions/HttpInputMethod'
      headers:
        type: object
        additionalProperties:
          type: string
      params:
        type: object
        additionalProperties:
          type: string
      url:
        type: string
      auth:
        $ref: '#/definitions/HttpInputAuthentication'
      proxy:
        $ref: '#/definitions/HttpInputProxy'
      connection_timeout:
        $ref: '#/definitions/Time'
      read_timeout:
        $ref: '#/definitions/Time'
      body:
        type: string
  IndicesOptions:
    type: object
    properties:
      expand_wildcards:
        $ref: '#/definitions/ExpandWildcards'
      ignore_unavailable:
        type: boolean
      allow_no_indices:
        type: boolean
  Input:
    type: object
    properties: {}
  InputContainer:
    type: object
    properties:
      http:
        $ref: '#/definitions/HttpInput'
      search:
        $ref: '#/definitions/SearchInput'
      simple:
        $ref: '#/definitions/SimpleInput'
      chain:
        $ref: '#/definitions/ChainInput'
  SearchInput:
    type: object
    properties:
      extract:
        type: array
        items:
          type: string
      request:
        $ref: '#/definitions/SearchInputRequest'
      timeout:
        $ref: '#/definitions/Time'
  SearchInputRequest:
    type: object
    properties:
      indices:
        type: array
        items:
          $ref: '#/definitions/IndexName'
      types:
        type: array
        items:
          $ref: '#/definitions/TypeName'
      search_type:
        $ref: '#/definitions/SearchType'
      indices_options:
        $ref: '#/definitions/IndicesOptions'
      body:
        $ref: '#/definitions/SearchRequest'
      template:
        $ref: '#/definitions/SearchTemplateRequest'
  SimpleInput:
    type: object
    properties:
      payload:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
  PutWatchRequest:
    type: object
    properties:
      metadata:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
      trigger:
        $ref: '#/definitions/TriggerContainer'
      input:
        $ref: '#/definitions/InputContainer'
      throttle_period:
        type: string
      condition:
        $ref: '#/definitions/ConditionContainer'
      transform:
        $ref: '#/definitions/TransformContainer'
      actions:
        type: object
        additionalProperties:
          $ref: '#/definitions/Action'
      master_timeout:
        $ref: '#/definitions/Time'
      active:
        type: boolean
  PutWatchResponse:
    type: object
    properties:
      _id:
        type: string
      _version:
        $ref: '#/definitions/integer'
      created:
        type: boolean
  RestartWatcherRequest:
    type: object
    properties: {}
  RestartWatcherResponse:
    type: object
    properties: {}
  CronExpression:
    type: object
    properties: {}
  DailySchedule:
    type: object
    properties:
      at:
        description: 'Not an array but: union<string[], TimeOfDay>'
        type: array
        items:
          - type: array
            items:
              type: string
          - $ref: '#/definitions/TimeOfDay'
  HourlySchedule:
    type: object
    properties:
      minute:
        type: array
        items:
          $ref: '#/definitions/integer'
  Interval:
    type: object
    properties:
      factor:
        $ref: '#/definitions/long'
      unit:
        $ref: '#/definitions/IntervalUnit'
  Schedule:
    type: object
    properties: {}
  ScheduleBase:
    type: object
    properties: {}
  ScheduleContainer:
    type: object
    properties:
      hourly:
        $ref: '#/definitions/HourlySchedule'
      daily:
        $ref: '#/definitions/DailySchedule'
      weekly:
        type: array
        items:
          $ref: '#/definitions/TimeOfWeek'
      monthly:
        type: array
        items:
          $ref: '#/definitions/TimeOfMonth'
      yearly:
        type: array
        items:
          $ref: '#/definitions/TimeOfYear'
      cron:
        $ref: '#/definitions/CronExpression'
      interval:
        $ref: '#/definitions/Interval'
  ScheduleTriggerEvent:
    type: object
    properties:
      triggered_time:
        description: 'Not an array but: union<Date, string>'
        type: array
        items:
          - $ref: '#/definitions/Date'
          - type: string
      scheduled_time:
        description: 'Not an array but: union<Date, string>'
        type: array
        items:
          - $ref: '#/definitions/Date'
          - type: string
  TimeOfDay:
    type: object
    properties:
      hour:
        type: array
        items:
          $ref: '#/definitions/integer'
      minute:
        type: array
        items:
          $ref: '#/definitions/integer'
  TimeOfMonth:
    type: object
    properties:
      'on':
        type: object
        description: Unknown InstanceOf
      at:
        type: object
        description: Unknown InstanceOf
  TimeOfWeek:
    type: object
    properties:
      'on':
        type: object
        description: Unknown InstanceOf
      at:
        type: object
        description: Unknown InstanceOf
  TimeOfYear:
    type: object
    properties:
      int:
        type: object
        description: Unknown InstanceOf
      'on':
        type: object
        description: Unknown InstanceOf
      at:
        type: object
        description: Unknown InstanceOf
  StartWatcherRequest:
    type: object
    properties: {}
  StartWatcherResponse:
    type: object
    properties: {}
  StopWatcherRequest:
    type: object
    properties: {}
  StopWatcherResponse:
    type: object
    properties: {}
  ChainTransform:
    type: object
    properties:
      transforms:
        type: array
        items:
          $ref: '#/definitions/TransformContainer'
  ScriptTransform:
    type: object
    properties:
      params:
        type: object
        additionalProperties:
          $ref: '#/definitions/object'
      lang:
        type: string
  SearchTransform:
    type: object
    properties:
      request:
        $ref: '#/definitions/SearchInputRequest'
      timeout:
        $ref: '#/definitions/Time'
  Transform:
    type: object
    properties: {}
  TransformContainer:
    type: object
    properties:
      search:
        $ref: '#/definitions/SearchTransform'
      script:
        $ref: '#/definitions/ScriptTransform'
      chain:
        $ref: '#/definitions/ChainTransform'
  TriggerContainer:
    type: object
    properties:
      schedule:
        $ref: '#/definitions/ScheduleContainer'
  TriggerEvent:
    type: object
    properties: {}
  TriggerEventContainer:
    type: object
    properties:
      schedule:
        $ref: '#/definitions/ScheduleTriggerEvent'
  ExecutionThreadPool:
    type: object
    properties:
      queue_size:
        $ref: '#/definitions/long'
      max_size:
        $ref: '#/definitions/long'
  WatchRecordQueuedStats:
    type: object
    properties:
      watch_id:
        type: string
      watch_record_id:
        type: string
      triggered_time:
        $ref: '#/definitions/Date'
      execution_time:
        $ref: '#/definitions/Date'
  WatchRecordStats:
    type: object
    properties:
      execution_phase:
        $ref: '#/definitions/ExecutionPhase'
  WatcherNodeStats:
    type: object
    properties:
      watcher_state:
        $ref: '#/definitions/WatcherState'
      watch_count:
        $ref: '#/definitions/long'
      execution_thread_pool:
        $ref: '#/definitions/ExecutionThreadPool'
      current_watches:
        type: array
        items:
          $ref: '#/definitions/WatchRecordStats'
      queued_watches:
        type: array
        items:
          $ref: '#/definitions/WatchRecordQueuedStats'
  WatcherStatsRequest:
    type: object
    properties:
      emit_stacktraces:
        type: boolean
  WatcherStatsResponse:
    type: object
    properties:
      stats:
        type: array
        items:
          $ref: '#/definitions/WatcherNodeStats'
      manually_stopped:
        type: boolean
      cluster_name:
        type: string
  DateInterval:
    type: string
    description: null
    enum:
      - second
      - minute
      - hour
      - day
      - week
      - month
      - quarter
      - year
  GeoHashPrecision:
    type: string
    description: null
    enum:
      - Precision1
      - Precision2
      - Precision3
      - Precision4
      - Precision5
      - Precision6
      - Precision7
      - Precision8
      - Precision9
      - Precision10
      - Precision11
      - Precision12
  SamplerAggregationExecutionHint:
    type: string
    description: null
    enum:
      - map
      - global_ordinals
      - bytes_hash
  TermsAggregationCollectMode:
    type: string
    description: null
    enum:
      - depth_first
      - breadth_first
  TermsAggregationExecutionHint:
    type: string
    description: null
    enum:
      - map
      - global_ordinals
      - global_ordinals_hash
      - global_ordinals_low_cardinality
  MatrixStatsMode:
    type: string
    description: null
    enum:
      - avg
      - min
      - max
      - sum
      - median
  GapPolicy:
    type: string
    description: null
    enum:
      - skip
      - insert_zeros
  HoltWintersType:
    type: string
    description: null
    enum:
      - add
      - mult
  AggregationVisitorScope:
    type: string
    description: null
    enum:
      - Unknown
      - Aggregation
      - Bucket
  Language:
    type: string
    description: null
    enum:
      - Arabic
      - Armenian
      - Basque
      - Brazilian
      - Bulgarian
      - Catalan
      - Chinese
      - Cjk
      - Czech
      - Danish
      - Dutch
      - English
      - Finnish
      - French
      - Galician
      - German
      - Greek
      - Hindi
      - Hungarian
      - Indonesian
      - Irish
      - Italian
      - Latvian
      - Norwegian
      - Persian
      - Portuguese
      - Romanian
      - Russian
      - Sorani
      - Spanish
      - Swedish
      - Turkish
      - Thai
  SnowballLanguage:
    type: string
    description: null
    enum:
      - Armenian
      - Basque
      - Catalan
      - Danish
      - Dutch
      - English
      - Finnish
      - French
      - German
      - German2
      - Hungarian
      - Italian
      - Kp
      - Lovins
      - Norwegian
      - Porter
      - Portuguese
      - Romanian
      - Russian
      - Spanish
      - Swedish
      - Turkish
  IcuCollationAlternate:
    type: string
    description: null
    enum:
      - shifted
      - non-ignorable
  IcuCollationCaseFirst:
    type: string
    description: null
    enum:
      - lower
      - upper
  IcuCollationDecomposition:
    type: string
    description: null
    enum:
      - 'no'
      - identical
  IcuCollationStrength:
    type: string
    description: null
    enum:
      - primary
      - secondary
      - tertiary
      - quaternary
      - identical
  IcuNormalizationMode:
    type: string
    description: null
    enum:
      - decompose
      - compose
  IcuNormalizationType:
    type: string
    description: null
    enum:
      - nfc
      - nfkc
      - nfkc_cf
  IcuTransformDirection:
    type: string
    description: null
    enum:
      - forward
      - reverse
  KuromojiTokenizationMode:
    type: string
    description: null
    enum:
      - normal
      - search
      - extended
  PhoneticEncoder:
    type: string
    description: null
    enum:
      - metaphone
      - doublemetaphone
      - soundex
      - refinedsoundex
      - caverphone1
      - caverphone2
      - cologne
      - nysiis
      - koelnerphonetik
      - haasephonetik
      - beidermorse
  DelimitedPayloadEncoding:
    type: string
    description: null
    enum:
      - int
      - float
      - identity
  EdgeNGramSide:
    type: string
    description: null
    enum:
      - front
      - back
  SynonymFormat:
    type: string
    description: null
    enum:
      - solr
      - wordnet
  TokenChar:
    type: string
    description: null
    enum:
      - letter
      - digit
      - whitespace
      - punctuation
      - symbol
  ClusterStatus:
    type: string
    description: null
    enum:
      - green
      - yellow
      - red
  AllocationExplainDecision:
    type: string
    description: null
    enum:
      - 'NO'
      - 'YES'
      - THROTTLE
      - ALWAYS
  Decision:
    type: string
    description: null
    enum:
      - 'yes'
      - 'no'
  StoreCopy:
    type: string
    description: null
    enum:
      - NONE
      - AVAILABLE
      - CORRUPT
      - IO_ERROR
      - STALE
      - UNKNOWN
  UnassignedInformationReason:
    type: string
    description: null
    enum:
      - INDEX_CREATED
      - CLUSTER_RECOVERED
      - INDEX_REOPENED
      - DANGLING_INDEX_IMPORTED
      - NEW_INDEX_RESTORED
      - EXISTING_INDEX_RESTORED
      - REPLICA_ADDED
      - ALLOCATION_FAILED
      - NODE_LEFT
      - REROUTE_CANCELLED
      - REINITIALIZED
      - REALLOCATED_REPLICA
  NodeRole:
    type: string
    description: null
    enum:
      - master
      - data
      - client
      - ingest
  Bytes:
    type: string
    description: null
    enum:
      - b
      - k
      - kb
      - m
      - mb
      - g
      - gb
      - t
      - tb
      - p
      - pb
  Conflicts:
    type: string
    description: null
    enum:
      - abort
      - proceed
  DefaultOperator:
    type: string
    description: null
    enum:
      - AND
      - OR
  ExpandWildcards:
    type: string
    description: null
    enum:
      - open
      - closed
      - none
      - all
  FieldIndexOption:
    type: string
    description: null
    enum:
      - analyzed
      - not_analyzed
      - 'no'
  Format:
    type: string
    description: null
    enum:
      - detailed
      - text
  GroupBy:
    type: string
    description: null
    enum:
      - nodes
      - parents
  Health:
    type: string
    description: null
    enum:
      - green
      - yellow
      - red
  HttpMethod:
    type: string
    description: null
    enum:
      - GET
      - POST
      - PUT
      - DELETE
      - HEAD
  Level:
    type: string
    description: null
    enum:
      - cluster
      - indices
      - shards
  OpType:
    type: string
    description: null
    enum:
      - index
      - create
  Refresh:
    type: string
    description: null
    enum:
      - 'true'
      - 'false'
      - wait_for
  SearchType:
    type: string
    description: null
    enum:
      - query_then_fetch
      - dfs_query_then_fetch
  Size:
    type: string
    description: null
    enum:
      - Raw
      - k
      - m
      - g
      - t
      - p
  SuggestMode:
    type: string
    description: null
    enum:
      - missing
      - popular
      - always
  ThreadType:
    type: string
    description: null
    enum:
      - cpu
      - wait
      - block
  VersionType:
    type: string
    description: null
    enum:
      - internal
      - external
      - external_gte
      - force
  WaitForEvents:
    type: string
    description: null
    enum:
      - immediate
      - urgent
      - high
      - normal
      - low
      - languid
  WaitForStatus:
    type: string
    description: null
    enum:
      - green
      - yellow
      - red
  WatcherStatsMetric:
    type: string
    description: null
    enum:
      - queued_watches
      - pending_watches
      - _all
  DateMathOperation:
    type: string
    description: null
    enum:
      - +
      - '-'
  DateMathTimeUnit:
    type: string
    description: null
    enum:
      - s
      - m
      - h
      - d
      - w
      - M
      - 'y'
  DistanceUnit:
    type: string
    description: null
    enum:
      - in
      - ft
      - yd
      - mi
      - nmi
      - km
      - m
      - cm
      - mm
  GeoDistanceType:
    type: string
    description: null
    enum:
      - arc
      - plane
  GeoShapeRelation:
    type: string
    description: null
    enum:
      - intersects
      - disjoint
      - within
      - contains
  TimeUnit:
    type: string
    description: null
    enum:
      - nanos
      - micros
      - ms
      - s
      - m
      - h
      - d
  Result:
    type: string
    description: null
    enum:
      - Error
      - created
      - updated
      - deleted
      - not_found
      - noop
  RecoveryInitialShards:
    type: string
    description: null
    enum:
      - quorem
      - quorem-1
      - full
      - full-1
  LogLevel:
    type: string
    description: null
    enum:
      - error
      - warn
      - info
      - debug
      - trace
  IndexSortMissing:
    type: string
    description: null
    enum:
      - _first
      - _last
  IndexSortMode:
    type: string
    description: null
    enum:
      - min
      - max
  IndexSortOrder:
    type: string
    description: null
    enum:
      - asc
      - desc
  FileSystemStorageImplementation:
    type: string
    description: null
    enum:
      - simplefs
      - niofs
      - mmapfs
      - default_fs
  TranslogDurability:
    type: string
    description: null
    enum:
      - request
      - async
  Normalization:
    type: string
    description: null
    enum:
      - 'no'
      - h1
      - h2
      - h3
      - z
  DFIIndependenceMeasure:
    type: string
    description: null
    enum:
      - standardized
      - saturated
      - chisquared
  DFRAfterEffect:
    type: string
    description: null
    enum:
      - 'no'
      - b
      - l
  DFRBasicModel:
    type: string
    description: null
    enum:
      - be
      - d
      - g
      - if
      - in
      - ine
      - p
  IBDistribution:
    type: string
    description: null
    enum:
      - ll
      - spl
  IBLambda:
    type: string
    description: null
    enum:
      - df
      - ttf
  ShardStoreAllocation:
    type: string
    description: null
    enum:
      - primary
      - replica
      - unused
  ConvertProcessorType:
    type: string
    description: null
    enum:
      - integer
      - float
      - string
      - boolean
      - auto
  DateRounding:
    type: string
    description: null
    enum:
      - s
      - m
      - h
      - d
      - w
      - M
      - 'y'
  UserAgentProperty:
    type: string
    description: null
    enum:
      - NAME
      - MAJOR
      - MINOR
      - PATCH
      - OS
      - OS_NAME
      - OS_MAJOR
      - OS_MINOR
      - DEVICE
      - BUILD
  DynamicMapping:
    type: string
    description: null
    enum:
      - strict
  SimilarityOption:
    type: string
    description: null
    enum:
      - classic
      - BM25
  TermVectorOption:
    type: string
    description: null
    enum:
      - 'no'
      - 'yes'
      - with_offsets
      - with_positions
      - with_positions_offsets
      - with_positions_offsets_payloads
  FieldType:
    type: string
    description: null
    enum:
      - none
      - geo_point
      - geo_shape
      - ip
      - binary
      - keyword
      - text
      - date
      - boolean
      - completion
      - nested
      - object
      - murmur3
      - token_count
      - percolator
      - integer
      - long
      - short
      - byte
      - float
      - half_float
      - scaled_float
      - double
      - integer_range
      - float_range
      - long_range
      - double_range
      - date_range
      - join
  NumberType:
    type: string
    description: null
    enum:
      - float
      - half_float
      - scaled_float
      - double
      - integer
      - long
      - short
      - byte
  RangeType:
    type: string
    description: null
    enum:
      - integer_range
      - float_range
      - long_range
      - double_range
      - date_range
  IndexOptions:
    type: string
    description: null
    enum:
      - docs
      - freqs
      - positions
      - offsets
  GeoOrientation:
    type: string
    description: null
    enum:
      - cw
      - ccw
  GeoStrategy:
    type: string
    description: null
    enum:
      - recursive
      - term
  GeoTree:
    type: string
    description: null
    enum:
      - geohash
      - quadtree
  AllocationEnable:
    type: string
    description: null
    enum:
      - all
      - primaries
      - new_primaries
      - none
  AllowRebalance:
    type: string
    description: null
    enum:
      - always
      - indices_primaries_active
      - indices_all_active
  RebalanceEnable:
    type: string
    description: null
    enum:
      - all
      - primaries
      - replicas
      - none
  FielddataLoading:
    type: string
    description: null
    enum:
      - eager
      - eager_global_ordinals
  GeoPointFielddataFormat:
    type: string
    description: null
    enum:
      - array
      - doc_values
      - compressed
      - disabled
  NumericFielddataFormat:
    type: string
    description: null
    enum:
      - array
      - disabled
  StringFielddataFormat:
    type: string
    description: null
    enum:
      - paged_bytes
      - disabled
  ScriptLang:
    type: string
    description: null
    enum:
      - painless
      - expression
      - mustache
  Operator:
    type: string
    description: null
    enum:
      - and
      - or
  FunctionBoostMode:
    type: string
    description: null
    enum:
      - multiply
      - replace
      - sum
      - avg
      - max
      - min
  FunctionScoreMode:
    type: string
    description: null
    enum:
      - multiply
      - sum
      - avg
      - first
      - max
      - min
  MultiValueMode:
    type: string
    description: null
    enum:
      - min
      - max
      - avg
      - sum
  FieldValueFactorModifier:
    type: string
    description: null
    enum:
      - none
      - log
      - log1p
      - log2p
      - ln
      - ln1p
      - ln2p
      - square
      - sqrt
      - reciprocal
  TextQueryType:
    type: string
    description: null
    enum:
      - best_fields
      - most_fields
      - cross_fields
      - phrase
      - phrase_prefix
  ZeroTermsQuery:
    type: string
    description: null
    enum:
      - all
      - none
  SimpleQueryStringFlags:
    type: string
    description: null
    enum:
      - NONE
      - AND
      - OR
      - NOT
      - PREFIX
      - PHRASE
      - PRECEDENCE
      - ESCAPE
      - WHITESPACE
      - FUZZY
      - NEAR
      - SLOP
      - ALL
  GeoValidationMethod:
    type: string
    description: null
    enum:
      - coerce
      - ignore_malformed
      - strict
  GeoExecution:
    type: string
    description: null
    enum:
      - memory
      - indexed
  ChildScoreMode:
    type: string
    description: null
    enum:
      - none
      - avg
      - sum
      - max
      - min
  NestedScoreMode:
    type: string
    description: null
    enum:
      - avg
      - sum
      - min
      - max
      - none
  RewriteMultiTerm:
    type: string
    description: null
    enum:
      - constant_score
      - scoring_boolean
      - constant_score_boolean
      - top_terms_N
      - top_terms_boost_N
      - top_terms_blended_freqs_N
  RangeRelation:
    type: string
    description: null
    enum:
      - within
      - contains
      - intersects
  VisitorScope:
    type: string
    description: null
    enum:
      - Unknown
      - Query
      - Filter
      - Must
      - MustNot
      - Should
      - PositiveQuery
      - NegativeQuery
      - Span
  BoundaryScanner:
    type: string
    description: null
    enum:
      - chars
      - sentence
      - word
  HighlighterEncoder:
    type: string
    description: null
    enum:
      - default
      - html
  HighlighterFragmenter:
    type: string
    description: null
    enum:
      - simple
      - span
  HighlighterOrder:
    type: string
    description: null
    enum:
      - score
  HighlighterTagsSchema:
    type: string
    description: null
    enum:
      - styled
  HighlighterType:
    type: string
    description: null
    enum:
      - plain
      - fvh
      - unified
  ScoreMode:
    type: string
    description: null
    enum:
      - avg
      - max
      - min
      - multiply
      - total
  SortMode:
    type: string
    description: null
    enum:
      - min
      - max
      - sum
      - avg
  SortOrder:
    type: string
    description: null
    enum:
      - asc
      - desc
  SortSpecialField:
    type: string
    description: null
    enum:
      - _score
      - _doc
  StringDistance:
    type: string
    description: null
    enum:
      - internal
      - damerau_levenshtein
      - levenstein
      - jarowinkler
      - ngram
  SuggestSort:
    type: string
    description: null
    enum:
      - score
      - frequency
  LicenseStatus:
    type: string
    description: null
    enum:
      - active
      - valid
      - invalid
      - expired
  LicenseType:
    type: string
    description: null
    enum:
      - missing
      - trial
      - basic
      - standard
      - dev
      - silver
      - gold
      - platinum
  ChunkingMode:
    type: string
    description: null
    enum:
      - auto
      - manual
      - 'off'
  DatafeedState:
    type: string
    description: null
    enum:
      - started
      - stopped
      - starting
      - stopping
  JobState:
    type: string
    description: null
    enum:
      - closing
      - closed
      - opened
      - failed
      - opening
  MemoryStatus:
    type: string
    description: null
    enum:
      - ok
      - soft_limit
      - hard_limit
  CountFunction:
    type: string
    description: null
    enum:
      - Count
      - HighCount
      - LowCount
  DistinctCountFunction:
    type: string
    description: null
    enum:
      - DistinctCount
      - LowDistinctCount
      - HighDistinctCount
  GeographicFunction:
    type: string
    description: null
    enum:
      - LatLong
  InfoContentFunction:
    type: string
    description: null
    enum:
      - InfoContent
      - HighInfoContent
      - LowInfoContent
  MetricFunction:
    type: string
    description: null
    enum:
      - Min
      - Max
      - Median
      - HighMedian
      - LowMedian
      - Mean
      - HighMean
      - LowMean
      - Metric
      - Varp
      - HighVarp
      - LowVarp
  NonNullSumFunction:
    type: string
    description: null
    enum:
      - NonNullSum
      - HighNonNullSum
      - LowNonNullSum
  NonZeroCountFunction:
    type: string
    description: null
    enum:
      - NonZeroCount
      - LowNonZeroCount
      - HighNonZeroCount
  RareFunction:
    type: string
    description: null
    enum:
      - Rare
      - FreqRare
  SumFunction:
    type: string
    description: null
    enum:
      - Sum
      - HighSum
      - LowSum
  TimeFunction:
    type: string
    description: null
    enum:
      - TimeOfDay
      - TimeOfWeek
  ExcludeFrequent:
    type: string
    description: null
    enum:
      - all
      - none
      - by
      - over
  DeprecationWarningLevel:
    type: string
    description: null
    enum:
      - none
      - info
      - warning
      - critical
  AccessTokenGrantType:
    type: string
    description: null
    enum:
      - password
  AcknowledgementState:
    type: string
    description: null
    enum:
      - awaits_successful_execution
      - ackable
      - acked
  ActionType:
    type: string
    description: null
    enum:
      - email
      - webhook
      - index
      - logging
      - hipchat
      - slack
      - pagerduty
  DataAttachmentFormat:
    type: string
    description: null
    enum:
      - json
      - yaml
  EmailPriority:
    type: string
    description: null
    enum:
      - lowest
      - low
      - normal
      - high
      - highest
  HipChatMessageColor:
    type: string
    description: null
    enum:
      - gray
      - green
      - purple
      - red
      - yellow
  HipChatMessageFormat:
    type: string
    description: null
    enum:
      - html
      - text
  PagerDutyContextType:
    type: string
    description: null
    enum:
      - link
      - image
  PagerDutyEventType:
    type: string
    description: null
    enum:
      - trigger
      - resolve
      - acknowledge
  ConditionType:
    type: string
    description: null
    enum:
      - always
      - never
      - script
      - compare
      - array_compare
  Quantifier:
    type: string
    description: null
    enum:
      - some
      - all
  ActionExecutionState:
    type: string
    description: null
    enum:
      - awaits_execution
      - checking
      - execution_not_needed
      - throttled
      - executed
      - failed
      - deleted_while_queued
      - not_executed_already_queued
  ActionExecutionMode:
    type: string
    description: null
    enum:
      - simulate
      - force_simulate
      - execute
      - force_execute
      - skip
  Status:
    type: string
    description: null
    enum:
      - success
      - failure
      - simulated
      - throttled
  ConnectionScheme:
    type: string
    description: null
    enum:
      - http
      - https
  HttpInputMethod:
    type: string
    description: null
    enum:
      - head
      - get
      - post
      - put
      - delete
  InputType:
    type: string
    description: null
    enum:
      - http
      - search
      - simple
  ResponseContentType:
    type: string
    description: null
    enum:
      - json
      - yaml
      - text
  Day:
    type: string
    description: null
    enum:
      - sunday
      - monday
      - tuesday
      - wednesday
      - thursday
      - friday
      - saturday
  IntervalUnit:
    type: string
    description: null
    enum:
      - s
      - m
      - h
      - d
      - w
  Month:
    type: string
    description: null
    enum:
      - january
      - february
      - march
      - april
      - may
      - june
      - july
      - august
      - september
      - october
      - november
      - december
  ExecutionPhase:
    type: string
    description: null
    enum:
      - awaits_execution
      - started
      - input
      - condition
      - actions
      - watch_transform
      - aborted
      - finished
  WatcherState:
    type: string
    description: null
    enum:
      - stopped
      - starting
      - started
      - stopping
