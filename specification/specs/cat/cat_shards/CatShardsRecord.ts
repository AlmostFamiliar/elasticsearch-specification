class CatShardsRecord implements ICatRecord {
	index: string;
	shard: string;
	prirep: string;
	state: string;
	docs: string;
	store: string;
	ip: string;
	id: string;
	node: string;
	'completion.size': string;
	'fielddata.memory_size': string;
	'fielddata.evictions': string;
	'filter_cache.memory_size': string;
	'flush.total': string;
	'flush.total_time': string;
	'get.current': string;
	'get.time': string;
	'get.total': string;
	'get.exists_time': string;
	'get.exists_total': string;
	'get.missing_time': string;
	'get.missing_total': string;
	'id_cache.memory_size': string;
	'indexing.delete_current': string;
	'indexing.delete_time': string;
	'indexing.delete_total': string;
	'indexing.index_current': string;
	'indexing.index_time': string;
	'indexing.index_total': string;
	'merges.current': string;
	'merges.current_docs': string;
	'merges.current_size': string;
	'merges.total_docs': string;
	'merges.total_size': string;
	'merges.total_time': string;
	'percolate.current': string;
	'percolate.memory_size': string;
	'percolate.queries': string;
	'percolate.time': string;
	'percolate.total': string;
	'refresh.total': string;
	'refresh.time': string;
	'search.fetch_current': string;
	'search.fetch_time': string;
	'search.fetch_total': string;
	'search.open_contexts': string;
	'search.query_current': string;
	'search.query_time': string;
	'search.query_total': string;
	'segments.count': string;
	'segments.memory': string;
	'segments.index_writer_memory': string;
	'segments.index_writer_max_memory': string;
	'segments.version_map_memory': string;
	'segments.fixed_bitset_memory': string;
	'warmer.current': string;
	'warmer.total': string;
	'warmer.total_time': string;
}
