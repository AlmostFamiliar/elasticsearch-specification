@rest_spec_name("async_search.submit")
class AsyncSearchSubmitRequest extends RequestBase {
	allow_no_indices: boolean;
	allow_partial_search_results: boolean;
	analyze_wildcard: boolean;
	analyzer: string;
	batched_reduce_size: long;
	default_operator: DefaultOperator;
	df: string;
	expand_wildcards: ExpandWildcards;
	ignore_throttled: boolean;
	ignore_unavailable: boolean;
	keep_alive: Time;
	keep_on_completion: boolean;
	lenient: boolean;
	max_concurrent_shard_requests: long;
	preference: string;
	query_on_query_string: string;
	request_cache: boolean;
	routing: Routing;
	search_type: SearchType;
	sequence_number_primary_term: boolean;
	stats: string[];
	suggest_field: Field;
	suggest_mode: SuggestMode;
	suggest_size: long;
	suggest_text: string;
	typed_keys: boolean;
	wait_for_completion_timeout: Time;
	aggs: Dictionary<string, AggregationContainer>;
	collapse: FieldCollapse;
	docvalue_fields: Field[];
	explain: boolean;
	from: integer;
	highlight: Highlight;
	indices_boost: Dictionary<IndexName, double>;
	min_score: double;
	post_filter: QueryContainer;
	profile: boolean;
	query: QueryContainer;
	rescore: Rescore[];
	script_fields: Dictionary<string, ScriptField>;
	search_after: any[];
	size: integer;
	sort: Sort[];
	_source: Union<boolean, SourceFilter>;
	stored_fields: Field[];
	suggest: Dictionary<string, SuggestBucket>;
	terminate_after: long;
	timeout: string;
	track_scores: boolean;
	track_total_hits: boolean;
	version: boolean;
}
